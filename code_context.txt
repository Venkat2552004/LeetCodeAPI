// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\dailyProblem.json
{
  "data": {
    "activeDailyCodingChallengeQuestion": {
      "date": "2024-03-14",
      "link": "/problems/binary-subarrays-with-sum/",
      "question": {
        "questionId": "966",
        "questionFrontendId": "930",
        "boundTopicId": null,
        "title": "Binary Subarrays With Sum",
        "titleSlug": "binary-subarrays-with-sum",
        "content": "<p>Given a binary array <code>nums</code> and an integer <code>goal</code>, return <em>the number of non-empty <strong>subarrays</strong> with a sum</em> <code>goal</code>.</p>\r\n\r\n<p>A <strong>subarray</strong> is a contiguous part of the array.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong class=\"example\">Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> nums = [1,0,1,0,1], goal = 2\r\n<strong>Output:</strong> 4\r\n<strong>Explanation:</strong> The 4 subarrays are bolded and underlined below:\r\n[<u><strong>1,0,1</strong></u>,0,1]\r\n[<u><strong>1,0,1,0</strong></u>,1]\r\n[1,<u><strong>0,1,0,1</strong></u>]\r\n[1,0,<u><strong>1,0,1</strong></u>]\r\n</pre>\r\n\r\n<p><strong class=\"example\">Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> nums = [0,0,0,0,0], goal = 0\r\n<strong>Output:</strong> 15\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= nums.length &lt;= 3 * 10<sup>4</sup></code></li>\r\n\t<li><code>nums[i]</code> is either <code>0</code> or <code>1</code>.</li>\r\n\t<li><code>0 &lt;= goal &lt;= nums.length</code></li>\r\n</ul>",
        "translatedTitle": null,
        "translatedContent": null,
        "isPaidOnly": false,
        "difficulty": "Medium",
        "likes": 3592,
        "dislikes": 120,
        "isLiked": null,
        "similarQuestions": "[{\"title\": \"Count Subarrays With Score Less Than K\", \"titleSlug\": \"count-subarrays-with-score-less-than-k\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Ways to Split Array Into Good Subarrays\", \"titleSlug\": \"ways-to-split-array-into-good-subarrays\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "exampleTestcases": "[1,0,1,0,1]\n2\n[0,0,0,0,0]\n0",
        "contributors": [],
        "topicTags": [
          { "name": "Array", "slug": "array", "translatedName": null },
          {
            "name": "Hash Table",
            "slug": "hash-table",
            "translatedName": null
          },
          {
            "name": "Sliding Window",
            "slug": "sliding-window",
            "translatedName": null
          },
          { "name": "Prefix Sum", "slug": "prefix-sum", "translatedName": null }
        ],
        "companyTagStats": null,
        "codeSnippets": [
          {
            "lang": "C++",
            "langSlug": "cpp",
            "code": "class Solution {\r\npublic:\r\n    int numSubarraysWithSum(vector<int>& nums, int goal) {\r\n        \r\n    }\r\n};"
          },
          {
            "lang": "Java",
            "langSlug": "java",
            "code": "class Solution {\r\n    public int numSubarraysWithSum(int[] nums, int goal) {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Python",
            "langSlug": "python",
            "code": "class Solution(object):\r\n    def numSubarraysWithSum(self, nums, goal):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :type goal: int\r\n        :rtype: int\r\n        \"\"\""
          },
          {
            "lang": "Python3",
            "langSlug": "python3",
            "code": "class Solution:\r\n    def numSubarraysWithSum(self, nums: List[int], goal: int) -> int:"
          },
          {
            "lang": "C",
            "langSlug": "c",
            "code": "int numSubarraysWithSum(int* nums, int numsSize, int goal){\r\n\r\n}"
          },
          {
            "lang": "C#",
            "langSlug": "csharp",
            "code": "public class Solution {\r\n    public int NumSubarraysWithSum(int[] nums, int goal) {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "JavaScript",
            "langSlug": "javascript",
            "code": "/**\r\n * @param {number[]} nums\r\n * @param {number} goal\r\n * @return {number}\r\n */\r\nvar numSubarraysWithSum = function(nums, goal) {\r\n    \r\n};"
          },
          {
            "lang": "TypeScript",
            "langSlug": "typescript",
            "code": "function numSubarraysWithSum(nums: number[], goal: number): number {\r\n\r\n};"
          },
          {
            "lang": "PHP",
            "langSlug": "php",
            "code": "class Solution {\r\n\r\n    /**\r\n     * @param Integer[] $nums\r\n     * @param Integer $goal\r\n     * @return Integer\r\n     */\r\n    function numSubarraysWithSum($nums, $goal) {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Swift",
            "langSlug": "swift",
            "code": "class Solution {\r\n    func numSubarraysWithSum(_ nums: [Int], _ goal: Int) -> Int {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Kotlin",
            "langSlug": "kotlin",
            "code": "class Solution {\r\n    fun numSubarraysWithSum(nums: IntArray, goal: Int): Int {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Go",
            "langSlug": "golang",
            "code": "func numSubarraysWithSum(nums []int, goal int) int {\r\n    \r\n}"
          },
          {
            "lang": "Ruby",
            "langSlug": "ruby",
            "code": "# @param {Integer[]} nums\r\n# @param {Integer} goal\r\n# @return {Integer}\r\ndef num_subarrays_with_sum(nums, goal)\r\n    \r\nend"
          },
          {
            "lang": "Scala",
            "langSlug": "scala",
            "code": "object Solution {\r\n    def numSubarraysWithSum(nums: Array[Int], goal: Int): Int = {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Rust",
            "langSlug": "rust",
            "code": "impl Solution {\r\n    pub fn num_subarrays_with_sum(nums: Vec<i32>, goal: i32) -> i32 {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Racket",
            "langSlug": "racket",
            "code": "(define/contract (num-subarrays-with-sum nums goal)\r\n  (-> (listof exact-integer?) exact-integer? exact-integer?)\r\n\r\n  )"
          }
        ],
        "stats": "{\"totalAccepted\": \"203.9K\", \"totalSubmission\": \"330.4K\", \"totalAcceptedRaw\": 203936, \"totalSubmissionRaw\": 330374, \"acRate\": \"61.7%\"}",
        "hints": [],
        "solution": {
          "id": "2266",
          "canSeeDetail": true,
          "paidOnly": false,
          "hasVideoSolution": false,
          "paidOnlyVideo": true
        },
        "status": null,
        "sampleTestCase": "[1,0,1,0,1]\n2",
        "metaData": "{\n  \"name\": \"numSubarraysWithSum\",\n  \"params\": [\n    {\n      \"name\": \"nums\",\n      \"type\": \"integer[]\"\n    },\n    {\n      \"name\": \"goal\",\n      \"type\": \"integer\"\n    }\n  ],\n  \"return\": {\n    \"type\": \"integer\"\n  }\n}",
        "judgerAvailable": true,
        "judgeType": "large",
        "mysqlSchemas": [],
        "enableRunCode": true,
        "enableTestMode": false,
        "enableDebugger": true,
        "envInfo": "{\"cpp\": [\"C++\", \"<p>Compiled with <code> clang 17 </code> using the latest C++ 20 standard, and <code>libstdc++</code> provided by GCC 11.</p>\\r\\n\\r\\n<p>Your code is compiled with level two optimization (<code>-O2</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"java\": [\"Java\", \"<p><code>OpenJDK 21</code>. Using compile arguments: <code>--enable-preview --release 21</code></p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n<p>Includes <code>Pair</code> class from https://docs.oracle.com/javase/8/javafx/api/javafx/util/Pair.html.</p>\"], \"python\": [\"Python\", \"<p><code>Python 2.7.12</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\\r\\n\\r\\n<p>Note that Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">will not be maintained past 2020</a>. For the latest Python, please choose Python3 instead.</p>\"], \"c\": [\"C\", \"<p>Compiled with <code>gcc 11</code> using the gnu11 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O2</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n\\r\\n<p>For hash table operations, you may use <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>. \\\"uthash.h\\\" is included by default. Below are some examples:</p>\\r\\n\\r\\n<p><b>1. Adding an item to a hash.</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. Looking up an item in a hash:</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. Deleting an item in a hash:</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p><a href=\\\"https://learn.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-12\\\" target=\\\"_blank\\\">C# 12</a> with .NET 8 runtime</p>\"], \"javascript\": [\"JavaScript\", \"<p><code>Node.js 20.10.0</code>.</p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES6 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\\r\\n\\r\\n<p>For Priority Queue / Queue data structures, you may use 5.4.0 version of <a href=\\\"https://github.com/datastructures-js/priority-queue/blob/v5/README.md\\\" target=\\\"_blank\\\">datastructures-js/priority-queue</a> and 4.2.3 version of <a href=\\\"https://github.com/datastructures-js/queue/tree/v4.2.3\\\" target=\\\"_blank\\\">datastructures-js/queue</a>.</p>\"], \"ruby\": [\"Ruby\", \"<p><code>Ruby 3.2</code></p>\\r\\n\\r\\n<p>Some common data structure implementations are provided in the Algorithms module: https://www.rubydoc.info/github/kanwei/algorithms/Algorithms</p>\"], \"swift\": [\"Swift\", \"<p><code>Swift 5.9</code>.</p>\\r\\n\\r\\n<p>You may use <a href=\\\"https://github.com/apple/swift-algorithms/tree/1.2.0\\\" target=\\\"_blank\\\">swift-algorithms 1.2.0</a> and <a href=\\\"https://github.com/apple/swift-collections/tree/1.0.6\\\" target=\\\"_blank\\\">swift-collections 1.0.6</a>.</p>\"], \"golang\": [\"Go\", \"<p><code>Go 1.21</code></p>\\r\\n<p>Support <a href=\\\"https://github.com/emirpasic/gods/tree/v1.18.1\\\" target=\\\"_blank\\\">https://godoc.org/github.com/emirpasic/gods@v1.18.1</a> library.</p>\"], \"python3\": [\"Python3\", \"<p><code>Python 3.11</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\"], \"scala\": [\"Scala\", \"<p><code>Scala 3.3.1</code>.</p>\"], \"kotlin\": [\"Kotlin\", \"<p><code>Kotlin 1.9.0</code>.</p>\\r\\n\\r\\n<p>We are using an experimental compiler provided by JetBrains.</p>\"], \"rust\": [\"Rust\", \"<p><code>Rust 1.74.1</code></p>\\r\\n\\r\\n<p>Supports <a href=\\\"https://crates.io/crates/rand\\\" target=\\\"_blank\\\">rand </a> v0.6\\u00a0from crates.io</p>\"], \"php\": [\"PHP\", \"<p><code>PHP 8.2</code>.</p>\\r\\n<p>With bcmath module</p>\"], \"typescript\": [\"Typescript\", \"<p><code>TypeScript 5.1.6, Node.js 20.10.0</code>.</p>\\r\\n\\r\\n<p>Compile Options: <code>--alwaysStrict --strictBindCallApply --strictFunctionTypes --target ES2022</code></p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES2022 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\"], \"racket\": [\"Racket\", \"<p><a href=\\\"https://docs.racket-lang.org/guide/performance.html#%28tech._c%29\\\" target=\\\"_blank\\\">Racket CS</a> v8.11</p>\\r\\n\\r\\n<p>Using <code>#lang racket</code></p>\\r\\n\\r\\n<p>Required <code>data/gvector data/queue data/order data/heap</code> automatically for your convenience</p>\"]}",
        "libraryUrl": null,
        "adminUrl": null,
        "challengeQuestion": {
          "id": "1692",
          "date": "2024-03-14",
          "incompleteChallengeCount": 0,
          "streakCount": 0,
          "type": "DAILY"
        },
        "note": null
      }
    }
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\index.ts
export { default as singleUser } from './singleUser.json';
export { default as recentSubmissions } from './recentSubmissions.json';
export { default as recentACSubmissions } from './recentAcSubmissionList.json';
export { default as singleUserContests } from './singleUserContests.json';
export { default as dailyProblem } from './dailyProblem.json';
export { default as problems } from './problems.json';
export { default as selectProblem } from './selectProblem.json';

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\problems.json
{
  "data": {
    "problemsetQuestionList": {
      "total": 3078,
      "questions": [
        {
          "acRate": 52.09288098160903,
          "difficulty": "Easy",
          "freqBar": null,
          "questionFrontendId": "1",
          "isFavor": false,
          "isPaidOnly": false,
          "status": null,
          "title": "Two Sum",
          "titleSlug": "two-sum",
          "topicTags": [
            { "name": "Array", "id": "VG9waWNUYWdOb2RlOjU=", "slug": "array" },
            {
              "name": "Hash Table",
              "id": "VG9waWNUYWdOb2RlOjY=",
              "slug": "hash-table"
            }
          ],
          "hasSolution": true,
          "hasVideoSolution": true
        }
      ]
    }
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\recentAcSubmissionList.json
{
  "data": {
    "recentAcSubmissionList": [
      {
        "title": "Generate a String With Characters That Have Odd Counts",
        "titleSlug": "generate-a-string-with-characters-that-have-odd-counts",
        "timestamp": "1705161771",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Count Negative Numbers in a Sorted Matrix",
        "titleSlug": "count-negative-numbers-in-a-sorted-matrix",
        "timestamp": "1705161438",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Check If N and Its Double Exist",
        "titleSlug": "check-if-n-and-its-double-exist",
        "timestamp": "1705161205",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Determine if String Halves Are Alike",
        "titleSlug": "determine-if-string-halves-are-alike",
        "timestamp": "1705032551",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343666",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Sort Array By Parity",
        "titleSlug": "sort-array-by-parity",
        "timestamp": "1704316936",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Convert an Array Into a 2D Array With Conditions",
        "titleSlug": "convert-an-array-into-a-2d-array-with-conditions",
        "timestamp": "1704261617",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Average Value of Even Numbers That Are Divisible by Three",
        "titleSlug": "average-value-of-even-numbers-that-are-divisible-by-three",
        "timestamp": "1704259967",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Number of Laser Beams in a Bank",
        "titleSlug": "number-of-laser-beams-in-a-bank",
        "timestamp": "1704256409",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Take Gifts From the Richest Pile",
        "titleSlug": "take-gifts-from-the-richest-pile",
        "timestamp": "1704252901",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Decompress Run-Length Encoded List",
        "titleSlug": "decompress-run-length-encoded-list",
        "timestamp": "1704236706",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Make Array Zero by Subtracting Equal Amounts",
        "titleSlug": "make-array-zero-by-subtracting-equal-amounts",
        "timestamp": "1704234483",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Remove One Element to Make the Array Strictly Increasing",
        "titleSlug": "remove-one-element-to-make-the-array-strictly-increasing",
        "timestamp": "1704228445",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Check if All A's Appears Before All B's",
        "titleSlug": "check-if-all-as-appears-before-all-bs",
        "timestamp": "1704223378",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Contains Duplicate II",
        "titleSlug": "contains-duplicate-ii",
        "timestamp": "1704222499",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Pascal's Triangle",
        "titleSlug": "pascals-triangle",
        "timestamp": "1704219156",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Make Array Zero by Subtracting Equal Amounts",
        "titleSlug": "make-array-zero-by-subtracting-equal-amounts",
        "timestamp": "1704216984",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Apply Transform Over Each Element in Array",
        "titleSlug": "apply-transform-over-each-element-in-array",
        "timestamp": "1704215794",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Find the Difference",
        "titleSlug": "find-the-difference",
        "timestamp": "1702492842",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Monotonic Array",
        "titleSlug": "monotonic-array",
        "timestamp": "1702417451",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      }
    ]
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\recentSubmissions.json
{
  "data": {
    "recentSubmissionList": [
      {
        "title": "Generate a String With Characters That Have Odd Counts",
        "titleSlug": "generate-a-string-with-characters-that-have-odd-counts",
        "timestamp": "1705161771",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Count Negative Numbers in a Sorted Matrix",
        "titleSlug": "count-negative-numbers-in-a-sorted-matrix",
        "timestamp": "1705161438",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Count Negative Numbers in a Sorted Matrix",
        "titleSlug": "count-negative-numbers-in-a-sorted-matrix",
        "timestamp": "1705161424",
        "statusDisplay": "Runtime Error",
        "lang": "javascript"
      },
      {
        "title": "Check If N and Its Double Exist",
        "titleSlug": "check-if-n-and-its-double-exist",
        "timestamp": "1705161205",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Check If N and Its Double Exist",
        "titleSlug": "check-if-n-and-its-double-exist",
        "timestamp": "1705161123",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Steps to Make Two Strings Anagram",
        "titleSlug": "minimum-number-of-steps-to-make-two-strings-anagram",
        "timestamp": "1705160304",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Determine if String Halves Are Alike",
        "titleSlug": "determine-if-string-halves-are-alike",
        "timestamp": "1705032551",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Longest Increasing Subsequence",
        "titleSlug": "longest-increasing-subsequence",
        "timestamp": "1704442672",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Longest Increasing Subsequence",
        "titleSlug": "longest-increasing-subsequence",
        "timestamp": "1704440871",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Longest Increasing Subsequence",
        "titleSlug": "longest-increasing-subsequence",
        "timestamp": "1704439843",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343666",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343585",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343426",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343413",
        "statusDisplay": "Runtime Error",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343387",
        "statusDisplay": "Runtime Error",
        "lang": "javascript"
      },
      {
        "title": "Sort Array By Parity",
        "titleSlug": "sort-array-by-parity",
        "timestamp": "1704316936",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Convert an Array Into a 2D Array With Conditions",
        "titleSlug": "convert-an-array-into-a-2d-array-with-conditions",
        "timestamp": "1704261617",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Convert an Array Into a 2D Array With Conditions",
        "titleSlug": "convert-an-array-into-a-2d-array-with-conditions",
        "timestamp": "1704261566",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Convert an Array Into a 2D Array With Conditions",
        "titleSlug": "convert-an-array-into-a-2d-array-with-conditions",
        "timestamp": "1704261530",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Average Value of Even Numbers That Are Divisible by Three",
        "titleSlug": "average-value-of-even-numbers-that-are-divisible-by-three",
        "timestamp": "1704259967",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      }
    ]
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\selectProblem.json
{
  "data": {
    "question": {
      "questionId": "1",
      "questionFrontendId": "1",
      "boundTopicId": null,
      "title": "Two Sum",
      "titleSlug": "two-sum",
      "content": "<p>Given an array of integers <code>nums</code>&nbsp;and an integer <code>target</code>, return <em>indices of the two numbers such that they add up to <code>target</code></em>.</p>\n\n<p>You may assume that each input would have <strong><em>exactly</em> one solution</strong>, and you may not use the <em>same</em> element twice.</p>\n\n<p>You can return the answer in any order.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,7,11,15], target = 9\n<strong>Output:</strong> [0,1]\n<strong>Explanation:</strong> Because nums[0] + nums[1] == 9, we return [0, 1].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,2,4], target = 6\n<strong>Output:</strong> [1,2]\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,3], target = 6\n<strong>Output:</strong> [0,1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= target &lt;= 10<sup>9</sup></code></li>\n\t<li><strong>Only one valid answer exists.</strong></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow-up:&nbsp;</strong>Can you come up with an algorithm that is less than <code>O(n<sup>2</sup>)</code><font face=\"monospace\">&nbsp;</font>time complexity?",
      "translatedTitle": null,
      "translatedContent": null,
      "isPaidOnly": false,
      "difficulty": "Easy",
      "likes": 55371,
      "dislikes": 1901,
      "isLiked": null,
      "similarQuestions": "[{\"title\": \"3Sum\", \"titleSlug\": \"3sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"4Sum\", \"titleSlug\": \"4sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Two Sum II - Input Array Is Sorted\", \"titleSlug\": \"two-sum-ii-input-array-is-sorted\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Two Sum III - Data structure design\", \"titleSlug\": \"two-sum-iii-data-structure-design\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Subarray Sum Equals K\", \"titleSlug\": \"subarray-sum-equals-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Two Sum IV - Input is a BST\", \"titleSlug\": \"two-sum-iv-input-is-a-bst\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Two Sum Less Than K\", \"titleSlug\": \"two-sum-less-than-k\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Max Number of K-Sum Pairs\", \"titleSlug\": \"max-number-of-k-sum-pairs\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Good Meals\", \"titleSlug\": \"count-good-meals\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Number of Pairs With Absolute Difference K\", \"titleSlug\": \"count-number-of-pairs-with-absolute-difference-k\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Number of Pairs of Strings With Concatenation Equal to Target\", \"titleSlug\": \"number-of-pairs-of-strings-with-concatenation-equal-to-target\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find All K-Distant Indices in an Array\", \"titleSlug\": \"find-all-k-distant-indices-in-an-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"First Letter to Appear Twice\", \"titleSlug\": \"first-letter-to-appear-twice\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Number of Excellent Pairs\", \"titleSlug\": \"number-of-excellent-pairs\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Number of Arithmetic Triplets\", \"titleSlug\": \"number-of-arithmetic-triplets\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Node With Highest Edge Score\", \"titleSlug\": \"node-with-highest-edge-score\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Check Distances Between Same Letters\", \"titleSlug\": \"check-distances-between-same-letters\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find Subarrays With Equal Sum\", \"titleSlug\": \"find-subarrays-with-equal-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Largest Positive Integer That Exists With Its Negative\", \"titleSlug\": \"largest-positive-integer-that-exists-with-its-negative\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Number of Distinct Averages\", \"titleSlug\": \"number-of-distinct-averages\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Count Pairs Whose Sum is Less than Target\", \"titleSlug\": \"count-pairs-whose-sum-is-less-than-target\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
      "exampleTestcases": "[2,7,11,15]\n9\n[3,2,4]\n6\n[3,3]\n6",
      "contributors": [],
      "topicTags": [
        { "name": "Array", "slug": "array", "translatedName": null },
        { "name": "Hash Table", "slug": "hash-table", "translatedName": null }
      ],
      "companyTagStats": null,
      "codeSnippets": [
        {
          "lang": "C++",
          "langSlug": "cpp",
          "code": "class Solution {\npublic:\n    vector<int> twoSum(vector<int>& nums, int target) {\n        \n    }\n};"
        },
        {
          "lang": "Java",
          "langSlug": "java",
          "code": "class Solution {\n    public int[] twoSum(int[] nums, int target) {\n        \n    }\n}"
        },
        {
          "lang": "Python",
          "langSlug": "python",
          "code": "class Solution(object):\n    def twoSum(self, nums, target):\n        \"\"\"\n        :type nums: List[int]\n        :type target: int\n        :rtype: List[int]\n        \"\"\"\n        "
        },
        {
          "lang": "Python3",
          "langSlug": "python3",
          "code": "class Solution:\n    def twoSum(self, nums: List[int], target: int) -> List[int]:\n        "
        },
        {
          "lang": "C",
          "langSlug": "c",
          "code": "/**\n * Note: The returned array must be malloced, assume caller calls free().\n */\nint* twoSum(int* nums, int numsSize, int target, int* returnSize) {\n    \n}"
        },
        {
          "lang": "C#",
          "langSlug": "csharp",
          "code": "public class Solution {\n    public int[] TwoSum(int[] nums, int target) {\n        \n    }\n}"
        },
        {
          "lang": "JavaScript",
          "langSlug": "javascript",
          "code": "/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nvar twoSum = function(nums, target) {\n    \n};"
        },
        {
          "lang": "TypeScript",
          "langSlug": "typescript",
          "code": "function twoSum(nums: number[], target: number): number[] {\n    \n};"
        },
        {
          "lang": "PHP",
          "langSlug": "php",
          "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @param Integer $target\n     * @return Integer[]\n     */\n    function twoSum($nums, $target) {\n        \n    }\n}"
        },
        {
          "lang": "Swift",
          "langSlug": "swift",
          "code": "class Solution {\n    func twoSum(_ nums: [Int], _ target: Int) -> [Int] {\n        \n    }\n}"
        },
        {
          "lang": "Kotlin",
          "langSlug": "kotlin",
          "code": "class Solution {\n    fun twoSum(nums: IntArray, target: Int): IntArray {\n        \n    }\n}"
        },
        {
          "lang": "Dart",
          "langSlug": "dart",
          "code": "class Solution {\n  List<int> twoSum(List<int> nums, int target) {\n    \n  }\n}"
        },
        {
          "lang": "Go",
          "langSlug": "golang",
          "code": "func twoSum(nums []int, target int) []int {\n    \n}"
        },
        {
          "lang": "Ruby",
          "langSlug": "ruby",
          "code": "# @param {Integer[]} nums\n# @param {Integer} target\n# @return {Integer[]}\ndef two_sum(nums, target)\n    \nend"
        },
        {
          "lang": "Scala",
          "langSlug": "scala",
          "code": "object Solution {\n    def twoSum(nums: Array[Int], target: Int): Array[Int] = {\n        \n    }\n}"
        },
        {
          "lang": "Rust",
          "langSlug": "rust",
          "code": "impl Solution {\n    pub fn two_sum(nums: Vec<i32>, target: i32) -> Vec<i32> {\n        \n    }\n}"
        },
        {
          "lang": "Racket",
          "langSlug": "racket",
          "code": "(define/contract (two-sum nums target)\n  (-> (listof exact-integer?) exact-integer? (listof exact-integer?))\n  )"
        },
        {
          "lang": "Erlang",
          "langSlug": "erlang",
          "code": "-spec two_sum(Nums :: [integer()], Target :: integer()) -> [integer()].\ntwo_sum(Nums, Target) ->\n  ."
        },
        {
          "lang": "Elixir",
          "langSlug": "elixir",
          "code": "defmodule Solution do\n  @spec two_sum(nums :: [integer], target :: integer) :: [integer]\n  def two_sum(nums, target) do\n    \n  end\nend"
        }
      ],
      "stats": "{\"totalAccepted\": \"12.6M\", \"totalSubmission\": \"24.1M\", \"totalAcceptedRaw\": 12566379, \"totalSubmissionRaw\": 24123031, \"acRate\": \"52.1%\"}",
      "hints": [
        "A really brute force way would be to search for all possible pairs of numbers but that would be too slow. Again, it's best to try out brute force solutions for just for completeness. It is from these brute force solutions that you can come up with optimizations.",
        "So, if we fix one of the numbers, say <code>x</code>, we have to scan the entire array to find the next number <code>y</code> which is <code>value - x</code> where value is the input parameter. Can we change our array somehow so that this search becomes faster?",
        "The second train of thought is, without changing the array, can we use additional space somehow? Like maybe a hash map to speed up the search?"
      ],
      "solution": {
        "id": "7",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": true,
        "paidOnlyVideo": false
      },
      "status": null,
      "sampleTestCase": "[2,7,11,15]\n9",
      "metaData": "{\n  \"name\": \"twoSum\",\n  \"params\": [\n    {\n      \"name\": \"nums\",\n      \"type\": \"integer[]\"\n    },\n    {\n      \"name\": \"target\",\n      \"type\": \"integer\"\n    }\n  ],\n  \"return\": {\n    \"type\": \"integer[]\",\n    \"size\": 2\n  },\n  \"manual\": false\n}",
      "judgerAvailable": true,
      "judgeType": "small",
      "mysqlSchemas": [],
      "enableRunCode": true,
      "enableTestMode": false,
      "enableDebugger": true,
      "envInfo": "{\"cpp\": [\"C++\", \"<p>Compiled with <code> clang 17 </code> using the latest C++ 20 standard, and <code>libstdc++</code> provided by GCC 11.</p>\\r\\n\\r\\n<p>Your code is compiled with level two optimization (<code>-O2</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"java\": [\"Java\", \"<p><code>OpenJDK 21</code>. Using compile arguments: <code>--enable-preview --release 21</code></p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n<p>Includes <code>Pair</code> class from https://docs.oracle.com/javase/8/javafx/api/javafx/util/Pair.html.</p>\"], \"python\": [\"Python\", \"<p><code>Python 2.7.12</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\\r\\n\\r\\n<p>Note that Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">will not be maintained past 2020</a>. For the latest Python, please choose Python3 instead.</p>\"], \"c\": [\"C\", \"<p>Compiled with <code>gcc 11</code> using the gnu11 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O2</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n\\r\\n<p>For hash table operations, you may use <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>. \\\"uthash.h\\\" is included by default. Below are some examples:</p>\\r\\n\\r\\n<p><b>1. Adding an item to a hash.</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. Looking up an item in a hash:</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. Deleting an item in a hash:</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p><a href=\\\"https://learn.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-12\\\" target=\\\"_blank\\\">C# 12</a> with .NET 8 runtime</p>\"], \"javascript\": [\"JavaScript\", \"<p><code>Node.js 20.10.0</code>.</p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES6 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\\r\\n\\r\\n<p>For Priority Queue / Queue data structures, you may use 5.4.0 version of <a href=\\\"https://github.com/datastructures-js/priority-queue/blob/v5/README.md\\\" target=\\\"_blank\\\">datastructures-js/priority-queue</a> and 4.2.3 version of <a href=\\\"https://github.com/datastructures-js/queue/tree/v4.2.3\\\" target=\\\"_blank\\\">datastructures-js/queue</a>.</p>\"], \"ruby\": [\"Ruby\", \"<p><code>Ruby 3.2</code></p>\\r\\n\\r\\n<p>Some common data structure implementations are provided in the Algorithms module: https://www.rubydoc.info/github/kanwei/algorithms/Algorithms</p>\"], \"swift\": [\"Swift\", \"<p><code>Swift 5.9</code>.</p>\\r\\n\\r\\n<p>You may use <a href=\\\"https://github.com/apple/swift-algorithms/tree/1.2.0\\\" target=\\\"_blank\\\">swift-algorithms 1.2.0</a> and <a href=\\\"https://github.com/apple/swift-collections/tree/1.0.6\\\" target=\\\"_blank\\\">swift-collections 1.0.6</a>.</p>\"], \"golang\": [\"Go\", \"<p><code>Go 1.21</code></p>\\r\\n<p>Support <a href=\\\"https://github.com/emirpasic/gods/tree/v1.18.1\\\" target=\\\"_blank\\\">https://godoc.org/github.com/emirpasic/gods@v1.18.1</a> library.</p>\"], \"python3\": [\"Python3\", \"<p><code>Python 3.11</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\"], \"scala\": [\"Scala\", \"<p><code>Scala 3.3.1</code>.</p>\"], \"kotlin\": [\"Kotlin\", \"<p><code>Kotlin 1.9.0</code>.</p>\\r\\n\\r\\n<p>We are using an experimental compiler provided by JetBrains.</p>\"], \"rust\": [\"Rust\", \"<p><code>Rust 1.74.1</code></p>\\r\\n\\r\\n<p>Supports <a href=\\\"https://crates.io/crates/rand\\\" target=\\\"_blank\\\">rand </a> v0.6\\u00a0from crates.io</p>\"], \"php\": [\"PHP\", \"<p><code>PHP 8.2</code>.</p>\\r\\n<p>With bcmath module</p>\"], \"typescript\": [\"Typescript\", \"<p><code>TypeScript 5.1.6, Node.js 20.10.0</code>.</p>\\r\\n\\r\\n<p>Compile Options: <code>--alwaysStrict --strictBindCallApply --strictFunctionTypes --target ES2022</code></p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES2022 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\"], \"racket\": [\"Racket\", \"<p><a href=\\\"https://docs.racket-lang.org/guide/performance.html#%28tech._c%29\\\" target=\\\"_blank\\\">Racket CS</a> v8.11</p>\\r\\n\\r\\n<p>Using <code>#lang racket</code></p>\\r\\n\\r\\n<p>Required <code>data/gvector data/queue data/order data/heap</code> automatically for your convenience</p>\"], \"erlang\": [\"Erlang\", \"Erlang/OTP 26\"], \"elixir\": [\"Elixir\", \"Elixir 1.15 with Erlang/OTP 26\"], \"dart\": [\"Dart\", \"<p>Dart 3.2</p>\\r\\n\\r\\n<p>Your code will be run directly without compiling</p>\"]}",
      "libraryUrl": null,
      "adminUrl": null,
      "challengeQuestion": null,
      "note": null
    }
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\singleUser.json
{
  "data": {
    "matchedUser": {
      "submissionCalendar": "{\"1704153600\": 24, \"1704240000\": 9, \"1704326400\": 5, \"1704412800\": 3, \"1705017600\": 1, \"1705104000\": 6, \"1699315200\": 46, \"1701302400\": 6, \"1701648000\": 24, \"1701734400\": 11, \"1702339200\": 29, \"1702425600\": 7}",
      "submitStats": {
        "totalSubmissionNum": [
          { "difficulty": "All", "count": 158, "submissions": 463 },
          { "difficulty": "Easy", "count": 131, "submissions": 388 },
          { "difficulty": "Medium", "count": 27, "submissions": 75 },
          { "difficulty": "Hard", "count": 0, "submissions": 0 }
        ],
        "acSubmissionNum": [
          { "difficulty": "All", "count": 133, "submissions": 215 },
          { "difficulty": "Easy", "count": 122, "submissions": 202 },
          { "difficulty": "Medium", "count": 11, "submissions": 13 },
          { "difficulty": "Hard", "count": 0, "submissions": 0 }
        ]
      },
      "username": "jambobjones",
      "githubUrl": "https://github.com/jambobjones",
      "twitterUrl": null,
      "linkedinUrl": null,
      "contributions": {
        "points": 115,
        "questionCount": 0,
        "testcaseCount": 0
      },
      "profile": {
        "realName": "Jambob Jones",
        "userAvatar": "https://assets.leetcode.com/users/jambobjones/avatar_1617850141.png",
        "birthday": null,
        "ranking": 630800,
        "reputation": 0,
        "websites": [],
        "countryName": null,
        "company": null,
        "school": null,
        "skillTags": [],
        "aboutMe": "",
        "starRating": 2
      },
      "badges": [],
      "upcomingBadges": [
        {
          "name": "Mar LeetCoding Challenge",
          "icon": "/static/images/badges/dcc-2024-3.png"
        }
      ],
      "activeBadge": null
    }
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\singleUserContests.json
{
  "data": {
    "userContestRanking": null,
    "userContestRankingHistory": [
      {
        "attended": false,
        "rating": 1500,
        "ranking": 0,
        "trendDirection": "NONE",
        "problemsSolved": 0,
        "totalProblems": 3,
        "finishTimeInSeconds": 0
      }
    ]
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\handlers.ts
import * as msw from 'msw';
import {
  singleUser,
  singleUserContests,
  recentSubmissions,
  recentACSubmissions,
  dailyProblem,
  problems,
  selectProblem,
} from './mockData';

export const handlers = [
  msw.http.post('https://leetcode.com/graphql', async (ctx) => {
    const test = await ctx.request.json();
    const typed = test as { query: string };
    if (typed.query.indexOf('getUserProfile') !== -1) {
      return msw.HttpResponse.json(singleUser);
    }

    if (typed.query.indexOf('getUserContestRanking') !== -1) {
      return msw.HttpResponse.json(singleUserContests);
    }

    if (typed.query.indexOf('getRecentSubmissions') !== -1) {
      return msw.HttpResponse.json(recentSubmissions);
    }

    if (typed.query.indexOf('getACSubmissions') !== -1) {
      return msw.HttpResponse.json(recentACSubmissions);
    }

    if (typed.query.indexOf('getDailyProblem') !== -1) {
      return msw.HttpResponse.json(dailyProblem);
    }

    if (typed.query.indexOf('getProblems') !== -1) {
      return msw.HttpResponse.json(problems);
    }

    if (typed.query.indexOf('selectProblem') !== -1) {
      return msw.HttpResponse.json(selectProblem);
    }

    return msw.HttpResponse.json({});
  }),
];

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\index.ts
import { setupServer } from 'msw/node';
import { handlers } from './handlers';

export const server = setupServer(...handlers);

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\dailyProblem.json
{
  "data": {
    "activeDailyCodingChallengeQuestion": {
      "date": "2024-03-14",
      "link": "/problems/binary-subarrays-with-sum/",
      "question": {
        "questionId": "966",
        "questionFrontendId": "930",
        "boundTopicId": null,
        "title": "Binary Subarrays With Sum",
        "titleSlug": "binary-subarrays-with-sum",
        "content": "<p>Given a binary array <code>nums</code> and an integer <code>goal</code>, return <em>the number of non-empty <strong>subarrays</strong> with a sum</em> <code>goal</code>.</p>\r\n\r\n<p>A <strong>subarray</strong> is a contiguous part of the array.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong class=\"example\">Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> nums = [1,0,1,0,1], goal = 2\r\n<strong>Output:</strong> 4\r\n<strong>Explanation:</strong> The 4 subarrays are bolded and underlined below:\r\n[<u><strong>1,0,1</strong></u>,0,1]\r\n[<u><strong>1,0,1,0</strong></u>,1]\r\n[1,<u><strong>0,1,0,1</strong></u>]\r\n[1,0,<u><strong>1,0,1</strong></u>]\r\n</pre>\r\n\r\n<p><strong class=\"example\">Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> nums = [0,0,0,0,0], goal = 0\r\n<strong>Output:</strong> 15\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= nums.length &lt;= 3 * 10<sup>4</sup></code></li>\r\n\t<li><code>nums[i]</code> is either <code>0</code> or <code>1</code>.</li>\r\n\t<li><code>0 &lt;= goal &lt;= nums.length</code></li>\r\n</ul>",
        "translatedTitle": null,
        "translatedContent": null,
        "isPaidOnly": false,
        "difficulty": "Medium",
        "likes": 3592,
        "dislikes": 120,
        "isLiked": null,
        "similarQuestions": "[{\"title\": \"Count Subarrays With Score Less Than K\", \"titleSlug\": \"count-subarrays-with-score-less-than-k\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Ways to Split Array Into Good Subarrays\", \"titleSlug\": \"ways-to-split-array-into-good-subarrays\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "exampleTestcases": "[1,0,1,0,1]\n2\n[0,0,0,0,0]\n0",
        "contributors": [],
        "topicTags": [
          { "name": "Array", "slug": "array", "translatedName": null },
          {
            "name": "Hash Table",
            "slug": "hash-table",
            "translatedName": null
          },
          {
            "name": "Sliding Window",
            "slug": "sliding-window",
            "translatedName": null
          },
          { "name": "Prefix Sum", "slug": "prefix-sum", "translatedName": null }
        ],
        "companyTagStats": null,
        "codeSnippets": [
          {
            "lang": "C++",
            "langSlug": "cpp",
            "code": "class Solution {\r\npublic:\r\n    int numSubarraysWithSum(vector<int>& nums, int goal) {\r\n        \r\n    }\r\n};"
          },
          {
            "lang": "Java",
            "langSlug": "java",
            "code": "class Solution {\r\n    public int numSubarraysWithSum(int[] nums, int goal) {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Python",
            "langSlug": "python",
            "code": "class Solution(object):\r\n    def numSubarraysWithSum(self, nums, goal):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :type goal: int\r\n        :rtype: int\r\n        \"\"\""
          },
          {
            "lang": "Python3",
            "langSlug": "python3",
            "code": "class Solution:\r\n    def numSubarraysWithSum(self, nums: List[int], goal: int) -> int:"
          },
          {
            "lang": "C",
            "langSlug": "c",
            "code": "int numSubarraysWithSum(int* nums, int numsSize, int goal){\r\n\r\n}"
          },
          {
            "lang": "C#",
            "langSlug": "csharp",
            "code": "public class Solution {\r\n    public int NumSubarraysWithSum(int[] nums, int goal) {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "JavaScript",
            "langSlug": "javascript",
            "code": "/**\r\n * @param {number[]} nums\r\n * @param {number} goal\r\n * @return {number}\r\n */\r\nvar numSubarraysWithSum = function(nums, goal) {\r\n    \r\n};"
          },
          {
            "lang": "TypeScript",
            "langSlug": "typescript",
            "code": "function numSubarraysWithSum(nums: number[], goal: number): number {\r\n\r\n};"
          },
          {
            "lang": "PHP",
            "langSlug": "php",
            "code": "class Solution {\r\n\r\n    /**\r\n     * @param Integer[] $nums\r\n     * @param Integer $goal\r\n     * @return Integer\r\n     */\r\n    function numSubarraysWithSum($nums, $goal) {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Swift",
            "langSlug": "swift",
            "code": "class Solution {\r\n    func numSubarraysWithSum(_ nums: [Int], _ goal: Int) -> Int {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Kotlin",
            "langSlug": "kotlin",
            "code": "class Solution {\r\n    fun numSubarraysWithSum(nums: IntArray, goal: Int): Int {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Go",
            "langSlug": "golang",
            "code": "func numSubarraysWithSum(nums []int, goal int) int {\r\n    \r\n}"
          },
          {
            "lang": "Ruby",
            "langSlug": "ruby",
            "code": "# @param {Integer[]} nums\r\n# @param {Integer} goal\r\n# @return {Integer}\r\ndef num_subarrays_with_sum(nums, goal)\r\n    \r\nend"
          },
          {
            "lang": "Scala",
            "langSlug": "scala",
            "code": "object Solution {\r\n    def numSubarraysWithSum(nums: Array[Int], goal: Int): Int = {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Rust",
            "langSlug": "rust",
            "code": "impl Solution {\r\n    pub fn num_subarrays_with_sum(nums: Vec<i32>, goal: i32) -> i32 {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Racket",
            "langSlug": "racket",
            "code": "(define/contract (num-subarrays-with-sum nums goal)\r\n  (-> (listof exact-integer?) exact-integer? exact-integer?)\r\n\r\n  )"
          }
        ],
        "stats": "{\"totalAccepted\": \"203.9K\", \"totalSubmission\": \"330.4K\", \"totalAcceptedRaw\": 203936, \"totalSubmissionRaw\": 330374, \"acRate\": \"61.7%\"}",
        "hints": [],
        "solution": {
          "id": "2266",
          "canSeeDetail": true,
          "paidOnly": false,
          "hasVideoSolution": false,
          "paidOnlyVideo": true
        },
        "status": null,
        "sampleTestCase": "[1,0,1,0,1]\n2",
        "metaData": "{\n  \"name\": \"numSubarraysWithSum\",\n  \"params\": [\n    {\n      \"name\": \"nums\",\n      \"type\": \"integer[]\"\n    },\n    {\n      \"name\": \"goal\",\n      \"type\": \"integer\"\n    }\n  ],\n  \"return\": {\n    \"type\": \"integer\"\n  }\n}",
        "judgerAvailable": true,
        "judgeType": "large",
        "mysqlSchemas": [],
        "enableRunCode": true,
        "enableTestMode": false,
        "enableDebugger": true,
        "envInfo": "{\"cpp\": [\"C++\", \"<p>Compiled with <code> clang 17 </code> using the latest C++ 20 standard, and <code>libstdc++</code> provided by GCC 11.</p>\\r\\n\\r\\n<p>Your code is compiled with level two optimization (<code>-O2</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"java\": [\"Java\", \"<p><code>OpenJDK 21</code>. Using compile arguments: <code>--enable-preview --release 21</code></p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n<p>Includes <code>Pair</code> class from https://docs.oracle.com/javase/8/javafx/api/javafx/util/Pair.html.</p>\"], \"python\": [\"Python\", \"<p><code>Python 2.7.12</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\\r\\n\\r\\n<p>Note that Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">will not be maintained past 2020</a>. For the latest Python, please choose Python3 instead.</p>\"], \"c\": [\"C\", \"<p>Compiled with <code>gcc 11</code> using the gnu11 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O2</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n\\r\\n<p>For hash table operations, you may use <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>. \\\"uthash.h\\\" is included by default. Below are some examples:</p>\\r\\n\\r\\n<p><b>1. Adding an item to a hash.</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. Looking up an item in a hash:</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. Deleting an item in a hash:</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p><a href=\\\"https://learn.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-12\\\" target=\\\"_blank\\\">C# 12</a> with .NET 8 runtime</p>\"], \"javascript\": [\"JavaScript\", \"<p><code>Node.js 20.10.0</code>.</p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES6 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\\r\\n\\r\\n<p>For Priority Queue / Queue data structures, you may use 5.4.0 version of <a href=\\\"https://github.com/datastructures-js/priority-queue/blob/v5/README.md\\\" target=\\\"_blank\\\">datastructures-js/priority-queue</a> and 4.2.3 version of <a href=\\\"https://github.com/datastructures-js/queue/tree/v4.2.3\\\" target=\\\"_blank\\\">datastructures-js/queue</a>.</p>\"], \"ruby\": [\"Ruby\", \"<p><code>Ruby 3.2</code></p>\\r\\n\\r\\n<p>Some common data structure implementations are provided in the Algorithms module: https://www.rubydoc.info/github/kanwei/algorithms/Algorithms</p>\"], \"swift\": [\"Swift\", \"<p><code>Swift 5.9</code>.</p>\\r\\n\\r\\n<p>You may use <a href=\\\"https://github.com/apple/swift-algorithms/tree/1.2.0\\\" target=\\\"_blank\\\">swift-algorithms 1.2.0</a> and <a href=\\\"https://github.com/apple/swift-collections/tree/1.0.6\\\" target=\\\"_blank\\\">swift-collections 1.0.6</a>.</p>\"], \"golang\": [\"Go\", \"<p><code>Go 1.21</code></p>\\r\\n<p>Support <a href=\\\"https://github.com/emirpasic/gods/tree/v1.18.1\\\" target=\\\"_blank\\\">https://godoc.org/github.com/emirpasic/gods@v1.18.1</a> library.</p>\"], \"python3\": [\"Python3\", \"<p><code>Python 3.11</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\"], \"scala\": [\"Scala\", \"<p><code>Scala 3.3.1</code>.</p>\"], \"kotlin\": [\"Kotlin\", \"<p><code>Kotlin 1.9.0</code>.</p>\\r\\n\\r\\n<p>We are using an experimental compiler provided by JetBrains.</p>\"], \"rust\": [\"Rust\", \"<p><code>Rust 1.74.1</code></p>\\r\\n\\r\\n<p>Supports <a href=\\\"https://crates.io/crates/rand\\\" target=\\\"_blank\\\">rand </a> v0.6\\u00a0from crates.io</p>\"], \"php\": [\"PHP\", \"<p><code>PHP 8.2</code>.</p>\\r\\n<p>With bcmath module</p>\"], \"typescript\": [\"Typescript\", \"<p><code>TypeScript 5.1.6, Node.js 20.10.0</code>.</p>\\r\\n\\r\\n<p>Compile Options: <code>--alwaysStrict --strictBindCallApply --strictFunctionTypes --target ES2022</code></p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES2022 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\"], \"racket\": [\"Racket\", \"<p><a href=\\\"https://docs.racket-lang.org/guide/performance.html#%28tech._c%29\\\" target=\\\"_blank\\\">Racket CS</a> v8.11</p>\\r\\n\\r\\n<p>Using <code>#lang racket</code></p>\\r\\n\\r\\n<p>Required <code>data/gvector data/queue data/order data/heap</code> automatically for your convenience</p>\"]}",
        "libraryUrl": null,
        "adminUrl": null,
        "challengeQuestion": {
          "id": "1692",
          "date": "2024-03-14",
          "incompleteChallengeCount": 0,
          "streakCount": 0,
          "type": "DAILY"
        },
        "note": null
      }
    }
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\index.ts
export { default as singleUser } from './singleUser.json';
export { default as recentSubmissions } from './recentSubmissions.json';
export { default as recentACSubmissions } from './recentAcSubmissionList.json';
export { default as singleUserContests } from './singleUserContests.json';
export { default as dailyProblem } from './dailyProblem.json';
export { default as problems } from './problems.json';
export { default as selectProblem } from './selectProblem.json';

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\problems.json
{
  "data": {
    "problemsetQuestionList": {
      "total": 3078,
      "questions": [
        {
          "acRate": 52.09288098160903,
          "difficulty": "Easy",
          "freqBar": null,
          "questionFrontendId": "1",
          "isFavor": false,
          "isPaidOnly": false,
          "status": null,
          "title": "Two Sum",
          "titleSlug": "two-sum",
          "topicTags": [
            { "name": "Array", "id": "VG9waWNUYWdOb2RlOjU=", "slug": "array" },
            {
              "name": "Hash Table",
              "id": "VG9waWNUYWdOb2RlOjY=",
              "slug": "hash-table"
            }
          ],
          "hasSolution": true,
          "hasVideoSolution": true
        }
      ]
    }
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\recentAcSubmissionList.json
{
  "data": {
    "recentAcSubmissionList": [
      {
        "title": "Generate a String With Characters That Have Odd Counts",
        "titleSlug": "generate-a-string-with-characters-that-have-odd-counts",
        "timestamp": "1705161771",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Count Negative Numbers in a Sorted Matrix",
        "titleSlug": "count-negative-numbers-in-a-sorted-matrix",
        "timestamp": "1705161438",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Check If N and Its Double Exist",
        "titleSlug": "check-if-n-and-its-double-exist",
        "timestamp": "1705161205",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Determine if String Halves Are Alike",
        "titleSlug": "determine-if-string-halves-are-alike",
        "timestamp": "1705032551",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343666",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Sort Array By Parity",
        "titleSlug": "sort-array-by-parity",
        "timestamp": "1704316936",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Convert an Array Into a 2D Array With Conditions",
        "titleSlug": "convert-an-array-into-a-2d-array-with-conditions",
        "timestamp": "1704261617",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Average Value of Even Numbers That Are Divisible by Three",
        "titleSlug": "average-value-of-even-numbers-that-are-divisible-by-three",
        "timestamp": "1704259967",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Number of Laser Beams in a Bank",
        "titleSlug": "number-of-laser-beams-in-a-bank",
        "timestamp": "1704256409",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Take Gifts From the Richest Pile",
        "titleSlug": "take-gifts-from-the-richest-pile",
        "timestamp": "1704252901",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Decompress Run-Length Encoded List",
        "titleSlug": "decompress-run-length-encoded-list",
        "timestamp": "1704236706",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Make Array Zero by Subtracting Equal Amounts",
        "titleSlug": "make-array-zero-by-subtracting-equal-amounts",
        "timestamp": "1704234483",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Remove One Element to Make the Array Strictly Increasing",
        "titleSlug": "remove-one-element-to-make-the-array-strictly-increasing",
        "timestamp": "1704228445",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Check if All A's Appears Before All B's",
        "titleSlug": "check-if-all-as-appears-before-all-bs",
        "timestamp": "1704223378",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Contains Duplicate II",
        "titleSlug": "contains-duplicate-ii",
        "timestamp": "1704222499",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Pascal's Triangle",
        "titleSlug": "pascals-triangle",
        "timestamp": "1704219156",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Make Array Zero by Subtracting Equal Amounts",
        "titleSlug": "make-array-zero-by-subtracting-equal-amounts",
        "timestamp": "1704216984",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Apply Transform Over Each Element in Array",
        "titleSlug": "apply-transform-over-each-element-in-array",
        "timestamp": "1704215794",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Find the Difference",
        "titleSlug": "find-the-difference",
        "timestamp": "1702492842",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Monotonic Array",
        "titleSlug": "monotonic-array",
        "timestamp": "1702417451",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      }
    ]
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\recentSubmissions.json
{
  "data": {
    "recentSubmissionList": [
      {
        "title": "Generate a String With Characters That Have Odd Counts",
        "titleSlug": "generate-a-string-with-characters-that-have-odd-counts",
        "timestamp": "1705161771",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Count Negative Numbers in a Sorted Matrix",
        "titleSlug": "count-negative-numbers-in-a-sorted-matrix",
        "timestamp": "1705161438",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Count Negative Numbers in a Sorted Matrix",
        "titleSlug": "count-negative-numbers-in-a-sorted-matrix",
        "timestamp": "1705161424",
        "statusDisplay": "Runtime Error",
        "lang": "javascript"
      },
      {
        "title": "Check If N and Its Double Exist",
        "titleSlug": "check-if-n-and-its-double-exist",
        "timestamp": "1705161205",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Check If N and Its Double Exist",
        "titleSlug": "check-if-n-and-its-double-exist",
        "timestamp": "1705161123",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Steps to Make Two Strings Anagram",
        "titleSlug": "minimum-number-of-steps-to-make-two-strings-anagram",
        "timestamp": "1705160304",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Determine if String Halves Are Alike",
        "titleSlug": "determine-if-string-halves-are-alike",
        "timestamp": "1705032551",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Longest Increasing Subsequence",
        "titleSlug": "longest-increasing-subsequence",
        "timestamp": "1704442672",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Longest Increasing Subsequence",
        "titleSlug": "longest-increasing-subsequence",
        "timestamp": "1704440871",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Longest Increasing Subsequence",
        "titleSlug": "longest-increasing-subsequence",
        "timestamp": "1704439843",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343666",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343585",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343426",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343413",
        "statusDisplay": "Runtime Error",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343387",
        "statusDisplay": "Runtime Error",
        "lang": "javascript"
      },
      {
        "title": "Sort Array By Parity",
        "titleSlug": "sort-array-by-parity",
        "timestamp": "1704316936",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Convert an Array Into a 2D Array With Conditions",
        "titleSlug": "convert-an-array-into-a-2d-array-with-conditions",
        "timestamp": "1704261617",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Convert an Array Into a 2D Array With Conditions",
        "titleSlug": "convert-an-array-into-a-2d-array-with-conditions",
        "timestamp": "1704261566",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Convert an Array Into a 2D Array With Conditions",
        "titleSlug": "convert-an-array-into-a-2d-array-with-conditions",
        "timestamp": "1704261530",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Average Value of Even Numbers That Are Divisible by Three",
        "titleSlug": "average-value-of-even-numbers-that-are-divisible-by-three",
        "timestamp": "1704259967",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      }
    ]
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\selectProblem.json
{
  "data": {
    "question": {
      "questionId": "1",
      "questionFrontendId": "1",
      "boundTopicId": null,
      "title": "Two Sum",
      "titleSlug": "two-sum",
      "content": "<p>Given an array of integers <code>nums</code>&nbsp;and an integer <code>target</code>, return <em>indices of the two numbers such that they add up to <code>target</code></em>.</p>\n\n<p>You may assume that each input would have <strong><em>exactly</em> one solution</strong>, and you may not use the <em>same</em> element twice.</p>\n\n<p>You can return the answer in any order.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,7,11,15], target = 9\n<strong>Output:</strong> [0,1]\n<strong>Explanation:</strong> Because nums[0] + nums[1] == 9, we return [0, 1].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,2,4], target = 6\n<strong>Output:</strong> [1,2]\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,3], target = 6\n<strong>Output:</strong> [0,1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= target &lt;= 10<sup>9</sup></code></li>\n\t<li><strong>Only one valid answer exists.</strong></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow-up:&nbsp;</strong>Can you come up with an algorithm that is less than <code>O(n<sup>2</sup>)</code><font face=\"monospace\">&nbsp;</font>time complexity?",
      "translatedTitle": null,
      "translatedContent": null,
      "isPaidOnly": false,
      "difficulty": "Easy",
      "likes": 55371,
      "dislikes": 1901,
      "isLiked": null,
      "similarQuestions": "[{\"title\": \"3Sum\", \"titleSlug\": \"3sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"4Sum\", \"titleSlug\": \"4sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Two Sum II - Input Array Is Sorted\", \"titleSlug\": \"two-sum-ii-input-array-is-sorted\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Two Sum III - Data structure design\", \"titleSlug\": \"two-sum-iii-data-structure-design\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Subarray Sum Equals K\", \"titleSlug\": \"subarray-sum-equals-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Two Sum IV - Input is a BST\", \"titleSlug\": \"two-sum-iv-input-is-a-bst\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Two Sum Less Than K\", \"titleSlug\": \"two-sum-less-than-k\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Max Number of K-Sum Pairs\", \"titleSlug\": \"max-number-of-k-sum-pairs\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Good Meals\", \"titleSlug\": \"count-good-meals\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Number of Pairs With Absolute Difference K\", \"titleSlug\": \"count-number-of-pairs-with-absolute-difference-k\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Number of Pairs of Strings With Concatenation Equal to Target\", \"titleSlug\": \"number-of-pairs-of-strings-with-concatenation-equal-to-target\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find All K-Distant Indices in an Array\", \"titleSlug\": \"find-all-k-distant-indices-in-an-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"First Letter to Appear Twice\", \"titleSlug\": \"first-letter-to-appear-twice\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Number of Excellent Pairs\", \"titleSlug\": \"number-of-excellent-pairs\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Number of Arithmetic Triplets\", \"titleSlug\": \"number-of-arithmetic-triplets\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Node With Highest Edge Score\", \"titleSlug\": \"node-with-highest-edge-score\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Check Distances Between Same Letters\", \"titleSlug\": \"check-distances-between-same-letters\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find Subarrays With Equal Sum\", \"titleSlug\": \"find-subarrays-with-equal-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Largest Positive Integer That Exists With Its Negative\", \"titleSlug\": \"largest-positive-integer-that-exists-with-its-negative\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Number of Distinct Averages\", \"titleSlug\": \"number-of-distinct-averages\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Count Pairs Whose Sum is Less than Target\", \"titleSlug\": \"count-pairs-whose-sum-is-less-than-target\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
      "exampleTestcases": "[2,7,11,15]\n9\n[3,2,4]\n6\n[3,3]\n6",
      "contributors": [],
      "topicTags": [
        { "name": "Array", "slug": "array", "translatedName": null },
        { "name": "Hash Table", "slug": "hash-table", "translatedName": null }
      ],
      "companyTagStats": null,
      "codeSnippets": [
        {
          "lang": "C++",
          "langSlug": "cpp",
          "code": "class Solution {\npublic:\n    vector<int> twoSum(vector<int>& nums, int target) {\n        \n    }\n};"
        },
        {
          "lang": "Java",
          "langSlug": "java",
          "code": "class Solution {\n    public int[] twoSum(int[] nums, int target) {\n        \n    }\n}"
        },
        {
          "lang": "Python",
          "langSlug": "python",
          "code": "class Solution(object):\n    def twoSum(self, nums, target):\n        \"\"\"\n        :type nums: List[int]\n        :type target: int\n        :rtype: List[int]\n        \"\"\"\n        "
        },
        {
          "lang": "Python3",
          "langSlug": "python3",
          "code": "class Solution:\n    def twoSum(self, nums: List[int], target: int) -> List[int]:\n        "
        },
        {
          "lang": "C",
          "langSlug": "c",
          "code": "/**\n * Note: The returned array must be malloced, assume caller calls free().\n */\nint* twoSum(int* nums, int numsSize, int target, int* returnSize) {\n    \n}"
        },
        {
          "lang": "C#",
          "langSlug": "csharp",
          "code": "public class Solution {\n    public int[] TwoSum(int[] nums, int target) {\n        \n    }\n}"
        },
        {
          "lang": "JavaScript",
          "langSlug": "javascript",
          "code": "/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nvar twoSum = function(nums, target) {\n    \n};"
        },
        {
          "lang": "TypeScript",
          "langSlug": "typescript",
          "code": "function twoSum(nums: number[], target: number): number[] {\n    \n};"
        },
        {
          "lang": "PHP",
          "langSlug": "php",
          "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @param Integer $target\n     * @return Integer[]\n     */\n    function twoSum($nums, $target) {\n        \n    }\n}"
        },
        {
          "lang": "Swift",
          "langSlug": "swift",
          "code": "class Solution {\n    func twoSum(_ nums: [Int], _ target: Int) -> [Int] {\n        \n    }\n}"
        },
        {
          "lang": "Kotlin",
          "langSlug": "kotlin",
          "code": "class Solution {\n    fun twoSum(nums: IntArray, target: Int): IntArray {\n        \n    }\n}"
        },
        {
          "lang": "Dart",
          "langSlug": "dart",
          "code": "class Solution {\n  List<int> twoSum(List<int> nums, int target) {\n    \n  }\n}"
        },
        {
          "lang": "Go",
          "langSlug": "golang",
          "code": "func twoSum(nums []int, target int) []int {\n    \n}"
        },
        {
          "lang": "Ruby",
          "langSlug": "ruby",
          "code": "# @param {Integer[]} nums\n# @param {Integer} target\n# @return {Integer[]}\ndef two_sum(nums, target)\n    \nend"
        },
        {
          "lang": "Scala",
          "langSlug": "scala",
          "code": "object Solution {\n    def twoSum(nums: Array[Int], target: Int): Array[Int] = {\n        \n    }\n}"
        },
        {
          "lang": "Rust",
          "langSlug": "rust",
          "code": "impl Solution {\n    pub fn two_sum(nums: Vec<i32>, target: i32) -> Vec<i32> {\n        \n    }\n}"
        },
        {
          "lang": "Racket",
          "langSlug": "racket",
          "code": "(define/contract (two-sum nums target)\n  (-> (listof exact-integer?) exact-integer? (listof exact-integer?))\n  )"
        },
        {
          "lang": "Erlang",
          "langSlug": "erlang",
          "code": "-spec two_sum(Nums :: [integer()], Target :: integer()) -> [integer()].\ntwo_sum(Nums, Target) ->\n  ."
        },
        {
          "lang": "Elixir",
          "langSlug": "elixir",
          "code": "defmodule Solution do\n  @spec two_sum(nums :: [integer], target :: integer) :: [integer]\n  def two_sum(nums, target) do\n    \n  end\nend"
        }
      ],
      "stats": "{\"totalAccepted\": \"12.6M\", \"totalSubmission\": \"24.1M\", \"totalAcceptedRaw\": 12566379, \"totalSubmissionRaw\": 24123031, \"acRate\": \"52.1%\"}",
      "hints": [
        "A really brute force way would be to search for all possible pairs of numbers but that would be too slow. Again, it's best to try out brute force solutions for just for completeness. It is from these brute force solutions that you can come up with optimizations.",
        "So, if we fix one of the numbers, say <code>x</code>, we have to scan the entire array to find the next number <code>y</code> which is <code>value - x</code> where value is the input parameter. Can we change our array somehow so that this search becomes faster?",
        "The second train of thought is, without changing the array, can we use additional space somehow? Like maybe a hash map to speed up the search?"
      ],
      "solution": {
        "id": "7",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": true,
        "paidOnlyVideo": false
      },
      "status": null,
      "sampleTestCase": "[2,7,11,15]\n9",
      "metaData": "{\n  \"name\": \"twoSum\",\n  \"params\": [\n    {\n      \"name\": \"nums\",\n      \"type\": \"integer[]\"\n    },\n    {\n      \"name\": \"target\",\n      \"type\": \"integer\"\n    }\n  ],\n  \"return\": {\n    \"type\": \"integer[]\",\n    \"size\": 2\n  },\n  \"manual\": false\n}",
      "judgerAvailable": true,
      "judgeType": "small",
      "mysqlSchemas": [],
      "enableRunCode": true,
      "enableTestMode": false,
      "enableDebugger": true,
      "envInfo": "{\"cpp\": [\"C++\", \"<p>Compiled with <code> clang 17 </code> using the latest C++ 20 standard, and <code>libstdc++</code> provided by GCC 11.</p>\\r\\n\\r\\n<p>Your code is compiled with level two optimization (<code>-O2</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"java\": [\"Java\", \"<p><code>OpenJDK 21</code>. Using compile arguments: <code>--enable-preview --release 21</code></p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n<p>Includes <code>Pair</code> class from https://docs.oracle.com/javase/8/javafx/api/javafx/util/Pair.html.</p>\"], \"python\": [\"Python\", \"<p><code>Python 2.7.12</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\\r\\n\\r\\n<p>Note that Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">will not be maintained past 2020</a>. For the latest Python, please choose Python3 instead.</p>\"], \"c\": [\"C\", \"<p>Compiled with <code>gcc 11</code> using the gnu11 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O2</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n\\r\\n<p>For hash table operations, you may use <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>. \\\"uthash.h\\\" is included by default. Below are some examples:</p>\\r\\n\\r\\n<p><b>1. Adding an item to a hash.</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. Looking up an item in a hash:</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. Deleting an item in a hash:</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p><a href=\\\"https://learn.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-12\\\" target=\\\"_blank\\\">C# 12</a> with .NET 8 runtime</p>\"], \"javascript\": [\"JavaScript\", \"<p><code>Node.js 20.10.0</code>.</p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES6 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\\r\\n\\r\\n<p>For Priority Queue / Queue data structures, you may use 5.4.0 version of <a href=\\\"https://github.com/datastructures-js/priority-queue/blob/v5/README.md\\\" target=\\\"_blank\\\">datastructures-js/priority-queue</a> and 4.2.3 version of <a href=\\\"https://github.com/datastructures-js/queue/tree/v4.2.3\\\" target=\\\"_blank\\\">datastructures-js/queue</a>.</p>\"], \"ruby\": [\"Ruby\", \"<p><code>Ruby 3.2</code></p>\\r\\n\\r\\n<p>Some common data structure implementations are provided in the Algorithms module: https://www.rubydoc.info/github/kanwei/algorithms/Algorithms</p>\"], \"swift\": [\"Swift\", \"<p><code>Swift 5.9</code>.</p>\\r\\n\\r\\n<p>You may use <a href=\\\"https://github.com/apple/swift-algorithms/tree/1.2.0\\\" target=\\\"_blank\\\">swift-algorithms 1.2.0</a> and <a href=\\\"https://github.com/apple/swift-collections/tree/1.0.6\\\" target=\\\"_blank\\\">swift-collections 1.0.6</a>.</p>\"], \"golang\": [\"Go\", \"<p><code>Go 1.21</code></p>\\r\\n<p>Support <a href=\\\"https://github.com/emirpasic/gods/tree/v1.18.1\\\" target=\\\"_blank\\\">https://godoc.org/github.com/emirpasic/gods@v1.18.1</a> library.</p>\"], \"python3\": [\"Python3\", \"<p><code>Python 3.11</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\"], \"scala\": [\"Scala\", \"<p><code>Scala 3.3.1</code>.</p>\"], \"kotlin\": [\"Kotlin\", \"<p><code>Kotlin 1.9.0</code>.</p>\\r\\n\\r\\n<p>We are using an experimental compiler provided by JetBrains.</p>\"], \"rust\": [\"Rust\", \"<p><code>Rust 1.74.1</code></p>\\r\\n\\r\\n<p>Supports <a href=\\\"https://crates.io/crates/rand\\\" target=\\\"_blank\\\">rand </a> v0.6\\u00a0from crates.io</p>\"], \"php\": [\"PHP\", \"<p><code>PHP 8.2</code>.</p>\\r\\n<p>With bcmath module</p>\"], \"typescript\": [\"Typescript\", \"<p><code>TypeScript 5.1.6, Node.js 20.10.0</code>.</p>\\r\\n\\r\\n<p>Compile Options: <code>--alwaysStrict --strictBindCallApply --strictFunctionTypes --target ES2022</code></p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES2022 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\"], \"racket\": [\"Racket\", \"<p><a href=\\\"https://docs.racket-lang.org/guide/performance.html#%28tech._c%29\\\" target=\\\"_blank\\\">Racket CS</a> v8.11</p>\\r\\n\\r\\n<p>Using <code>#lang racket</code></p>\\r\\n\\r\\n<p>Required <code>data/gvector data/queue data/order data/heap</code> automatically for your convenience</p>\"], \"erlang\": [\"Erlang\", \"Erlang/OTP 26\"], \"elixir\": [\"Elixir\", \"Elixir 1.15 with Erlang/OTP 26\"], \"dart\": [\"Dart\", \"<p>Dart 3.2</p>\\r\\n\\r\\n<p>Your code will be run directly without compiling</p>\"]}",
      "libraryUrl": null,
      "adminUrl": null,
      "challengeQuestion": null,
      "note": null
    }
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\singleUser.json
{
  "data": {
    "matchedUser": {
      "submissionCalendar": "{\"1704153600\": 24, \"1704240000\": 9, \"1704326400\": 5, \"1704412800\": 3, \"1705017600\": 1, \"1705104000\": 6, \"1699315200\": 46, \"1701302400\": 6, \"1701648000\": 24, \"1701734400\": 11, \"1702339200\": 29, \"1702425600\": 7}",
      "submitStats": {
        "totalSubmissionNum": [
          { "difficulty": "All", "count": 158, "submissions": 463 },
          { "difficulty": "Easy", "count": 131, "submissions": 388 },
          { "difficulty": "Medium", "count": 27, "submissions": 75 },
          { "difficulty": "Hard", "count": 0, "submissions": 0 }
        ],
        "acSubmissionNum": [
          { "difficulty": "All", "count": 133, "submissions": 215 },
          { "difficulty": "Easy", "count": 122, "submissions": 202 },
          { "difficulty": "Medium", "count": 11, "submissions": 13 },
          { "difficulty": "Hard", "count": 0, "submissions": 0 }
        ]
      },
      "username": "jambobjones",
      "githubUrl": "https://github.com/jambobjones",
      "twitterUrl": null,
      "linkedinUrl": null,
      "contributions": {
        "points": 115,
        "questionCount": 0,
        "testcaseCount": 0
      },
      "profile": {
        "realName": "Jambob Jones",
        "userAvatar": "https://assets.leetcode.com/users/jambobjones/avatar_1617850141.png",
        "birthday": null,
        "ranking": 630800,
        "reputation": 0,
        "websites": [],
        "countryName": null,
        "company": null,
        "school": null,
        "skillTags": [],
        "aboutMe": "",
        "starRating": 2
      },
      "badges": [],
      "upcomingBadges": [
        {
          "name": "Mar LeetCoding Challenge",
          "icon": "/static/images/badges/dcc-2024-3.png"
        }
      ],
      "activeBadge": null
    }
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\singleUserContests.json
{
  "data": {
    "userContestRanking": null,
    "userContestRankingHistory": [
      {
        "attended": false,
        "rating": 1500,
        "ranking": 0,
        "trendDirection": "NONE",
        "problemsSolved": 0,
        "totalProblems": 3,
        "finishTimeInSeconds": 0
      }
    ]
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\problemData.spec.ts
import request from 'supertest';
import assert from 'assert';
import app from '../app';

describe('Problem Data Tests', () => {
  it('Should fetch the daily problem', async () => {
    const response = await request(app).get('/daily');
    [
      'questionLink',
      'date',
      'questionId',
      'questionFrontendId',
      'questionTitle',
      'titleSlug',
      'difficulty',
      'isPaidOnly',
      'question',
      'exampleTestcases',
      'topicTags',
      'hints',
      'solution',
      'companyTagStats',
      'likes',
      'dislikes',
      'similarQuestions',
    ].forEach((key) => {
      assert(key in response.body);
    });
  });

  it('Should fetch a list of problems', async () => {
    const response = await request(app).get('/problems');
    ['totalQuestions', 'count', 'problemsetQuestionList'].forEach((key) => {
      assert(key in response.body);
    });
  });

  it('Should Select a Problem', async () => {
    const response = await request(app).get('/select?titleSlug=two-sum');
    [
      'link',
      'questionId',
      'questionFrontendId',
      'questionTitle',
      'titleSlug',
      'difficulty',
      'isPaidOnly',
      'question',
      'exampleTestcases',
      'topicTags',
      'hints',
      'solution',
      'companyTagStats',
      'likes',
      'dislikes',
      'similarQuestions',
    ].forEach((key) => assert(key in response.body));
  });
});

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\userData.spec.ts
import request from 'supertest';
import app from '../app';
import assert from 'assert';

describe('User Data Tests', () => {
  it('should fetch a single user', async () => {
    const response = await request(app).get('/jambobjones');
    expect(response.body.username).toBe('jambobjones');
    [
      'username',
      'name',
      'birthday',
      'avatar',
      'ranking',
      'reputation',
      'gitHub',
      'twitter',
      'linkedIN',
      'website',
      'country',
      'company',
      'school',
      'skillTags',
      'about',
    ].forEach((key) => {
      assert(key in response.body);
    });
  });

  it('should fetch user badges', async () => {
    const response = await request(app).get('/jambobjones/badges');

    ['badgesCount', 'badges', 'upcomingBadges', 'activeBadge'].forEach(
      (key) => {
        assert(key in response.body);
      }
    );
  });

  it('Should fetch users solved problems', async () => {
    const response = await request(app).get('/jambobjones/solved');
    [
      'solvedProblem',
      'easySolved',
      'mediumSolved',
      'hardSolved',
      'totalSubmissionNum',
      'acSubmissionNum',
    ].forEach((key) => {
      assert(key in response.body);
    });
  });

  it('Should fetch users contests', async () => {
    const response = await request(app).get('/jambobjones/contest');
    ['contestParticipation'].forEach((key) => {
      assert(key in response.body);
    });
  });

  it('Should fetch user contest history', async () => {
    const response = await request(app).get('/jambobjones/contest/history');
    ['count', 'contestHistory'].forEach((key) => {
      assert(key in response.body);
    });
  });

  it('Should fetch users recent submissions returning 20 by default', async () => {
    const response = await request(app).get('/jambobjones/submission');
    ['count', 'submission'].forEach((key) => {
      assert(key in response.body);
    });

    expect(response.body.count).toBeLessThanOrEqual(20);
  });
  // Todo: Submission test with Limit Parameter

  it('Should fetch AC Submissions', async () => {
    const response = await request(app).get('/jambobjones/acSubmission');

    ['count', 'submission'].forEach((key) => {
      assert(key in response.body);
    });
    expect(response.body.count).toBeLessThanOrEqual(20);
  });

  it('Should fetch Users Submission Calendar', async () => {
    const response = await request(app).get('/jambobjones/calendar');
    assert('submissionCalendar' in response.body);
    expect(typeof response.body.submissionCalendar).toBe('string');
  });
});

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\dailyProblem.json
{
  "data": {
    "activeDailyCodingChallengeQuestion": {
      "date": "2024-03-14",
      "link": "/problems/binary-subarrays-with-sum/",
      "question": {
        "questionId": "966",
        "questionFrontendId": "930",
        "boundTopicId": null,
        "title": "Binary Subarrays With Sum",
        "titleSlug": "binary-subarrays-with-sum",
        "content": "<p>Given a binary array <code>nums</code> and an integer <code>goal</code>, return <em>the number of non-empty <strong>subarrays</strong> with a sum</em> <code>goal</code>.</p>\r\n\r\n<p>A <strong>subarray</strong> is a contiguous part of the array.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong class=\"example\">Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> nums = [1,0,1,0,1], goal = 2\r\n<strong>Output:</strong> 4\r\n<strong>Explanation:</strong> The 4 subarrays are bolded and underlined below:\r\n[<u><strong>1,0,1</strong></u>,0,1]\r\n[<u><strong>1,0,1,0</strong></u>,1]\r\n[1,<u><strong>0,1,0,1</strong></u>]\r\n[1,0,<u><strong>1,0,1</strong></u>]\r\n</pre>\r\n\r\n<p><strong class=\"example\">Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> nums = [0,0,0,0,0], goal = 0\r\n<strong>Output:</strong> 15\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= nums.length &lt;= 3 * 10<sup>4</sup></code></li>\r\n\t<li><code>nums[i]</code> is either <code>0</code> or <code>1</code>.</li>\r\n\t<li><code>0 &lt;= goal &lt;= nums.length</code></li>\r\n</ul>",
        "translatedTitle": null,
        "translatedContent": null,
        "isPaidOnly": false,
        "difficulty": "Medium",
        "likes": 3592,
        "dislikes": 120,
        "isLiked": null,
        "similarQuestions": "[{\"title\": \"Count Subarrays With Score Less Than K\", \"titleSlug\": \"count-subarrays-with-score-less-than-k\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Ways to Split Array Into Good Subarrays\", \"titleSlug\": \"ways-to-split-array-into-good-subarrays\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "exampleTestcases": "[1,0,1,0,1]\n2\n[0,0,0,0,0]\n0",
        "contributors": [],
        "topicTags": [
          { "name": "Array", "slug": "array", "translatedName": null },
          {
            "name": "Hash Table",
            "slug": "hash-table",
            "translatedName": null
          },
          {
            "name": "Sliding Window",
            "slug": "sliding-window",
            "translatedName": null
          },
          { "name": "Prefix Sum", "slug": "prefix-sum", "translatedName": null }
        ],
        "companyTagStats": null,
        "codeSnippets": [
          {
            "lang": "C++",
            "langSlug": "cpp",
            "code": "class Solution {\r\npublic:\r\n    int numSubarraysWithSum(vector<int>& nums, int goal) {\r\n        \r\n    }\r\n};"
          },
          {
            "lang": "Java",
            "langSlug": "java",
            "code": "class Solution {\r\n    public int numSubarraysWithSum(int[] nums, int goal) {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Python",
            "langSlug": "python",
            "code": "class Solution(object):\r\n    def numSubarraysWithSum(self, nums, goal):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :type goal: int\r\n        :rtype: int\r\n        \"\"\""
          },
          {
            "lang": "Python3",
            "langSlug": "python3",
            "code": "class Solution:\r\n    def numSubarraysWithSum(self, nums: List[int], goal: int) -> int:"
          },
          {
            "lang": "C",
            "langSlug": "c",
            "code": "int numSubarraysWithSum(int* nums, int numsSize, int goal){\r\n\r\n}"
          },
          {
            "lang": "C#",
            "langSlug": "csharp",
            "code": "public class Solution {\r\n    public int NumSubarraysWithSum(int[] nums, int goal) {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "JavaScript",
            "langSlug": "javascript",
            "code": "/**\r\n * @param {number[]} nums\r\n * @param {number} goal\r\n * @return {number}\r\n */\r\nvar numSubarraysWithSum = function(nums, goal) {\r\n    \r\n};"
          },
          {
            "lang": "TypeScript",
            "langSlug": "typescript",
            "code": "function numSubarraysWithSum(nums: number[], goal: number): number {\r\n\r\n};"
          },
          {
            "lang": "PHP",
            "langSlug": "php",
            "code": "class Solution {\r\n\r\n    /**\r\n     * @param Integer[] $nums\r\n     * @param Integer $goal\r\n     * @return Integer\r\n     */\r\n    function numSubarraysWithSum($nums, $goal) {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Swift",
            "langSlug": "swift",
            "code": "class Solution {\r\n    func numSubarraysWithSum(_ nums: [Int], _ goal: Int) -> Int {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Kotlin",
            "langSlug": "kotlin",
            "code": "class Solution {\r\n    fun numSubarraysWithSum(nums: IntArray, goal: Int): Int {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Go",
            "langSlug": "golang",
            "code": "func numSubarraysWithSum(nums []int, goal int) int {\r\n    \r\n}"
          },
          {
            "lang": "Ruby",
            "langSlug": "ruby",
            "code": "# @param {Integer[]} nums\r\n# @param {Integer} goal\r\n# @return {Integer}\r\ndef num_subarrays_with_sum(nums, goal)\r\n    \r\nend"
          },
          {
            "lang": "Scala",
            "langSlug": "scala",
            "code": "object Solution {\r\n    def numSubarraysWithSum(nums: Array[Int], goal: Int): Int = {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Rust",
            "langSlug": "rust",
            "code": "impl Solution {\r\n    pub fn num_subarrays_with_sum(nums: Vec<i32>, goal: i32) -> i32 {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Racket",
            "langSlug": "racket",
            "code": "(define/contract (num-subarrays-with-sum nums goal)\r\n  (-> (listof exact-integer?) exact-integer? exact-integer?)\r\n\r\n  )"
          }
        ],
        "stats": "{\"totalAccepted\": \"203.9K\", \"totalSubmission\": \"330.4K\", \"totalAcceptedRaw\": 203936, \"totalSubmissionRaw\": 330374, \"acRate\": \"61.7%\"}",
        "hints": [],
        "solution": {
          "id": "2266",
          "canSeeDetail": true,
          "paidOnly": false,
          "hasVideoSolution": false,
          "paidOnlyVideo": true
        },
        "status": null,
        "sampleTestCase": "[1,0,1,0,1]\n2",
        "metaData": "{\n  \"name\": \"numSubarraysWithSum\",\n  \"params\": [\n    {\n      \"name\": \"nums\",\n      \"type\": \"integer[]\"\n    },\n    {\n      \"name\": \"goal\",\n      \"type\": \"integer\"\n    }\n  ],\n  \"return\": {\n    \"type\": \"integer\"\n  }\n}",
        "judgerAvailable": true,
        "judgeType": "large",
        "mysqlSchemas": [],
        "enableRunCode": true,
        "enableTestMode": false,
        "enableDebugger": true,
        "envInfo": "{\"cpp\": [\"C++\", \"<p>Compiled with <code> clang 17 </code> using the latest C++ 20 standard, and <code>libstdc++</code> provided by GCC 11.</p>\\r\\n\\r\\n<p>Your code is compiled with level two optimization (<code>-O2</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"java\": [\"Java\", \"<p><code>OpenJDK 21</code>. Using compile arguments: <code>--enable-preview --release 21</code></p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n<p>Includes <code>Pair</code> class from https://docs.oracle.com/javase/8/javafx/api/javafx/util/Pair.html.</p>\"], \"python\": [\"Python\", \"<p><code>Python 2.7.12</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\\r\\n\\r\\n<p>Note that Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">will not be maintained past 2020</a>. For the latest Python, please choose Python3 instead.</p>\"], \"c\": [\"C\", \"<p>Compiled with <code>gcc 11</code> using the gnu11 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O2</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n\\r\\n<p>For hash table operations, you may use <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>. \\\"uthash.h\\\" is included by default. Below are some examples:</p>\\r\\n\\r\\n<p><b>1. Adding an item to a hash.</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. Looking up an item in a hash:</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. Deleting an item in a hash:</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p><a href=\\\"https://learn.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-12\\\" target=\\\"_blank\\\">C# 12</a> with .NET 8 runtime</p>\"], \"javascript\": [\"JavaScript\", \"<p><code>Node.js 20.10.0</code>.</p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES6 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\\r\\n\\r\\n<p>For Priority Queue / Queue data structures, you may use 5.4.0 version of <a href=\\\"https://github.com/datastructures-js/priority-queue/blob/v5/README.md\\\" target=\\\"_blank\\\">datastructures-js/priority-queue</a> and 4.2.3 version of <a href=\\\"https://github.com/datastructures-js/queue/tree/v4.2.3\\\" target=\\\"_blank\\\">datastructures-js/queue</a>.</p>\"], \"ruby\": [\"Ruby\", \"<p><code>Ruby 3.2</code></p>\\r\\n\\r\\n<p>Some common data structure implementations are provided in the Algorithms module: https://www.rubydoc.info/github/kanwei/algorithms/Algorithms</p>\"], \"swift\": [\"Swift\", \"<p><code>Swift 5.9</code>.</p>\\r\\n\\r\\n<p>You may use <a href=\\\"https://github.com/apple/swift-algorithms/tree/1.2.0\\\" target=\\\"_blank\\\">swift-algorithms 1.2.0</a> and <a href=\\\"https://github.com/apple/swift-collections/tree/1.0.6\\\" target=\\\"_blank\\\">swift-collections 1.0.6</a>.</p>\"], \"golang\": [\"Go\", \"<p><code>Go 1.21</code></p>\\r\\n<p>Support <a href=\\\"https://github.com/emirpasic/gods/tree/v1.18.1\\\" target=\\\"_blank\\\">https://godoc.org/github.com/emirpasic/gods@v1.18.1</a> library.</p>\"], \"python3\": [\"Python3\", \"<p><code>Python 3.11</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\"], \"scala\": [\"Scala\", \"<p><code>Scala 3.3.1</code>.</p>\"], \"kotlin\": [\"Kotlin\", \"<p><code>Kotlin 1.9.0</code>.</p>\\r\\n\\r\\n<p>We are using an experimental compiler provided by JetBrains.</p>\"], \"rust\": [\"Rust\", \"<p><code>Rust 1.74.1</code></p>\\r\\n\\r\\n<p>Supports <a href=\\\"https://crates.io/crates/rand\\\" target=\\\"_blank\\\">rand </a> v0.6\\u00a0from crates.io</p>\"], \"php\": [\"PHP\", \"<p><code>PHP 8.2</code>.</p>\\r\\n<p>With bcmath module</p>\"], \"typescript\": [\"Typescript\", \"<p><code>TypeScript 5.1.6, Node.js 20.10.0</code>.</p>\\r\\n\\r\\n<p>Compile Options: <code>--alwaysStrict --strictBindCallApply --strictFunctionTypes --target ES2022</code></p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES2022 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\"], \"racket\": [\"Racket\", \"<p><a href=\\\"https://docs.racket-lang.org/guide/performance.html#%28tech._c%29\\\" target=\\\"_blank\\\">Racket CS</a> v8.11</p>\\r\\n\\r\\n<p>Using <code>#lang racket</code></p>\\r\\n\\r\\n<p>Required <code>data/gvector data/queue data/order data/heap</code> automatically for your convenience</p>\"]}",
        "libraryUrl": null,
        "adminUrl": null,
        "challengeQuestion": {
          "id": "1692",
          "date": "2024-03-14",
          "incompleteChallengeCount": 0,
          "streakCount": 0,
          "type": "DAILY"
        },
        "note": null
      }
    }
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\index.ts
export { default as singleUser } from './singleUser.json';
export { default as recentSubmissions } from './recentSubmissions.json';
export { default as recentACSubmissions } from './recentAcSubmissionList.json';
export { default as singleUserContests } from './singleUserContests.json';
export { default as dailyProblem } from './dailyProblem.json';
export { default as problems } from './problems.json';
export { default as selectProblem } from './selectProblem.json';

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\problems.json
{
  "data": {
    "problemsetQuestionList": {
      "total": 3078,
      "questions": [
        {
          "acRate": 52.09288098160903,
          "difficulty": "Easy",
          "freqBar": null,
          "questionFrontendId": "1",
          "isFavor": false,
          "isPaidOnly": false,
          "status": null,
          "title": "Two Sum",
          "titleSlug": "two-sum",
          "topicTags": [
            { "name": "Array", "id": "VG9waWNUYWdOb2RlOjU=", "slug": "array" },
            {
              "name": "Hash Table",
              "id": "VG9waWNUYWdOb2RlOjY=",
              "slug": "hash-table"
            }
          ],
          "hasSolution": true,
          "hasVideoSolution": true
        }
      ]
    }
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\recentAcSubmissionList.json
{
  "data": {
    "recentAcSubmissionList": [
      {
        "title": "Generate a String With Characters That Have Odd Counts",
        "titleSlug": "generate-a-string-with-characters-that-have-odd-counts",
        "timestamp": "1705161771",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Count Negative Numbers in a Sorted Matrix",
        "titleSlug": "count-negative-numbers-in-a-sorted-matrix",
        "timestamp": "1705161438",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Check If N and Its Double Exist",
        "titleSlug": "check-if-n-and-its-double-exist",
        "timestamp": "1705161205",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Determine if String Halves Are Alike",
        "titleSlug": "determine-if-string-halves-are-alike",
        "timestamp": "1705032551",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343666",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Sort Array By Parity",
        "titleSlug": "sort-array-by-parity",
        "timestamp": "1704316936",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Convert an Array Into a 2D Array With Conditions",
        "titleSlug": "convert-an-array-into-a-2d-array-with-conditions",
        "timestamp": "1704261617",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Average Value of Even Numbers That Are Divisible by Three",
        "titleSlug": "average-value-of-even-numbers-that-are-divisible-by-three",
        "timestamp": "1704259967",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Number of Laser Beams in a Bank",
        "titleSlug": "number-of-laser-beams-in-a-bank",
        "timestamp": "1704256409",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Take Gifts From the Richest Pile",
        "titleSlug": "take-gifts-from-the-richest-pile",
        "timestamp": "1704252901",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Decompress Run-Length Encoded List",
        "titleSlug": "decompress-run-length-encoded-list",
        "timestamp": "1704236706",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Make Array Zero by Subtracting Equal Amounts",
        "titleSlug": "make-array-zero-by-subtracting-equal-amounts",
        "timestamp": "1704234483",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Remove One Element to Make the Array Strictly Increasing",
        "titleSlug": "remove-one-element-to-make-the-array-strictly-increasing",
        "timestamp": "1704228445",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Check if All A's Appears Before All B's",
        "titleSlug": "check-if-all-as-appears-before-all-bs",
        "timestamp": "1704223378",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Contains Duplicate II",
        "titleSlug": "contains-duplicate-ii",
        "timestamp": "1704222499",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Pascal's Triangle",
        "titleSlug": "pascals-triangle",
        "timestamp": "1704219156",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Make Array Zero by Subtracting Equal Amounts",
        "titleSlug": "make-array-zero-by-subtracting-equal-amounts",
        "timestamp": "1704216984",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Apply Transform Over Each Element in Array",
        "titleSlug": "apply-transform-over-each-element-in-array",
        "timestamp": "1704215794",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Find the Difference",
        "titleSlug": "find-the-difference",
        "timestamp": "1702492842",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Monotonic Array",
        "titleSlug": "monotonic-array",
        "timestamp": "1702417451",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      }
    ]
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\recentSubmissions.json
{
  "data": {
    "recentSubmissionList": [
      {
        "title": "Generate a String With Characters That Have Odd Counts",
        "titleSlug": "generate-a-string-with-characters-that-have-odd-counts",
        "timestamp": "1705161771",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Count Negative Numbers in a Sorted Matrix",
        "titleSlug": "count-negative-numbers-in-a-sorted-matrix",
        "timestamp": "1705161438",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Count Negative Numbers in a Sorted Matrix",
        "titleSlug": "count-negative-numbers-in-a-sorted-matrix",
        "timestamp": "1705161424",
        "statusDisplay": "Runtime Error",
        "lang": "javascript"
      },
      {
        "title": "Check If N and Its Double Exist",
        "titleSlug": "check-if-n-and-its-double-exist",
        "timestamp": "1705161205",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Check If N and Its Double Exist",
        "titleSlug": "check-if-n-and-its-double-exist",
        "timestamp": "1705161123",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Steps to Make Two Strings Anagram",
        "titleSlug": "minimum-number-of-steps-to-make-two-strings-anagram",
        "timestamp": "1705160304",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Determine if String Halves Are Alike",
        "titleSlug": "determine-if-string-halves-are-alike",
        "timestamp": "1705032551",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Longest Increasing Subsequence",
        "titleSlug": "longest-increasing-subsequence",
        "timestamp": "1704442672",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Longest Increasing Subsequence",
        "titleSlug": "longest-increasing-subsequence",
        "timestamp": "1704440871",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Longest Increasing Subsequence",
        "titleSlug": "longest-increasing-subsequence",
        "timestamp": "1704439843",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343666",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343585",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343426",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343413",
        "statusDisplay": "Runtime Error",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343387",
        "statusDisplay": "Runtime Error",
        "lang": "javascript"
      },
      {
        "title": "Sort Array By Parity",
        "titleSlug": "sort-array-by-parity",
        "timestamp": "1704316936",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Convert an Array Into a 2D Array With Conditions",
        "titleSlug": "convert-an-array-into-a-2d-array-with-conditions",
        "timestamp": "1704261617",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Convert an Array Into a 2D Array With Conditions",
        "titleSlug": "convert-an-array-into-a-2d-array-with-conditions",
        "timestamp": "1704261566",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Convert an Array Into a 2D Array With Conditions",
        "titleSlug": "convert-an-array-into-a-2d-array-with-conditions",
        "timestamp": "1704261530",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Average Value of Even Numbers That Are Divisible by Three",
        "titleSlug": "average-value-of-even-numbers-that-are-divisible-by-three",
        "timestamp": "1704259967",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      }
    ]
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\selectProblem.json
{
  "data": {
    "question": {
      "questionId": "1",
      "questionFrontendId": "1",
      "boundTopicId": null,
      "title": "Two Sum",
      "titleSlug": "two-sum",
      "content": "<p>Given an array of integers <code>nums</code>&nbsp;and an integer <code>target</code>, return <em>indices of the two numbers such that they add up to <code>target</code></em>.</p>\n\n<p>You may assume that each input would have <strong><em>exactly</em> one solution</strong>, and you may not use the <em>same</em> element twice.</p>\n\n<p>You can return the answer in any order.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,7,11,15], target = 9\n<strong>Output:</strong> [0,1]\n<strong>Explanation:</strong> Because nums[0] + nums[1] == 9, we return [0, 1].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,2,4], target = 6\n<strong>Output:</strong> [1,2]\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,3], target = 6\n<strong>Output:</strong> [0,1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= target &lt;= 10<sup>9</sup></code></li>\n\t<li><strong>Only one valid answer exists.</strong></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow-up:&nbsp;</strong>Can you come up with an algorithm that is less than <code>O(n<sup>2</sup>)</code><font face=\"monospace\">&nbsp;</font>time complexity?",
      "translatedTitle": null,
      "translatedContent": null,
      "isPaidOnly": false,
      "difficulty": "Easy",
      "likes": 55371,
      "dislikes": 1901,
      "isLiked": null,
      "similarQuestions": "[{\"title\": \"3Sum\", \"titleSlug\": \"3sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"4Sum\", \"titleSlug\": \"4sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Two Sum II - Input Array Is Sorted\", \"titleSlug\": \"two-sum-ii-input-array-is-sorted\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Two Sum III - Data structure design\", \"titleSlug\": \"two-sum-iii-data-structure-design\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Subarray Sum Equals K\", \"titleSlug\": \"subarray-sum-equals-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Two Sum IV - Input is a BST\", \"titleSlug\": \"two-sum-iv-input-is-a-bst\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Two Sum Less Than K\", \"titleSlug\": \"two-sum-less-than-k\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Max Number of K-Sum Pairs\", \"titleSlug\": \"max-number-of-k-sum-pairs\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Good Meals\", \"titleSlug\": \"count-good-meals\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Number of Pairs With Absolute Difference K\", \"titleSlug\": \"count-number-of-pairs-with-absolute-difference-k\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Number of Pairs of Strings With Concatenation Equal to Target\", \"titleSlug\": \"number-of-pairs-of-strings-with-concatenation-equal-to-target\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find All K-Distant Indices in an Array\", \"titleSlug\": \"find-all-k-distant-indices-in-an-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"First Letter to Appear Twice\", \"titleSlug\": \"first-letter-to-appear-twice\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Number of Excellent Pairs\", \"titleSlug\": \"number-of-excellent-pairs\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Number of Arithmetic Triplets\", \"titleSlug\": \"number-of-arithmetic-triplets\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Node With Highest Edge Score\", \"titleSlug\": \"node-with-highest-edge-score\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Check Distances Between Same Letters\", \"titleSlug\": \"check-distances-between-same-letters\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find Subarrays With Equal Sum\", \"titleSlug\": \"find-subarrays-with-equal-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Largest Positive Integer That Exists With Its Negative\", \"titleSlug\": \"largest-positive-integer-that-exists-with-its-negative\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Number of Distinct Averages\", \"titleSlug\": \"number-of-distinct-averages\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Count Pairs Whose Sum is Less than Target\", \"titleSlug\": \"count-pairs-whose-sum-is-less-than-target\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
      "exampleTestcases": "[2,7,11,15]\n9\n[3,2,4]\n6\n[3,3]\n6",
      "contributors": [],
      "topicTags": [
        { "name": "Array", "slug": "array", "translatedName": null },
        { "name": "Hash Table", "slug": "hash-table", "translatedName": null }
      ],
      "companyTagStats": null,
      "codeSnippets": [
        {
          "lang": "C++",
          "langSlug": "cpp",
          "code": "class Solution {\npublic:\n    vector<int> twoSum(vector<int>& nums, int target) {\n        \n    }\n};"
        },
        {
          "lang": "Java",
          "langSlug": "java",
          "code": "class Solution {\n    public int[] twoSum(int[] nums, int target) {\n        \n    }\n}"
        },
        {
          "lang": "Python",
          "langSlug": "python",
          "code": "class Solution(object):\n    def twoSum(self, nums, target):\n        \"\"\"\n        :type nums: List[int]\n        :type target: int\n        :rtype: List[int]\n        \"\"\"\n        "
        },
        {
          "lang": "Python3",
          "langSlug": "python3",
          "code": "class Solution:\n    def twoSum(self, nums: List[int], target: int) -> List[int]:\n        "
        },
        {
          "lang": "C",
          "langSlug": "c",
          "code": "/**\n * Note: The returned array must be malloced, assume caller calls free().\n */\nint* twoSum(int* nums, int numsSize, int target, int* returnSize) {\n    \n}"
        },
        {
          "lang": "C#",
          "langSlug": "csharp",
          "code": "public class Solution {\n    public int[] TwoSum(int[] nums, int target) {\n        \n    }\n}"
        },
        {
          "lang": "JavaScript",
          "langSlug": "javascript",
          "code": "/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nvar twoSum = function(nums, target) {\n    \n};"
        },
        {
          "lang": "TypeScript",
          "langSlug": "typescript",
          "code": "function twoSum(nums: number[], target: number): number[] {\n    \n};"
        },
        {
          "lang": "PHP",
          "langSlug": "php",
          "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @param Integer $target\n     * @return Integer[]\n     */\n    function twoSum($nums, $target) {\n        \n    }\n}"
        },
        {
          "lang": "Swift",
          "langSlug": "swift",
          "code": "class Solution {\n    func twoSum(_ nums: [Int], _ target: Int) -> [Int] {\n        \n    }\n}"
        },
        {
          "lang": "Kotlin",
          "langSlug": "kotlin",
          "code": "class Solution {\n    fun twoSum(nums: IntArray, target: Int): IntArray {\n        \n    }\n}"
        },
        {
          "lang": "Dart",
          "langSlug": "dart",
          "code": "class Solution {\n  List<int> twoSum(List<int> nums, int target) {\n    \n  }\n}"
        },
        {
          "lang": "Go",
          "langSlug": "golang",
          "code": "func twoSum(nums []int, target int) []int {\n    \n}"
        },
        {
          "lang": "Ruby",
          "langSlug": "ruby",
          "code": "# @param {Integer[]} nums\n# @param {Integer} target\n# @return {Integer[]}\ndef two_sum(nums, target)\n    \nend"
        },
        {
          "lang": "Scala",
          "langSlug": "scala",
          "code": "object Solution {\n    def twoSum(nums: Array[Int], target: Int): Array[Int] = {\n        \n    }\n}"
        },
        {
          "lang": "Rust",
          "langSlug": "rust",
          "code": "impl Solution {\n    pub fn two_sum(nums: Vec<i32>, target: i32) -> Vec<i32> {\n        \n    }\n}"
        },
        {
          "lang": "Racket",
          "langSlug": "racket",
          "code": "(define/contract (two-sum nums target)\n  (-> (listof exact-integer?) exact-integer? (listof exact-integer?))\n  )"
        },
        {
          "lang": "Erlang",
          "langSlug": "erlang",
          "code": "-spec two_sum(Nums :: [integer()], Target :: integer()) -> [integer()].\ntwo_sum(Nums, Target) ->\n  ."
        },
        {
          "lang": "Elixir",
          "langSlug": "elixir",
          "code": "defmodule Solution do\n  @spec two_sum(nums :: [integer], target :: integer) :: [integer]\n  def two_sum(nums, target) do\n    \n  end\nend"
        }
      ],
      "stats": "{\"totalAccepted\": \"12.6M\", \"totalSubmission\": \"24.1M\", \"totalAcceptedRaw\": 12566379, \"totalSubmissionRaw\": 24123031, \"acRate\": \"52.1%\"}",
      "hints": [
        "A really brute force way would be to search for all possible pairs of numbers but that would be too slow. Again, it's best to try out brute force solutions for just for completeness. It is from these brute force solutions that you can come up with optimizations.",
        "So, if we fix one of the numbers, say <code>x</code>, we have to scan the entire array to find the next number <code>y</code> which is <code>value - x</code> where value is the input parameter. Can we change our array somehow so that this search becomes faster?",
        "The second train of thought is, without changing the array, can we use additional space somehow? Like maybe a hash map to speed up the search?"
      ],
      "solution": {
        "id": "7",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": true,
        "paidOnlyVideo": false
      },
      "status": null,
      "sampleTestCase": "[2,7,11,15]\n9",
      "metaData": "{\n  \"name\": \"twoSum\",\n  \"params\": [\n    {\n      \"name\": \"nums\",\n      \"type\": \"integer[]\"\n    },\n    {\n      \"name\": \"target\",\n      \"type\": \"integer\"\n    }\n  ],\n  \"return\": {\n    \"type\": \"integer[]\",\n    \"size\": 2\n  },\n  \"manual\": false\n}",
      "judgerAvailable": true,
      "judgeType": "small",
      "mysqlSchemas": [],
      "enableRunCode": true,
      "enableTestMode": false,
      "enableDebugger": true,
      "envInfo": "{\"cpp\": [\"C++\", \"<p>Compiled with <code> clang 17 </code> using the latest C++ 20 standard, and <code>libstdc++</code> provided by GCC 11.</p>\\r\\n\\r\\n<p>Your code is compiled with level two optimization (<code>-O2</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"java\": [\"Java\", \"<p><code>OpenJDK 21</code>. Using compile arguments: <code>--enable-preview --release 21</code></p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n<p>Includes <code>Pair</code> class from https://docs.oracle.com/javase/8/javafx/api/javafx/util/Pair.html.</p>\"], \"python\": [\"Python\", \"<p><code>Python 2.7.12</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\\r\\n\\r\\n<p>Note that Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">will not be maintained past 2020</a>. For the latest Python, please choose Python3 instead.</p>\"], \"c\": [\"C\", \"<p>Compiled with <code>gcc 11</code> using the gnu11 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O2</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n\\r\\n<p>For hash table operations, you may use <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>. \\\"uthash.h\\\" is included by default. Below are some examples:</p>\\r\\n\\r\\n<p><b>1. Adding an item to a hash.</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. Looking up an item in a hash:</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. Deleting an item in a hash:</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p><a href=\\\"https://learn.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-12\\\" target=\\\"_blank\\\">C# 12</a> with .NET 8 runtime</p>\"], \"javascript\": [\"JavaScript\", \"<p><code>Node.js 20.10.0</code>.</p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES6 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\\r\\n\\r\\n<p>For Priority Queue / Queue data structures, you may use 5.4.0 version of <a href=\\\"https://github.com/datastructures-js/priority-queue/blob/v5/README.md\\\" target=\\\"_blank\\\">datastructures-js/priority-queue</a> and 4.2.3 version of <a href=\\\"https://github.com/datastructures-js/queue/tree/v4.2.3\\\" target=\\\"_blank\\\">datastructures-js/queue</a>.</p>\"], \"ruby\": [\"Ruby\", \"<p><code>Ruby 3.2</code></p>\\r\\n\\r\\n<p>Some common data structure implementations are provided in the Algorithms module: https://www.rubydoc.info/github/kanwei/algorithms/Algorithms</p>\"], \"swift\": [\"Swift\", \"<p><code>Swift 5.9</code>.</p>\\r\\n\\r\\n<p>You may use <a href=\\\"https://github.com/apple/swift-algorithms/tree/1.2.0\\\" target=\\\"_blank\\\">swift-algorithms 1.2.0</a> and <a href=\\\"https://github.com/apple/swift-collections/tree/1.0.6\\\" target=\\\"_blank\\\">swift-collections 1.0.6</a>.</p>\"], \"golang\": [\"Go\", \"<p><code>Go 1.21</code></p>\\r\\n<p>Support <a href=\\\"https://github.com/emirpasic/gods/tree/v1.18.1\\\" target=\\\"_blank\\\">https://godoc.org/github.com/emirpasic/gods@v1.18.1</a> library.</p>\"], \"python3\": [\"Python3\", \"<p><code>Python 3.11</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\"], \"scala\": [\"Scala\", \"<p><code>Scala 3.3.1</code>.</p>\"], \"kotlin\": [\"Kotlin\", \"<p><code>Kotlin 1.9.0</code>.</p>\\r\\n\\r\\n<p>We are using an experimental compiler provided by JetBrains.</p>\"], \"rust\": [\"Rust\", \"<p><code>Rust 1.74.1</code></p>\\r\\n\\r\\n<p>Supports <a href=\\\"https://crates.io/crates/rand\\\" target=\\\"_blank\\\">rand </a> v0.6\\u00a0from crates.io</p>\"], \"php\": [\"PHP\", \"<p><code>PHP 8.2</code>.</p>\\r\\n<p>With bcmath module</p>\"], \"typescript\": [\"Typescript\", \"<p><code>TypeScript 5.1.6, Node.js 20.10.0</code>.</p>\\r\\n\\r\\n<p>Compile Options: <code>--alwaysStrict --strictBindCallApply --strictFunctionTypes --target ES2022</code></p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES2022 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\"], \"racket\": [\"Racket\", \"<p><a href=\\\"https://docs.racket-lang.org/guide/performance.html#%28tech._c%29\\\" target=\\\"_blank\\\">Racket CS</a> v8.11</p>\\r\\n\\r\\n<p>Using <code>#lang racket</code></p>\\r\\n\\r\\n<p>Required <code>data/gvector data/queue data/order data/heap</code> automatically for your convenience</p>\"], \"erlang\": [\"Erlang\", \"Erlang/OTP 26\"], \"elixir\": [\"Elixir\", \"Elixir 1.15 with Erlang/OTP 26\"], \"dart\": [\"Dart\", \"<p>Dart 3.2</p>\\r\\n\\r\\n<p>Your code will be run directly without compiling</p>\"]}",
      "libraryUrl": null,
      "adminUrl": null,
      "challengeQuestion": null,
      "note": null
    }
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\singleUser.json
{
  "data": {
    "matchedUser": {
      "submissionCalendar": "{\"1704153600\": 24, \"1704240000\": 9, \"1704326400\": 5, \"1704412800\": 3, \"1705017600\": 1, \"1705104000\": 6, \"1699315200\": 46, \"1701302400\": 6, \"1701648000\": 24, \"1701734400\": 11, \"1702339200\": 29, \"1702425600\": 7}",
      "submitStats": {
        "totalSubmissionNum": [
          { "difficulty": "All", "count": 158, "submissions": 463 },
          { "difficulty": "Easy", "count": 131, "submissions": 388 },
          { "difficulty": "Medium", "count": 27, "submissions": 75 },
          { "difficulty": "Hard", "count": 0, "submissions": 0 }
        ],
        "acSubmissionNum": [
          { "difficulty": "All", "count": 133, "submissions": 215 },
          { "difficulty": "Easy", "count": 122, "submissions": 202 },
          { "difficulty": "Medium", "count": 11, "submissions": 13 },
          { "difficulty": "Hard", "count": 0, "submissions": 0 }
        ]
      },
      "username": "jambobjones",
      "githubUrl": "https://github.com/jambobjones",
      "twitterUrl": null,
      "linkedinUrl": null,
      "contributions": {
        "points": 115,
        "questionCount": 0,
        "testcaseCount": 0
      },
      "profile": {
        "realName": "Jambob Jones",
        "userAvatar": "https://assets.leetcode.com/users/jambobjones/avatar_1617850141.png",
        "birthday": null,
        "ranking": 630800,
        "reputation": 0,
        "websites": [],
        "countryName": null,
        "company": null,
        "school": null,
        "skillTags": [],
        "aboutMe": "",
        "starRating": 2
      },
      "badges": [],
      "upcomingBadges": [
        {
          "name": "Mar LeetCoding Challenge",
          "icon": "/static/images/badges/dcc-2024-3.png"
        }
      ],
      "activeBadge": null
    }
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\singleUserContests.json
{
  "data": {
    "userContestRanking": null,
    "userContestRankingHistory": [
      {
        "attended": false,
        "rating": 1500,
        "ranking": 0,
        "trendDirection": "NONE",
        "problemsSolved": 0,
        "totalProblems": 3,
        "finishTimeInSeconds": 0
      }
    ]
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\handlers.ts
import * as msw from 'msw';
import {
  singleUser,
  singleUserContests,
  recentSubmissions,
  recentACSubmissions,
  dailyProblem,
  problems,
  selectProblem,
} from './mockData';

export const handlers = [
  msw.http.post('https://leetcode.com/graphql', async (ctx) => {
    const test = await ctx.request.json();
    const typed = test as { query: string };
    if (typed.query.indexOf('getUserProfile') !== -1) {
      return msw.HttpResponse.json(singleUser);
    }

    if (typed.query.indexOf('getUserContestRanking') !== -1) {
      return msw.HttpResponse.json(singleUserContests);
    }

    if (typed.query.indexOf('getRecentSubmissions') !== -1) {
      return msw.HttpResponse.json(recentSubmissions);
    }

    if (typed.query.indexOf('getACSubmissions') !== -1) {
      return msw.HttpResponse.json(recentACSubmissions);
    }

    if (typed.query.indexOf('getDailyProblem') !== -1) {
      return msw.HttpResponse.json(dailyProblem);
    }

    if (typed.query.indexOf('getProblems') !== -1) {
      return msw.HttpResponse.json(problems);
    }

    if (typed.query.indexOf('selectProblem') !== -1) {
      return msw.HttpResponse.json(selectProblem);
    }

    return msw.HttpResponse.json({});
  }),
];

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\index.ts
import { setupServer } from 'msw/node';
import { handlers } from './handlers';

export const server = setupServer(...handlers);

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\dailyProblem.json
{
  "data": {
    "activeDailyCodingChallengeQuestion": {
      "date": "2024-03-14",
      "link": "/problems/binary-subarrays-with-sum/",
      "question": {
        "questionId": "966",
        "questionFrontendId": "930",
        "boundTopicId": null,
        "title": "Binary Subarrays With Sum",
        "titleSlug": "binary-subarrays-with-sum",
        "content": "<p>Given a binary array <code>nums</code> and an integer <code>goal</code>, return <em>the number of non-empty <strong>subarrays</strong> with a sum</em> <code>goal</code>.</p>\r\n\r\n<p>A <strong>subarray</strong> is a contiguous part of the array.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong class=\"example\">Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> nums = [1,0,1,0,1], goal = 2\r\n<strong>Output:</strong> 4\r\n<strong>Explanation:</strong> The 4 subarrays are bolded and underlined below:\r\n[<u><strong>1,0,1</strong></u>,0,1]\r\n[<u><strong>1,0,1,0</strong></u>,1]\r\n[1,<u><strong>0,1,0,1</strong></u>]\r\n[1,0,<u><strong>1,0,1</strong></u>]\r\n</pre>\r\n\r\n<p><strong class=\"example\">Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> nums = [0,0,0,0,0], goal = 0\r\n<strong>Output:</strong> 15\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= nums.length &lt;= 3 * 10<sup>4</sup></code></li>\r\n\t<li><code>nums[i]</code> is either <code>0</code> or <code>1</code>.</li>\r\n\t<li><code>0 &lt;= goal &lt;= nums.length</code></li>\r\n</ul>",
        "translatedTitle": null,
        "translatedContent": null,
        "isPaidOnly": false,
        "difficulty": "Medium",
        "likes": 3592,
        "dislikes": 120,
        "isLiked": null,
        "similarQuestions": "[{\"title\": \"Count Subarrays With Score Less Than K\", \"titleSlug\": \"count-subarrays-with-score-less-than-k\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Ways to Split Array Into Good Subarrays\", \"titleSlug\": \"ways-to-split-array-into-good-subarrays\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "exampleTestcases": "[1,0,1,0,1]\n2\n[0,0,0,0,0]\n0",
        "contributors": [],
        "topicTags": [
          { "name": "Array", "slug": "array", "translatedName": null },
          {
            "name": "Hash Table",
            "slug": "hash-table",
            "translatedName": null
          },
          {
            "name": "Sliding Window",
            "slug": "sliding-window",
            "translatedName": null
          },
          { "name": "Prefix Sum", "slug": "prefix-sum", "translatedName": null }
        ],
        "companyTagStats": null,
        "codeSnippets": [
          {
            "lang": "C++",
            "langSlug": "cpp",
            "code": "class Solution {\r\npublic:\r\n    int numSubarraysWithSum(vector<int>& nums, int goal) {\r\n        \r\n    }\r\n};"
          },
          {
            "lang": "Java",
            "langSlug": "java",
            "code": "class Solution {\r\n    public int numSubarraysWithSum(int[] nums, int goal) {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Python",
            "langSlug": "python",
            "code": "class Solution(object):\r\n    def numSubarraysWithSum(self, nums, goal):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :type goal: int\r\n        :rtype: int\r\n        \"\"\""
          },
          {
            "lang": "Python3",
            "langSlug": "python3",
            "code": "class Solution:\r\n    def numSubarraysWithSum(self, nums: List[int], goal: int) -> int:"
          },
          {
            "lang": "C",
            "langSlug": "c",
            "code": "int numSubarraysWithSum(int* nums, int numsSize, int goal){\r\n\r\n}"
          },
          {
            "lang": "C#",
            "langSlug": "csharp",
            "code": "public class Solution {\r\n    public int NumSubarraysWithSum(int[] nums, int goal) {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "JavaScript",
            "langSlug": "javascript",
            "code": "/**\r\n * @param {number[]} nums\r\n * @param {number} goal\r\n * @return {number}\r\n */\r\nvar numSubarraysWithSum = function(nums, goal) {\r\n    \r\n};"
          },
          {
            "lang": "TypeScript",
            "langSlug": "typescript",
            "code": "function numSubarraysWithSum(nums: number[], goal: number): number {\r\n\r\n};"
          },
          {
            "lang": "PHP",
            "langSlug": "php",
            "code": "class Solution {\r\n\r\n    /**\r\n     * @param Integer[] $nums\r\n     * @param Integer $goal\r\n     * @return Integer\r\n     */\r\n    function numSubarraysWithSum($nums, $goal) {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Swift",
            "langSlug": "swift",
            "code": "class Solution {\r\n    func numSubarraysWithSum(_ nums: [Int], _ goal: Int) -> Int {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Kotlin",
            "langSlug": "kotlin",
            "code": "class Solution {\r\n    fun numSubarraysWithSum(nums: IntArray, goal: Int): Int {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Go",
            "langSlug": "golang",
            "code": "func numSubarraysWithSum(nums []int, goal int) int {\r\n    \r\n}"
          },
          {
            "lang": "Ruby",
            "langSlug": "ruby",
            "code": "# @param {Integer[]} nums\r\n# @param {Integer} goal\r\n# @return {Integer}\r\ndef num_subarrays_with_sum(nums, goal)\r\n    \r\nend"
          },
          {
            "lang": "Scala",
            "langSlug": "scala",
            "code": "object Solution {\r\n    def numSubarraysWithSum(nums: Array[Int], goal: Int): Int = {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Rust",
            "langSlug": "rust",
            "code": "impl Solution {\r\n    pub fn num_subarrays_with_sum(nums: Vec<i32>, goal: i32) -> i32 {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Racket",
            "langSlug": "racket",
            "code": "(define/contract (num-subarrays-with-sum nums goal)\r\n  (-> (listof exact-integer?) exact-integer? exact-integer?)\r\n\r\n  )"
          }
        ],
        "stats": "{\"totalAccepted\": \"203.9K\", \"totalSubmission\": \"330.4K\", \"totalAcceptedRaw\": 203936, \"totalSubmissionRaw\": 330374, \"acRate\": \"61.7%\"}",
        "hints": [],
        "solution": {
          "id": "2266",
          "canSeeDetail": true,
          "paidOnly": false,
          "hasVideoSolution": false,
          "paidOnlyVideo": true
        },
        "status": null,
        "sampleTestCase": "[1,0,1,0,1]\n2",
        "metaData": "{\n  \"name\": \"numSubarraysWithSum\",\n  \"params\": [\n    {\n      \"name\": \"nums\",\n      \"type\": \"integer[]\"\n    },\n    {\n      \"name\": \"goal\",\n      \"type\": \"integer\"\n    }\n  ],\n  \"return\": {\n    \"type\": \"integer\"\n  }\n}",
        "judgerAvailable": true,
        "judgeType": "large",
        "mysqlSchemas": [],
        "enableRunCode": true,
        "enableTestMode": false,
        "enableDebugger": true,
        "envInfo": "{\"cpp\": [\"C++\", \"<p>Compiled with <code> clang 17 </code> using the latest C++ 20 standard, and <code>libstdc++</code> provided by GCC 11.</p>\\r\\n\\r\\n<p>Your code is compiled with level two optimization (<code>-O2</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"java\": [\"Java\", \"<p><code>OpenJDK 21</code>. Using compile arguments: <code>--enable-preview --release 21</code></p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n<p>Includes <code>Pair</code> class from https://docs.oracle.com/javase/8/javafx/api/javafx/util/Pair.html.</p>\"], \"python\": [\"Python\", \"<p><code>Python 2.7.12</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\\r\\n\\r\\n<p>Note that Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">will not be maintained past 2020</a>. For the latest Python, please choose Python3 instead.</p>\"], \"c\": [\"C\", \"<p>Compiled with <code>gcc 11</code> using the gnu11 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O2</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n\\r\\n<p>For hash table operations, you may use <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>. \\\"uthash.h\\\" is included by default. Below are some examples:</p>\\r\\n\\r\\n<p><b>1. Adding an item to a hash.</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. Looking up an item in a hash:</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. Deleting an item in a hash:</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p><a href=\\\"https://learn.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-12\\\" target=\\\"_blank\\\">C# 12</a> with .NET 8 runtime</p>\"], \"javascript\": [\"JavaScript\", \"<p><code>Node.js 20.10.0</code>.</p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES6 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\\r\\n\\r\\n<p>For Priority Queue / Queue data structures, you may use 5.4.0 version of <a href=\\\"https://github.com/datastructures-js/priority-queue/blob/v5/README.md\\\" target=\\\"_blank\\\">datastructures-js/priority-queue</a> and 4.2.3 version of <a href=\\\"https://github.com/datastructures-js/queue/tree/v4.2.3\\\" target=\\\"_blank\\\">datastructures-js/queue</a>.</p>\"], \"ruby\": [\"Ruby\", \"<p><code>Ruby 3.2</code></p>\\r\\n\\r\\n<p>Some common data structure implementations are provided in the Algorithms module: https://www.rubydoc.info/github/kanwei/algorithms/Algorithms</p>\"], \"swift\": [\"Swift\", \"<p><code>Swift 5.9</code>.</p>\\r\\n\\r\\n<p>You may use <a href=\\\"https://github.com/apple/swift-algorithms/tree/1.2.0\\\" target=\\\"_blank\\\">swift-algorithms 1.2.0</a> and <a href=\\\"https://github.com/apple/swift-collections/tree/1.0.6\\\" target=\\\"_blank\\\">swift-collections 1.0.6</a>.</p>\"], \"golang\": [\"Go\", \"<p><code>Go 1.21</code></p>\\r\\n<p>Support <a href=\\\"https://github.com/emirpasic/gods/tree/v1.18.1\\\" target=\\\"_blank\\\">https://godoc.org/github.com/emirpasic/gods@v1.18.1</a> library.</p>\"], \"python3\": [\"Python3\", \"<p><code>Python 3.11</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\"], \"scala\": [\"Scala\", \"<p><code>Scala 3.3.1</code>.</p>\"], \"kotlin\": [\"Kotlin\", \"<p><code>Kotlin 1.9.0</code>.</p>\\r\\n\\r\\n<p>We are using an experimental compiler provided by JetBrains.</p>\"], \"rust\": [\"Rust\", \"<p><code>Rust 1.74.1</code></p>\\r\\n\\r\\n<p>Supports <a href=\\\"https://crates.io/crates/rand\\\" target=\\\"_blank\\\">rand </a> v0.6\\u00a0from crates.io</p>\"], \"php\": [\"PHP\", \"<p><code>PHP 8.2</code>.</p>\\r\\n<p>With bcmath module</p>\"], \"typescript\": [\"Typescript\", \"<p><code>TypeScript 5.1.6, Node.js 20.10.0</code>.</p>\\r\\n\\r\\n<p>Compile Options: <code>--alwaysStrict --strictBindCallApply --strictFunctionTypes --target ES2022</code></p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES2022 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\"], \"racket\": [\"Racket\", \"<p><a href=\\\"https://docs.racket-lang.org/guide/performance.html#%28tech._c%29\\\" target=\\\"_blank\\\">Racket CS</a> v8.11</p>\\r\\n\\r\\n<p>Using <code>#lang racket</code></p>\\r\\n\\r\\n<p>Required <code>data/gvector data/queue data/order data/heap</code> automatically for your convenience</p>\"]}",
        "libraryUrl": null,
        "adminUrl": null,
        "challengeQuestion": {
          "id": "1692",
          "date": "2024-03-14",
          "incompleteChallengeCount": 0,
          "streakCount": 0,
          "type": "DAILY"
        },
        "note": null
      }
    }
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\index.ts
export { default as singleUser } from './singleUser.json';
export { default as recentSubmissions } from './recentSubmissions.json';
export { default as recentACSubmissions } from './recentAcSubmissionList.json';
export { default as singleUserContests } from './singleUserContests.json';
export { default as dailyProblem } from './dailyProblem.json';
export { default as problems } from './problems.json';
export { default as selectProblem } from './selectProblem.json';

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\problems.json
{
  "data": {
    "problemsetQuestionList": {
      "total": 3078,
      "questions": [
        {
          "acRate": 52.09288098160903,
          "difficulty": "Easy",
          "freqBar": null,
          "questionFrontendId": "1",
          "isFavor": false,
          "isPaidOnly": false,
          "status": null,
          "title": "Two Sum",
          "titleSlug": "two-sum",
          "topicTags": [
            { "name": "Array", "id": "VG9waWNUYWdOb2RlOjU=", "slug": "array" },
            {
              "name": "Hash Table",
              "id": "VG9waWNUYWdOb2RlOjY=",
              "slug": "hash-table"
            }
          ],
          "hasSolution": true,
          "hasVideoSolution": true
        }
      ]
    }
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\recentAcSubmissionList.json
{
  "data": {
    "recentAcSubmissionList": [
      {
        "title": "Generate a String With Characters That Have Odd Counts",
        "titleSlug": "generate-a-string-with-characters-that-have-odd-counts",
        "timestamp": "1705161771",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Count Negative Numbers in a Sorted Matrix",
        "titleSlug": "count-negative-numbers-in-a-sorted-matrix",
        "timestamp": "1705161438",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Check If N and Its Double Exist",
        "titleSlug": "check-if-n-and-its-double-exist",
        "timestamp": "1705161205",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Determine if String Halves Are Alike",
        "titleSlug": "determine-if-string-halves-are-alike",
        "timestamp": "1705032551",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343666",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Sort Array By Parity",
        "titleSlug": "sort-array-by-parity",
        "timestamp": "1704316936",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Convert an Array Into a 2D Array With Conditions",
        "titleSlug": "convert-an-array-into-a-2d-array-with-conditions",
        "timestamp": "1704261617",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Average Value of Even Numbers That Are Divisible by Three",
        "titleSlug": "average-value-of-even-numbers-that-are-divisible-by-three",
        "timestamp": "1704259967",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Number of Laser Beams in a Bank",
        "titleSlug": "number-of-laser-beams-in-a-bank",
        "timestamp": "1704256409",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Take Gifts From the Richest Pile",
        "titleSlug": "take-gifts-from-the-richest-pile",
        "timestamp": "1704252901",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Decompress Run-Length Encoded List",
        "titleSlug": "decompress-run-length-encoded-list",
        "timestamp": "1704236706",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Make Array Zero by Subtracting Equal Amounts",
        "titleSlug": "make-array-zero-by-subtracting-equal-amounts",
        "timestamp": "1704234483",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Remove One Element to Make the Array Strictly Increasing",
        "titleSlug": "remove-one-element-to-make-the-array-strictly-increasing",
        "timestamp": "1704228445",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Check if All A's Appears Before All B's",
        "titleSlug": "check-if-all-as-appears-before-all-bs",
        "timestamp": "1704223378",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Contains Duplicate II",
        "titleSlug": "contains-duplicate-ii",
        "timestamp": "1704222499",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Pascal's Triangle",
        "titleSlug": "pascals-triangle",
        "timestamp": "1704219156",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Make Array Zero by Subtracting Equal Amounts",
        "titleSlug": "make-array-zero-by-subtracting-equal-amounts",
        "timestamp": "1704216984",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Apply Transform Over Each Element in Array",
        "titleSlug": "apply-transform-over-each-element-in-array",
        "timestamp": "1704215794",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Find the Difference",
        "titleSlug": "find-the-difference",
        "timestamp": "1702492842",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Monotonic Array",
        "titleSlug": "monotonic-array",
        "timestamp": "1702417451",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      }
    ]
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\recentSubmissions.json
{
  "data": {
    "recentSubmissionList": [
      {
        "title": "Generate a String With Characters That Have Odd Counts",
        "titleSlug": "generate-a-string-with-characters-that-have-odd-counts",
        "timestamp": "1705161771",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Count Negative Numbers in a Sorted Matrix",
        "titleSlug": "count-negative-numbers-in-a-sorted-matrix",
        "timestamp": "1705161438",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Count Negative Numbers in a Sorted Matrix",
        "titleSlug": "count-negative-numbers-in-a-sorted-matrix",
        "timestamp": "1705161424",
        "statusDisplay": "Runtime Error",
        "lang": "javascript"
      },
      {
        "title": "Check If N and Its Double Exist",
        "titleSlug": "check-if-n-and-its-double-exist",
        "timestamp": "1705161205",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Check If N and Its Double Exist",
        "titleSlug": "check-if-n-and-its-double-exist",
        "timestamp": "1705161123",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Steps to Make Two Strings Anagram",
        "titleSlug": "minimum-number-of-steps-to-make-two-strings-anagram",
        "timestamp": "1705160304",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Determine if String Halves Are Alike",
        "titleSlug": "determine-if-string-halves-are-alike",
        "timestamp": "1705032551",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Longest Increasing Subsequence",
        "titleSlug": "longest-increasing-subsequence",
        "timestamp": "1704442672",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Longest Increasing Subsequence",
        "titleSlug": "longest-increasing-subsequence",
        "timestamp": "1704440871",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Longest Increasing Subsequence",
        "titleSlug": "longest-increasing-subsequence",
        "timestamp": "1704439843",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343666",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343585",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343426",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343413",
        "statusDisplay": "Runtime Error",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343387",
        "statusDisplay": "Runtime Error",
        "lang": "javascript"
      },
      {
        "title": "Sort Array By Parity",
        "titleSlug": "sort-array-by-parity",
        "timestamp": "1704316936",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Convert an Array Into a 2D Array With Conditions",
        "titleSlug": "convert-an-array-into-a-2d-array-with-conditions",
        "timestamp": "1704261617",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Convert an Array Into a 2D Array With Conditions",
        "titleSlug": "convert-an-array-into-a-2d-array-with-conditions",
        "timestamp": "1704261566",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Convert an Array Into a 2D Array With Conditions",
        "titleSlug": "convert-an-array-into-a-2d-array-with-conditions",
        "timestamp": "1704261530",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Average Value of Even Numbers That Are Divisible by Three",
        "titleSlug": "average-value-of-even-numbers-that-are-divisible-by-three",
        "timestamp": "1704259967",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      }
    ]
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\selectProblem.json
{
  "data": {
    "question": {
      "questionId": "1",
      "questionFrontendId": "1",
      "boundTopicId": null,
      "title": "Two Sum",
      "titleSlug": "two-sum",
      "content": "<p>Given an array of integers <code>nums</code>&nbsp;and an integer <code>target</code>, return <em>indices of the two numbers such that they add up to <code>target</code></em>.</p>\n\n<p>You may assume that each input would have <strong><em>exactly</em> one solution</strong>, and you may not use the <em>same</em> element twice.</p>\n\n<p>You can return the answer in any order.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,7,11,15], target = 9\n<strong>Output:</strong> [0,1]\n<strong>Explanation:</strong> Because nums[0] + nums[1] == 9, we return [0, 1].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,2,4], target = 6\n<strong>Output:</strong> [1,2]\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,3], target = 6\n<strong>Output:</strong> [0,1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= target &lt;= 10<sup>9</sup></code></li>\n\t<li><strong>Only one valid answer exists.</strong></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow-up:&nbsp;</strong>Can you come up with an algorithm that is less than <code>O(n<sup>2</sup>)</code><font face=\"monospace\">&nbsp;</font>time complexity?",
      "translatedTitle": null,
      "translatedContent": null,
      "isPaidOnly": false,
      "difficulty": "Easy",
      "likes": 55371,
      "dislikes": 1901,
      "isLiked": null,
      "similarQuestions": "[{\"title\": \"3Sum\", \"titleSlug\": \"3sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"4Sum\", \"titleSlug\": \"4sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Two Sum II - Input Array Is Sorted\", \"titleSlug\": \"two-sum-ii-input-array-is-sorted\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Two Sum III - Data structure design\", \"titleSlug\": \"two-sum-iii-data-structure-design\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Subarray Sum Equals K\", \"titleSlug\": \"subarray-sum-equals-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Two Sum IV - Input is a BST\", \"titleSlug\": \"two-sum-iv-input-is-a-bst\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Two Sum Less Than K\", \"titleSlug\": \"two-sum-less-than-k\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Max Number of K-Sum Pairs\", \"titleSlug\": \"max-number-of-k-sum-pairs\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Good Meals\", \"titleSlug\": \"count-good-meals\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Number of Pairs With Absolute Difference K\", \"titleSlug\": \"count-number-of-pairs-with-absolute-difference-k\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Number of Pairs of Strings With Concatenation Equal to Target\", \"titleSlug\": \"number-of-pairs-of-strings-with-concatenation-equal-to-target\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find All K-Distant Indices in an Array\", \"titleSlug\": \"find-all-k-distant-indices-in-an-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"First Letter to Appear Twice\", \"titleSlug\": \"first-letter-to-appear-twice\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Number of Excellent Pairs\", \"titleSlug\": \"number-of-excellent-pairs\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Number of Arithmetic Triplets\", \"titleSlug\": \"number-of-arithmetic-triplets\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Node With Highest Edge Score\", \"titleSlug\": \"node-with-highest-edge-score\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Check Distances Between Same Letters\", \"titleSlug\": \"check-distances-between-same-letters\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find Subarrays With Equal Sum\", \"titleSlug\": \"find-subarrays-with-equal-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Largest Positive Integer That Exists With Its Negative\", \"titleSlug\": \"largest-positive-integer-that-exists-with-its-negative\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Number of Distinct Averages\", \"titleSlug\": \"number-of-distinct-averages\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Count Pairs Whose Sum is Less than Target\", \"titleSlug\": \"count-pairs-whose-sum-is-less-than-target\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
      "exampleTestcases": "[2,7,11,15]\n9\n[3,2,4]\n6\n[3,3]\n6",
      "contributors": [],
      "topicTags": [
        { "name": "Array", "slug": "array", "translatedName": null },
        { "name": "Hash Table", "slug": "hash-table", "translatedName": null }
      ],
      "companyTagStats": null,
      "codeSnippets": [
        {
          "lang": "C++",
          "langSlug": "cpp",
          "code": "class Solution {\npublic:\n    vector<int> twoSum(vector<int>& nums, int target) {\n        \n    }\n};"
        },
        {
          "lang": "Java",
          "langSlug": "java",
          "code": "class Solution {\n    public int[] twoSum(int[] nums, int target) {\n        \n    }\n}"
        },
        {
          "lang": "Python",
          "langSlug": "python",
          "code": "class Solution(object):\n    def twoSum(self, nums, target):\n        \"\"\"\n        :type nums: List[int]\n        :type target: int\n        :rtype: List[int]\n        \"\"\"\n        "
        },
        {
          "lang": "Python3",
          "langSlug": "python3",
          "code": "class Solution:\n    def twoSum(self, nums: List[int], target: int) -> List[int]:\n        "
        },
        {
          "lang": "C",
          "langSlug": "c",
          "code": "/**\n * Note: The returned array must be malloced, assume caller calls free().\n */\nint* twoSum(int* nums, int numsSize, int target, int* returnSize) {\n    \n}"
        },
        {
          "lang": "C#",
          "langSlug": "csharp",
          "code": "public class Solution {\n    public int[] TwoSum(int[] nums, int target) {\n        \n    }\n}"
        },
        {
          "lang": "JavaScript",
          "langSlug": "javascript",
          "code": "/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nvar twoSum = function(nums, target) {\n    \n};"
        },
        {
          "lang": "TypeScript",
          "langSlug": "typescript",
          "code": "function twoSum(nums: number[], target: number): number[] {\n    \n};"
        },
        {
          "lang": "PHP",
          "langSlug": "php",
          "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @param Integer $target\n     * @return Integer[]\n     */\n    function twoSum($nums, $target) {\n        \n    }\n}"
        },
        {
          "lang": "Swift",
          "langSlug": "swift",
          "code": "class Solution {\n    func twoSum(_ nums: [Int], _ target: Int) -> [Int] {\n        \n    }\n}"
        },
        {
          "lang": "Kotlin",
          "langSlug": "kotlin",
          "code": "class Solution {\n    fun twoSum(nums: IntArray, target: Int): IntArray {\n        \n    }\n}"
        },
        {
          "lang": "Dart",
          "langSlug": "dart",
          "code": "class Solution {\n  List<int> twoSum(List<int> nums, int target) {\n    \n  }\n}"
        },
        {
          "lang": "Go",
          "langSlug": "golang",
          "code": "func twoSum(nums []int, target int) []int {\n    \n}"
        },
        {
          "lang": "Ruby",
          "langSlug": "ruby",
          "code": "# @param {Integer[]} nums\n# @param {Integer} target\n# @return {Integer[]}\ndef two_sum(nums, target)\n    \nend"
        },
        {
          "lang": "Scala",
          "langSlug": "scala",
          "code": "object Solution {\n    def twoSum(nums: Array[Int], target: Int): Array[Int] = {\n        \n    }\n}"
        },
        {
          "lang": "Rust",
          "langSlug": "rust",
          "code": "impl Solution {\n    pub fn two_sum(nums: Vec<i32>, target: i32) -> Vec<i32> {\n        \n    }\n}"
        },
        {
          "lang": "Racket",
          "langSlug": "racket",
          "code": "(define/contract (two-sum nums target)\n  (-> (listof exact-integer?) exact-integer? (listof exact-integer?))\n  )"
        },
        {
          "lang": "Erlang",
          "langSlug": "erlang",
          "code": "-spec two_sum(Nums :: [integer()], Target :: integer()) -> [integer()].\ntwo_sum(Nums, Target) ->\n  ."
        },
        {
          "lang": "Elixir",
          "langSlug": "elixir",
          "code": "defmodule Solution do\n  @spec two_sum(nums :: [integer], target :: integer) :: [integer]\n  def two_sum(nums, target) do\n    \n  end\nend"
        }
      ],
      "stats": "{\"totalAccepted\": \"12.6M\", \"totalSubmission\": \"24.1M\", \"totalAcceptedRaw\": 12566379, \"totalSubmissionRaw\": 24123031, \"acRate\": \"52.1%\"}",
      "hints": [
        "A really brute force way would be to search for all possible pairs of numbers but that would be too slow. Again, it's best to try out brute force solutions for just for completeness. It is from these brute force solutions that you can come up with optimizations.",
        "So, if we fix one of the numbers, say <code>x</code>, we have to scan the entire array to find the next number <code>y</code> which is <code>value - x</code> where value is the input parameter. Can we change our array somehow so that this search becomes faster?",
        "The second train of thought is, without changing the array, can we use additional space somehow? Like maybe a hash map to speed up the search?"
      ],
      "solution": {
        "id": "7",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": true,
        "paidOnlyVideo": false
      },
      "status": null,
      "sampleTestCase": "[2,7,11,15]\n9",
      "metaData": "{\n  \"name\": \"twoSum\",\n  \"params\": [\n    {\n      \"name\": \"nums\",\n      \"type\": \"integer[]\"\n    },\n    {\n      \"name\": \"target\",\n      \"type\": \"integer\"\n    }\n  ],\n  \"return\": {\n    \"type\": \"integer[]\",\n    \"size\": 2\n  },\n  \"manual\": false\n}",
      "judgerAvailable": true,
      "judgeType": "small",
      "mysqlSchemas": [],
      "enableRunCode": true,
      "enableTestMode": false,
      "enableDebugger": true,
      "envInfo": "{\"cpp\": [\"C++\", \"<p>Compiled with <code> clang 17 </code> using the latest C++ 20 standard, and <code>libstdc++</code> provided by GCC 11.</p>\\r\\n\\r\\n<p>Your code is compiled with level two optimization (<code>-O2</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"java\": [\"Java\", \"<p><code>OpenJDK 21</code>. Using compile arguments: <code>--enable-preview --release 21</code></p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n<p>Includes <code>Pair</code> class from https://docs.oracle.com/javase/8/javafx/api/javafx/util/Pair.html.</p>\"], \"python\": [\"Python\", \"<p><code>Python 2.7.12</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\\r\\n\\r\\n<p>Note that Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">will not be maintained past 2020</a>. For the latest Python, please choose Python3 instead.</p>\"], \"c\": [\"C\", \"<p>Compiled with <code>gcc 11</code> using the gnu11 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O2</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n\\r\\n<p>For hash table operations, you may use <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>. \\\"uthash.h\\\" is included by default. Below are some examples:</p>\\r\\n\\r\\n<p><b>1. Adding an item to a hash.</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. Looking up an item in a hash:</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. Deleting an item in a hash:</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p><a href=\\\"https://learn.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-12\\\" target=\\\"_blank\\\">C# 12</a> with .NET 8 runtime</p>\"], \"javascript\": [\"JavaScript\", \"<p><code>Node.js 20.10.0</code>.</p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES6 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\\r\\n\\r\\n<p>For Priority Queue / Queue data structures, you may use 5.4.0 version of <a href=\\\"https://github.com/datastructures-js/priority-queue/blob/v5/README.md\\\" target=\\\"_blank\\\">datastructures-js/priority-queue</a> and 4.2.3 version of <a href=\\\"https://github.com/datastructures-js/queue/tree/v4.2.3\\\" target=\\\"_blank\\\">datastructures-js/queue</a>.</p>\"], \"ruby\": [\"Ruby\", \"<p><code>Ruby 3.2</code></p>\\r\\n\\r\\n<p>Some common data structure implementations are provided in the Algorithms module: https://www.rubydoc.info/github/kanwei/algorithms/Algorithms</p>\"], \"swift\": [\"Swift\", \"<p><code>Swift 5.9</code>.</p>\\r\\n\\r\\n<p>You may use <a href=\\\"https://github.com/apple/swift-algorithms/tree/1.2.0\\\" target=\\\"_blank\\\">swift-algorithms 1.2.0</a> and <a href=\\\"https://github.com/apple/swift-collections/tree/1.0.6\\\" target=\\\"_blank\\\">swift-collections 1.0.6</a>.</p>\"], \"golang\": [\"Go\", \"<p><code>Go 1.21</code></p>\\r\\n<p>Support <a href=\\\"https://github.com/emirpasic/gods/tree/v1.18.1\\\" target=\\\"_blank\\\">https://godoc.org/github.com/emirpasic/gods@v1.18.1</a> library.</p>\"], \"python3\": [\"Python3\", \"<p><code>Python 3.11</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\"], \"scala\": [\"Scala\", \"<p><code>Scala 3.3.1</code>.</p>\"], \"kotlin\": [\"Kotlin\", \"<p><code>Kotlin 1.9.0</code>.</p>\\r\\n\\r\\n<p>We are using an experimental compiler provided by JetBrains.</p>\"], \"rust\": [\"Rust\", \"<p><code>Rust 1.74.1</code></p>\\r\\n\\r\\n<p>Supports <a href=\\\"https://crates.io/crates/rand\\\" target=\\\"_blank\\\">rand </a> v0.6\\u00a0from crates.io</p>\"], \"php\": [\"PHP\", \"<p><code>PHP 8.2</code>.</p>\\r\\n<p>With bcmath module</p>\"], \"typescript\": [\"Typescript\", \"<p><code>TypeScript 5.1.6, Node.js 20.10.0</code>.</p>\\r\\n\\r\\n<p>Compile Options: <code>--alwaysStrict --strictBindCallApply --strictFunctionTypes --target ES2022</code></p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES2022 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\"], \"racket\": [\"Racket\", \"<p><a href=\\\"https://docs.racket-lang.org/guide/performance.html#%28tech._c%29\\\" target=\\\"_blank\\\">Racket CS</a> v8.11</p>\\r\\n\\r\\n<p>Using <code>#lang racket</code></p>\\r\\n\\r\\n<p>Required <code>data/gvector data/queue data/order data/heap</code> automatically for your convenience</p>\"], \"erlang\": [\"Erlang\", \"Erlang/OTP 26\"], \"elixir\": [\"Elixir\", \"Elixir 1.15 with Erlang/OTP 26\"], \"dart\": [\"Dart\", \"<p>Dart 3.2</p>\\r\\n\\r\\n<p>Your code will be run directly without compiling</p>\"]}",
      "libraryUrl": null,
      "adminUrl": null,
      "challengeQuestion": null,
      "note": null
    }
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\singleUser.json
{
  "data": {
    "matchedUser": {
      "submissionCalendar": "{\"1704153600\": 24, \"1704240000\": 9, \"1704326400\": 5, \"1704412800\": 3, \"1705017600\": 1, \"1705104000\": 6, \"1699315200\": 46, \"1701302400\": 6, \"1701648000\": 24, \"1701734400\": 11, \"1702339200\": 29, \"1702425600\": 7}",
      "submitStats": {
        "totalSubmissionNum": [
          { "difficulty": "All", "count": 158, "submissions": 463 },
          { "difficulty": "Easy", "count": 131, "submissions": 388 },
          { "difficulty": "Medium", "count": 27, "submissions": 75 },
          { "difficulty": "Hard", "count": 0, "submissions": 0 }
        ],
        "acSubmissionNum": [
          { "difficulty": "All", "count": 133, "submissions": 215 },
          { "difficulty": "Easy", "count": 122, "submissions": 202 },
          { "difficulty": "Medium", "count": 11, "submissions": 13 },
          { "difficulty": "Hard", "count": 0, "submissions": 0 }
        ]
      },
      "username": "jambobjones",
      "githubUrl": "https://github.com/jambobjones",
      "twitterUrl": null,
      "linkedinUrl": null,
      "contributions": {
        "points": 115,
        "questionCount": 0,
        "testcaseCount": 0
      },
      "profile": {
        "realName": "Jambob Jones",
        "userAvatar": "https://assets.leetcode.com/users/jambobjones/avatar_1617850141.png",
        "birthday": null,
        "ranking": 630800,
        "reputation": 0,
        "websites": [],
        "countryName": null,
        "company": null,
        "school": null,
        "skillTags": [],
        "aboutMe": "",
        "starRating": 2
      },
      "badges": [],
      "upcomingBadges": [
        {
          "name": "Mar LeetCoding Challenge",
          "icon": "/static/images/badges/dcc-2024-3.png"
        }
      ],
      "activeBadge": null
    }
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\singleUserContests.json
{
  "data": {
    "userContestRanking": null,
    "userContestRankingHistory": [
      {
        "attended": false,
        "rating": 1500,
        "ranking": 0,
        "trendDirection": "NONE",
        "problemsSolved": 0,
        "totalProblems": 3,
        "finishTimeInSeconds": 0
      }
    ]
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\Controllers\fetchDataRawFormat.ts
import { Response } from 'express';

const fetchDataRawFormat = async (
    options: { username: string },
    res: Response,
    query: string
) => {
    try {

        const response = await fetch('https://leetcode.com/graphql', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                Referer: 'https://leetcode.com',
            },
            body: JSON.stringify({
                query: query,
                variables: {
                    username: options.username, 
                },
            }),
        });
        
        const result = await response.json();
        if (!response.ok) {
            console.error(`HTTP error! status: ${response.status}`);
        }
        if (result.errors) {
            return res.send(result);
        }

        return res.json(result.data);
    } catch (err) {
        console.error('Error: ', err);
        return res.send(err);
    }
};

export default fetchDataRawFormat;

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\Controllers\fetchDiscussion.ts
import { Response } from 'express';
import { TrendingDiscussionObject } from '../types';

const fetchDiscussion = async (
    options: { first: number },
    res: Response,
    formatData: (data: TrendingDiscussionObject) => {},
    query: string
) => {
    try {
        const response = await fetch('https://leetcode.com/graphql', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                Referer: 'https://leetcode.com',
            },
            body: JSON.stringify({
                query: query,
                variables: {
                    first: options.first || 20, //by default get 20 question
                },
            }),
        });
        
        const result = await response.json();

        if (result.errors) {
            return res.send(result);
        }

        return res.json(formatData(result.data));
    } catch (err) {
        console.error('Error: ', err);
        return res.send(err);
    }
};

export default fetchDiscussion;

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\Controllers\fetchProblems.ts
import { Response } from 'express';
import { ProblemSetQuestionListData } from '../types';

const fetchProblems = async (
  options: { limit: number; tags: string },
  res: Response,
  formatData: (data: ProblemSetQuestionListData) => {},
  query: string
) => {
  try {
    const response = await fetch('https://leetcode.com/graphql', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        Referer: 'https://leetcode.com',
      },
      body: JSON.stringify({
        query: query,
        variables: {
          categorySlug: '',
          skip: 0,
          limit: options.limit || 20, //by default get 20 question
          filters: { tags: options.tags ? options.tags.split(' ') : ' ' }, //filter by tags
        },
      }),
    });

    const result = await response.json();

    if (result.errors) {
      return res.send(result);
    }
    return res.json(formatData(result.data));
  } catch (err) {
    console.error('Error: ', err);
    return res.send(err);
  }
};

export default fetchProblems;

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\Controllers\fetchSingleProblem.ts
import { Response } from 'express';
import { DailyProblemData, SelectProblemData } from '../types';

const fetchSingleProblem = async (
  res: Response,
  formatData: (data: DailyProblemData & SelectProblemData) => void,
  query: string,
  titleSlug: string | null
) => {
  try {
    const response = await fetch('https://leetcode.com/graphql', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        Referer: 'https://leetcode.com',
      },
      body: JSON.stringify({
        query: query,
        variables: {
          titleSlug, //search question using titleSlug
        },
      }),
    });

    const result = await response.json();

    if (result.errors) {
      return res.send(result);
    }

    return res.json(formatData(result.data));
  } catch (err) {
    console.error('Error: ', err);
    return res.send(err);
  }
};

export default fetchSingleProblem;

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\Controllers\fetchUserDetails.ts
import { Response } from 'express';
import { UserData } from '../types';

const fetchUserDetails = async (
  options: { username: string; limit: number },
  res: Response,
  formatData: (data: UserData) => {},
  query: string
) => {
  try {
    const response = await fetch('https://leetcode.com/graphql', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        Referer: 'https://leetcode.com',
      },
      body: JSON.stringify({
        query: query,
        variables: {
          username: options.username, //username required
          limit: options.limit, //only for submission
        },
      }),
    });

    const result = await response.json();

    if (result.errors) {
      return res.send(result);
    }

    return res.json(formatData(result.data));
  } catch (err) {
    console.error('Error: ', err);
    return res.send(err);
  }
};

export default fetchUserDetails;

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\Controllers\index.ts
export { default as fetchSingleProblem } from './fetchSingleProblem';
export { default as fetchProblems } from './fetchProblems';
export { default as fetchUserDetails } from './fetchUserDetails';
export { default as fetchTrendingTopics } from './fetchDiscussion';
export { default as fetchDataRawFormat } from './fetchDataRawFormat';

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\FormatUtils\index.ts
export * from './userData';
export * from './problemData';
export * from './trendingTopicData';

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\FormatUtils\problemData.ts
import {
  DailyProblemData,
  ProblemSetQuestionListData,
  SelectProblemData,
} from '../types';

export const formatDailyData = (data: DailyProblemData) => ({
  questionLink:
    `https://leetcode.com` + data.activeDailyCodingChallengeQuestion.link,
  date: data.activeDailyCodingChallengeQuestion.date,
  questionId: data.activeDailyCodingChallengeQuestion.question.questionId,
  questionFrontendId:
    data.activeDailyCodingChallengeQuestion.question.questionFrontendId,
  questionTitle: data.activeDailyCodingChallengeQuestion.question.title,
  titleSlug: data.activeDailyCodingChallengeQuestion.question.titleSlug,
  difficulty: data.activeDailyCodingChallengeQuestion.question.difficulty,
  isPaidOnly: data.activeDailyCodingChallengeQuestion.question.isPaidOnly,
  question: data.activeDailyCodingChallengeQuestion.question.content,
  exampleTestcases:
    data.activeDailyCodingChallengeQuestion.question.exampleTestcases,
  topicTags: data.activeDailyCodingChallengeQuestion.question.topicTags,
  hints: data.activeDailyCodingChallengeQuestion.question.hints,
  solution: data.activeDailyCodingChallengeQuestion.question.solution,
  companyTagStats:
    data.activeDailyCodingChallengeQuestion.question.companyTagStats,
  likes: data.activeDailyCodingChallengeQuestion.question.likes,
  dislikes: data.activeDailyCodingChallengeQuestion.question.dislikes,
  similarQuestions:
    data.activeDailyCodingChallengeQuestion.question.similarQuestions,
});

export const formatQuestionData = (data: SelectProblemData) => ({
  link: `https://leetcode.com/problems/` + data.question.titleSlug,
  questionId: data.question.questionId,
  questionFrontendId: data.question.questionFrontendId,
  questionTitle: data.question.title,
  titleSlug: data.question.titleSlug,
  difficulty: data.question.difficulty,
  isPaidOnly: data.question.isPaidOnly,
  question: data.question.content,
  exampleTestcases: data.question.exampleTestcases,
  topicTags: data.question.topicTags,
  hints: data.question.hints,
  solution: data.question.solution,
  companyTagStats: data.question.companyTagStats,
  likes: data.question.likes,
  dislikes: data.question.dislikes,
  similarQuestions: data.question.similarQuestions,
});

export const formatProblemsData = (data: ProblemSetQuestionListData) => ({
  totalQuestions: data.problemsetQuestionList.total,
  count: data.problemsetQuestionList.questions.length,
  problemsetQuestionList: data.problemsetQuestionList.questions,
});


// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\FormatUtils\trendingTopicData.ts
import { TrendingDiscussionObject } from "../types";

export const formatTrendingCategoryTopicData = (data: TrendingDiscussionObject) => {
  // Not suggest reformat this data. as the orginial format are orginised in a way that is easy to understand
  return data
};

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\FormatUtils\userData.ts
import { UserData } from '../types';

export const formatUserData = (data: UserData) => ({
  username: data.matchedUser.username,
  name: data.matchedUser.profile.realName,
  birthday: data.matchedUser.profile.birthday,
  avatar: data.matchedUser.profile.userAvatar,
  ranking: data.matchedUser.profile.ranking,
  reputation: data.matchedUser.profile.reputation,
  gitHub: data.matchedUser.githubUrl,
  twitter: data.matchedUser.twitterUrl,
  linkedIN: data.matchedUser.linkedinUrl,
  website: data.matchedUser.profile.websites,
  country: data.matchedUser.profile.countryName,
  company: data.matchedUser.profile.company,
  school: data.matchedUser.profile.school,
  skillTags: data.matchedUser.profile.skillTags,
  about: data.matchedUser.profile.aboutMe,
});

export const formatBadgesData = (data: UserData) => ({
  badgesCount: data.matchedUser.badges.length,
  badges: data.matchedUser.badges,
  upcomingBadges: data.matchedUser.upcomingBadges,
  activeBadge: data.matchedUser.activeBadge,
});

export const formatContestData = (data: UserData) => ({
  contestAttend: data.userContestRanking?.attendedContestsCount,
  contestRating: data.userContestRanking?.rating,
  contestGlobalRanking: data.userContestRanking?.globalRanking,
  totalParticipants: data.userContestRanking?.totalParticipants,
  contestTopPercentage: data.userContestRanking?.topPercentage,
  contestBadges: data.userContestRanking?.badge,
  contestParticipation: data.userContestRankingHistory.filter(
    (obj) => obj.attended === true
  ),
});

export const formatContestHistoryData = (data: UserData) => ({
  count: data.userContestRankingHistory.length,
  contestHistory: data.userContestRankingHistory,
});

export const formatSolvedProblemsData = (data: UserData) => ({
  solvedProblem: data.matchedUser.submitStats.acSubmissionNum[0].count,
  easySolved: data.matchedUser.submitStats.acSubmissionNum[1].count,
  mediumSolved: data.matchedUser.submitStats.acSubmissionNum[2].count,
  hardSolved: data.matchedUser.submitStats.acSubmissionNum[3].count,
  totalSubmissionNum: data.matchedUser.submitStats.totalSubmissionNum,
  acSubmissionNum: data.matchedUser.submitStats.acSubmissionNum,
});

export const formatSubmissionData = (data: UserData) => ({
  count: data.recentSubmissionList.length,
  submission: data.recentSubmissionList,
});

export const formatAcSubmissionData = (data: UserData) => ({
  count: data.recentAcSubmissionList.length,
  submission: data.recentAcSubmissionList,
});

export const formatSubmissionCalendarData = (data: UserData) => ({
  submissionCalendar: data.matchedUser.submissionCalendar,
});

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\GQLQueries\contest.ts
const query = `#graphql
query getUserContestRanking ($username: String!) {
    userContestRanking(username: $username) {
        attendedContestsCount
        rating
        globalRanking
        totalParticipants
        topPercentage
        badge {
            name
        }
    }
    userContestRankingHistory(username: $username) {
        attended
        rating
        ranking
        trendDirection
        problemsSolved
        totalProblems
        finishTimeInSeconds
        contest {
            title
            startTime
        }
    }
}`;

export default query;

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\GQLQueries\dailyProblem.ts
const query = `#graphql
  query getDailyProblem {
    activeDailyCodingChallengeQuestion {
        date
        link
        question {
            questionId
            questionFrontendId
            boundTopicId
            title
            titleSlug
            content
            translatedTitle
            translatedContent
            isPaidOnly
            difficulty
            likes
            dislikes
            isLiked
            similarQuestions
            exampleTestcases
            contributors {
                username
                profileUrl
                avatarUrl
            }
            topicTags {
                name
                slug
                translatedName
            }
            companyTagStats
            codeSnippets {
                lang
                langSlug
                code
            }
            stats
            hints
            solution {
                id
                canSeeDetail
                paidOnly
                hasVideoSolution
                paidOnlyVideo
            }
            status
            sampleTestCase
            metaData
            judgerAvailable
            judgeType
            mysqlSchemas
            enableRunCode
            enableTestMode
            enableDebugger
            envInfo
            libraryUrl
            adminUrl
            challengeQuestion {
                id
                date
                incompleteChallengeCount
                streakCount
                type
            }
            note
        }
    }
}`;

export default query;

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\GQLQueries\index.ts
// import exp from 'constants';

export { default as AcSubmissionQuery } from './recentAcSubmit';
export { default as contestQuery } from './contest';
export { default as dailyProblemQuery } from './dailyProblem';
export { default as problemListQuery } from './problemList';
export { default as userProfileQuery } from './userProfile';
export { default as selectProblemQuery } from './selectProblem';
export { default as submissionQuery } from './recentSubmit';
export { default as trendingDiscussQuery } from './trendingDiscuss';
export { default as languageStatsQuery } from './languageStats';

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\GQLQueries\languageStats.ts
const query = `
    query languageStats($username: String!) {
        matchedUser(username: $username) {
            languageProblemCount {
                languageName
                problemsSolved
            }
        }
    }
`;


export default query;

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\GQLQueries\newQueries.ts

export const selectQuestion = `
query selectProblem($titleSlug: String!) {
    question(titleSlug: $titleSlug) {
        questionId
        questionFrontendId
        boundTopicId
        title
        titleSlug
        content
        translatedTitle
        translatedContent
        isPaidOnly
        difficulty
        likes
        dislikes
        isLiked
        similarQuestions
        exampleTestcases
        contributors {
            username
            profileUrl
            avatarUrl
        }
        topicTags {
            name
            slug
            translatedName
        }
        companyTagStats
        codeSnippets {
            lang
            langSlug
            code
        }
        stats
        hints
        solution {
            id
            canSeeDetail
            paidOnly
            hasVideoSolution
            paidOnlyVideo
        }
        status
        sampleTestCase
        metaData
        judgerAvailable
        judgeType
        mysqlSchemas
        enableRunCode
        enableTestMode
        enableDebugger
        envInfo
        libraryUrl
        adminUrl
        challengeQuestion {
            id
            date
            incompleteChallengeCount
            streakCount
            type
        }
        note
    }
}`

// queries.ts
export const dailyQeustion = `
query getDailyProblem {
  activeDailyCodingChallengeQuestion {
      date
      link
      question {
          questionId
          questionFrontendId
          boundTopicId
          title
          titleSlug
          content
          translatedTitle
          translatedContent
          isPaidOnly
          difficulty
          likes
          dislikes
          isLiked
          similarQuestions
          exampleTestcases
          contributors {
              username
              profileUrl
              avatarUrl
          }
          topicTags {
              name
              slug
              translatedName
          }
          companyTagStats
          codeSnippets {
              lang
              langSlug
              code
          }
          stats
          hints
          solution {
              id
              canSeeDetail
              paidOnly
              hasVideoSolution
              paidOnlyVideo
          }
          status
          sampleTestCase
          metaData
          judgerAvailable
          judgeType
          mysqlSchemas
          enableRunCode
          enableTestMode
          enableDebugger
          envInfo
          libraryUrl
          adminUrl
          challengeQuestion {
              id
              date
              incompleteChallengeCount
              streakCount
              type
          }
          note
      }
  }
}
`;

export const questionOfTodayQuery = `
  query questionOfToday {
    activeDailyCodingChallengeQuestion {
      date
      userStatus
      link
      question {
        acRate
        difficulty
        freqBar
        frontendQuestionId: questionFrontendId
        isFavor
        paidOnly: isPaidOnly
        status
        title
        titleSlug
        hasVideoSolution
        hasSolution
        topicTags {
          name
          id
          slug
        }
      }
    }
  }
`;


export const skillStatsQuery = `
    query skillStats($username: String!) {
      matchedUser(username: $username) {
        tagProblemCounts {
          advanced {
            tagName
            tagSlug
            problemsSolved
          }
          intermediate {
            tagName
            tagSlug
            problemsSolved
          }
          fundamental {
            tagName
            tagSlug
            problemsSolved
          }
        }
      }
    }
`;


// queries.ts
export const getUserProfileQuery = `
  query getUserProfile($username: String!) {
    allQuestionsCount {
      difficulty
      count
    }
    matchedUser(username: $username) {
      contributions {
        points
      }
      profile {
        reputation
        ranking
      }
      submissionCalendar
      submitStats {
        acSubmissionNum {
          difficulty
          count
          submissions
        }
        totalSubmissionNum {
          difficulty
          count
          submissions
        }
      }
    }
    recentSubmissionList(username: $username) {
      title
      titleSlug
      timestamp
      statusDisplay
      lang
      __typename
    }
    matchedUserStats: matchedUser(username: $username) {
      submitStats: submitStatsGlobal {
        acSubmissionNum {
          difficulty
          count
          submissions
          __typename
        }
        totalSubmissionNum {
          difficulty
          count
          submissions
          __typename
        }
        __typename
      }
    }
  }
`;

// queries.ts
export const officialSolutionQuery = `
    query OfficialSolution($titleSlug: String!) {
      question(titleSlug: $titleSlug) {
        solution {
          id
          title
          content
          contentTypeId
          paidOnly
          hasVideoSolution
          paidOnlyVideo
          canSeeDetail
          rating {
            count
            average
            userRating {
              score
            }
          }
          topic {
            id
            commentCount
            topLevelCommentCount
            viewCount
            subscribed
            solutionTags {
              name
              slug
            }
            post {
              id
              status
              creationDate
              author {
                username
                isActive
                profile {
                  userAvatar
                  reputation
                }
              }
            }
          }
        }
      }
    }
`;



// queries.ts
export const userProfileCalendarQuery = `
    query UserProfileCalendar($username: String!, $year: Int!) {
      matchedUser(username: $username) {
        userCalendar(year: $year) {
          activeYears
          streak
          totalActiveDays
          dccBadges {
            timestamp
            badge {
              name
              icon
            }
          }
          submissionCalendar
        }
      }
    }
`;

// queries.ts
export const userProfileUserQuestionProgressV2Query = `
    query userProfileUserQuestionProgressV2($userSlug: String!) {
        userProfileUserQuestionProgressV2(userSlug: $userSlug) {
            numAcceptedQuestions {
                count
                difficulty
            }
            numFailedQuestions {
                count
                difficulty
            }
            numUntouchedQuestions {
                count
                difficulty
            }
            userSessionBeatsPercentage {
                difficulty
                percentage
            }
        }
    }
`;


export const userContestRankingInfoQuery = `
    query userContestRankingInfo($username: String!) {
        userContestRanking(username: $username) {
            attendedContestsCount
            rating
            globalRanking
            totalParticipants
            topPercentage
            badge {
                name
            }
        }
        userContestRankingHistory(username: $username) {
            attended
            trendDirection
            problemsSolved
            totalProblems
            finishTimeInSeconds
            rating
            ranking
            contest {
                title
                startTime
            }
        }
    }
`;

export const discussCommentsQuery = `
    query discussComments($topicId: Int!, $orderBy: String = "newest_to_oldest", $pageNo: Int = 1, $numPerPage: Int = 10) {
        topicComments(topicId: $topicId, orderBy: $orderBy, pageNo: $pageNo, numPerPage: $numPerPage) {
            data {
                id
                pinned
                pinnedBy {
                    username
                }
                post {
                    ...DiscussPost
                }
                numChildren
            }
        }
    }

    fragment DiscussPost on PostNode {
        id
        voteCount
        voteStatus
        content
        updationDate
        creationDate
        status
        isHidden
        coinRewards {
            ...CoinReward
        }
        author {
            isDiscussAdmin
            isDiscussStaff
            username
            nameColor
            activeBadge {
                displayName
                icon
            }
            profile {
                userAvatar
                reputation
            }
            isActive
        }
        authorIsModerator
        isOwnPost
    }

    fragment CoinReward on ScoreNode {
        id
        score
        description
        date
    }
`;

export const discussTopicQuery = `
    query DiscussTopic($topicId: Int!) {
        topic(id: $topicId) {
            id
            viewCount
            topLevelCommentCount
            subscribed
            title
            pinned
            tags
            hideFromTrending
            post {
                ...DiscussPost
            }
        }
    }

    fragment DiscussPost on PostNode {
        id
        voteCount
        voteStatus
        content
        updationDate
        creationDate
        status
        isHidden
        coinRewards {
            ...CoinReward
        }
        author {
            isDiscussAdmin
            isDiscussStaff
            username
            nameColor
            activeBadge {
                displayName
                icon
            }
            profile {
                userAvatar
                reputation
            }
            isActive
        }
        authorIsModerator
        isOwnPost
    }

    fragment CoinReward on ScoreNode {
        id
        score
        description
        date
    }
`;

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\GQLQueries\problemList.ts
const query = `#graphql
    query getProblems($categorySlug: String, $limit: Int, $skip: Int, $filters: QuestionListFilterInput) {
        problemsetQuestionList: questionList(
            categorySlug: $categorySlug
            limit: $limit
            skip: $skip
            filters: $filters
        ) {
            total: totalNum
            questions: data {
                acRate
                difficulty
                freqBar
                questionFrontendId
                isFavor
                isPaidOnly
                status
                title
                titleSlug
                topicTags {
                    name
                    id
                    slug
                }
                hasSolution
                hasVideoSolution
            }
        }
}`;

export default query;

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\GQLQueries\recentAcSubmit.ts
const query = `#graphql
query getACSubmissions ($username: String!, $limit: Int) {
    recentAcSubmissionList(username: $username, limit: $limit) {
        title
        titleSlug
        timestamp
        statusDisplay
        lang
    }
}`;

export default query;

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\GQLQueries\recentSubmit.ts
const query = `#graphql
query getRecentSubmissions($username: String!, $limit: Int) {
    recentSubmissionList(username: $username, limit: $limit) {
        title
        titleSlug
        timestamp
        statusDisplay
        lang
    }
}`;

export default query;

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\GQLQueries\selectProblem.ts
const query = `#graphql
query selectProblem($titleSlug: String!) {
    question(titleSlug: $titleSlug) {
        questionId
        questionFrontendId
        boundTopicId
        title
        titleSlug
        content
        translatedTitle
        translatedContent
        isPaidOnly
        difficulty
        likes
        dislikes
        isLiked
        similarQuestions
        exampleTestcases
        contributors {
            username
            profileUrl
            avatarUrl
        }
        topicTags {
            name
            slug
            translatedName
        }
        companyTagStats
        codeSnippets {
            lang
            langSlug
            code
        }
        stats
        hints
        solution {
            id
            canSeeDetail
            paidOnly
            hasVideoSolution
            paidOnlyVideo
        }
        status
        sampleTestCase
        metaData
        judgerAvailable
        judgeType
        mysqlSchemas
        enableRunCode
        enableTestMode
        enableDebugger
        envInfo
        libraryUrl
        adminUrl
        challengeQuestion {
            id
            date
            incompleteChallengeCount
            streakCount
            type
        }
        note
    }
}`;

export default query;

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\GQLQueries\trendingDiscuss.ts
const query = `
    query trendingDiscuss($first: Int!) {
        cachedTrendingCategoryTopics(first: $first) {
            id
            title
            post {
                id
                creationDate
                contentPreview
                author {
                    username
                    isActive
                    profile {
                        userAvatar
                    }
                }
            }
        }
    }
`;

export default query;

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\GQLQueries\userProfile.ts
const query = `#graphql
query getUserProfile($username: String!) {
    allQuestionsCount {
        difficulty
        count
    }
    matchedUser(username: $username) {
        username
        githubUrl
        twitterUrl
        linkedinUrl
        contributions {
            points
            questionCount
            testcaseCount
        }
        profile {
            realName
            userAvatar
            birthday
            ranking
            reputation
            websites
            countryName
            company
            school
            skillTags
            aboutMe
            starRating
        }
        badges {
            id
            displayName
            icon
            creationDate
        }
        upcomingBadges {
            name
            icon
        }
        activeBadge {
            id
            displayName
            icon
            creationDate
        }
        submitStats {
            totalSubmissionNum {
                difficulty
                count
                submissions
            }
            acSubmissionNum {
                difficulty
                count
                submissions
            }
        }
        submissionCalendar
    }
    recentSubmissionList(username: $username, limit: 20) {
        title
        titleSlug
        timestamp
        statusDisplay
        lang
    }
}`;

export default query;

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\.DS_Store
   Bud1            �                                                           s t s _ _ds                                          	 _ _ t e s t s _ _dsclbool                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    @      �                                        @      �                                          @      �                                          @                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   E   �                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       DSDB                                 `      �                                               @      �                                          @      �                                          @                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\app.ts
import express, { NextFunction, Response } from 'express';
import cors from 'cors';
// import rateLimit from 'express-rate-limit';
import * as leetcode from './leetCode';
import { FetchUserDataRequest } from './types';
import apicache from 'apicache';
import axios from 'axios';
import {
  userContestRankingInfoQuery,
  discussCommentsQuery,
  discussTopicQuery,
  userProfileUserQuestionProgressV2Query,
  skillStatsQuery,
  getUserProfileQuery,
  userProfileCalendarQuery,
  officialSolutionQuery,
  dailyQeustion,
} from './GQLQueries/newQueries';

const app = express();
let cache = apicache.middleware;
const API_URL = process.env.LEETCODE_API_URL || 'https://leetcode.com/graphql';

// const limiter = rateLimit({
//   windowMs: 60 * 60 * 1000, // 1 hour
//   limit: 60,
//   standardHeaders: 'draft-7',
//   legacyHeaders: false,
//   message: 'Too many request from this IP, try again in 1 hour',
// });

app.use(cache('5 minutes'));
app.use(cors()); //enable all CORS request
// app.use(limiter); //limit to all API
app.use((req: express.Request, _res: Response, next: NextFunction) => {
  console.log('Requested URL:', req.originalUrl);
  next();
});

async function queryLeetCodeAPI(query: string, variables: any) {
  try {
    const response = await axios.post(API_URL, { query, variables });
    if (response.data.errors) {
      throw new Error(response.data.errors[0].message);
    }
    return response.data;
  } catch (error) {
    if (error.response) {
      throw new Error(`Error from LeetCode API: ${error.response.data}`);
    } else if (error.request) {
      throw new Error('No response received from LeetCode API');
    } else {
      throw new Error(`Error in setting up the request: ${error.message}`);
    }
  }
}

app.get('/', (_req, res) => {
  res.json({
    routes: {
      userDetails: {
        '/:username': 'get your leetcodevis profile Details',
        '/:username/badges': 'get your badges',
        '/:username/solved': 'get total number of question you solved',
        '/:username/contest': 'get your contest details',
        '/:username/contest/history': 'get all contest history',
        '/:username/submission': 'get your last 20 submission',
        '/:username/acSubmission': 'get your last 20 accepted submission',
        '/:username/calendar': 'get your submission calendar',
        '/userProfile/:username': 'get full profile details in one call',
        '/userProfileCalendar?username=yourname&year=2024':
          'get your calendar details with year',
        '/languageStats?username=yourname': 'get the language stats of a user',
        '/userProfileUserQuestionProgressV2/:userSlug':
          'get your question progress',
        '/skillStats/:username': 'get your skill stats',
      },
      contest: {
        '/userContestRankingInfo/:username': 'get user contest ranking info',
      },
      discussion: {
        '/trendingDiscuss?first=20': 'get top 20 trending discussions',
        '/discussTopic/:topicId': 'get discussion topic',
        '/discussComments/:topicId': 'get discussion comments',
      },
      problems: {
        singleProblem: {
          '/select?titleSlug=two-sum': 'get selected Problem',
          '/daily': 'get daily Problem',
          '/dailyQuestion': 'get raw daily question',
        },
        problemList: {
          '/problems': 'get list of 20 problems',
          '/problems?limit=50': 'get list of some problems',
          '/problems?tags=array+math': 'get list problems on selected topics',
          '/problems?tags=array+math+string&limit=5':
            'get list some problems on selected topics',
          '/officialSolution?titleSlug=two-sum':
            'get official solution of selected problem',
        },
      },
    },
  });
});

app.get('/officialSolution', async (req, res) => {
  const { titleSlug } = req.query;

  if (!titleSlug) {
    return res.status(400).json({ error: 'Missing titleSlug query parameter' });
  }
  try {
    const data = await queryLeetCodeAPI(officialSolutionQuery, { titleSlug });
    return res.json(data);
  } catch (error) {
    return res.status(500).json({ error: error.message });
  }
});

app.get('/userProfileCalendar', async (req, res) => {
  const { username, year } = req.query;

  if (!username || !year || typeof year !== 'string') {
    return res
      .status(400)
      .json({ error: 'Missing or invalid username or year query parameter' });
  }

  try {
    const data = await queryLeetCodeAPI(userProfileCalendarQuery, {
      username,
      year: parseInt(year),
    });
    return res.json(data);
  } catch (error) {
    return res.status(500).json({ error: error.message });
  }
});

// Format data
const formatData = (data: any) => {
  return {
    totalSolved: data.matchedUser.submitStats.acSubmissionNum[0].count,
    totalSubmissions: data.matchedUser.submitStats.totalSubmissionNum,
    totalQuestions: data.allQuestionsCount[0].count,
    easySolved: data.matchedUser.submitStats.acSubmissionNum[1].count,
    totalEasy: data.allQuestionsCount[1].count,
    mediumSolved: data.matchedUser.submitStats.acSubmissionNum[2].count,
    totalMedium: data.allQuestionsCount[2].count,
    hardSolved: data.matchedUser.submitStats.acSubmissionNum[3].count,
    totalHard: data.allQuestionsCount[3].count,
    ranking: data.matchedUser.profile.ranking,
    contributionPoint: data.matchedUser.contributions.points,
    reputation: data.matchedUser.profile.reputation,
    submissionCalendar: JSON.parse(data.matchedUser.submissionCalendar),
    recentSubmissions: data.recentSubmissionList,
    matchedUserStats: data.matchedUser.submitStats,
  };
};

app.get('/userProfile/:id', async (req, res) => {
  const user = req.params.id;

  try {
    const data = await queryLeetCodeAPI(getUserProfileQuery, {
      username: user,
    });
    if (data.errors) {
      res.send(data);
    } else {
      res.send(formatData(data.data));
    }
  } catch (error) {
    res.send(error);
  }
});

const handleRequest = async (res: Response, query: string, params: any) => {
  try {
    const data = await queryLeetCodeAPI(query, params);
    res.json(data);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
};
app.get('/dailyQuestion', (_, res) => {
  handleRequest(res, dailyQeustion, {});
});

app.get('/skillStats/:username', (req, res) => {
  const { username } = req.params;
  handleRequest(res, skillStatsQuery, { username });
});

app.get('/userProfileUserQuestionProgressV2/:userSlug', (req, res) => {
  const { userSlug } = req.params;
  handleRequest(res, userProfileUserQuestionProgressV2Query, { userSlug });
});

app.get('/discussTopic/:topicId', (req, res) => {
  const topicId = parseInt(req.params.topicId);
  handleRequest(res, discussTopicQuery, { topicId });
});

app.get('/discussComments/:topicId', (req, res) => {
  const topicId = parseInt(req.params.topicId);
  const {
    orderBy = 'newest_to_oldest',
    pageNo = 1,
    numPerPage = 10,
  } = req.query;
  handleRequest(res, discussCommentsQuery, {
    topicId,
    orderBy,
    pageNo,
    numPerPage,
  });
});

app.get('/userContestRankingInfo/:username', (req, res) => {
  const { username } = req.params;
  handleRequest(res, userContestRankingInfoQuery, { username });
});

//get the daily leetCode problem
app.get('/daily', leetcode.dailyProblem);

//get the selected question
app.get('/select', leetcode.selectProblem);

//get list of problems
app.get('/problems', leetcode.problems);

//get 20 trending Discuss
app.get('/trendingDiscuss', leetcode.trendingCategoryTopics);

app.get('/languageStats', leetcode.languageStats);

// Construct options object on all user routes.
app.use(
  '/:username*',
  (req: FetchUserDataRequest, _res: Response, next: NextFunction) => {
    req.body = {
      username: req.params.username,
      limit: req.query.limit,
    };
    next();
  }
);

//get user profile details
app.get('/:username', leetcode.userData);
app.get('/:username/badges', leetcode.userBadges);
app.get('/:username/solved', leetcode.solvedProblem);
app.get('/:username/contest', leetcode.userContest);
app.get('/:username/contest/history', leetcode.userContestHistory);
app.get('/:username/submission', leetcode.submission);
app.get('/:username/acSubmission', leetcode.acSubmission);
app.get('/:username/calendar', leetcode.calendar);

export default app;

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\config.ts
const config = {
  port: process.env.PORT || 3000,
};

export default config;

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\index.ts
import app from './app';
import config from './config';

app.listen(config.port, () => {
  console.log(`Server is running at => http://localhost:${config.port} ⚙️`);
});

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\leetCode.ts
import { Request, Response } from 'express';
import * as gqlQueries from './GQLQueries';
import * as formatUtils from './FormatUtils';
import * as controllers from './Controllers';
import { TransformedUserDataRequest } from './types';

export const userData = (req: TransformedUserDataRequest, res: Response) => {
  controllers.fetchUserDetails(
    req.body,
    res,
    formatUtils.formatUserData,
    gqlQueries.userProfileQuery
  );
};

export const userBadges = (req: TransformedUserDataRequest, res: Response) => {
  controllers.fetchUserDetails(
    req.body,
    res,
    formatUtils.formatBadgesData,
    gqlQueries.userProfileQuery
  );
};

export const userContest = (req: TransformedUserDataRequest, res: Response) => {
  controllers.fetchUserDetails(
    req.body,
    res,
    formatUtils.formatContestData,
    gqlQueries.contestQuery
  );
};

export const userContestHistory = (
  req: TransformedUserDataRequest,
  res: Response
) => {
  controllers.fetchUserDetails(
    req.body,
    res,
    formatUtils.formatContestHistoryData,
    gqlQueries.contestQuery
  );
};

export const solvedProblem = (
  req: TransformedUserDataRequest,
  res: Response
) => {
  controllers.fetchUserDetails(
    req.body,
    res,
    formatUtils.formatSolvedProblemsData,
    gqlQueries.userProfileQuery
  );
};

export const submission = (req: TransformedUserDataRequest, res: Response) => {
  controllers.fetchUserDetails(
    req.body,
    res,
    formatUtils.formatSubmissionData,
    gqlQueries.submissionQuery
  );
};

export const acSubmission = (
  req: TransformedUserDataRequest,
  res: Response
) => {
  controllers.fetchUserDetails(
    req.body,
    res,
    formatUtils.formatAcSubmissionData,
    gqlQueries.AcSubmissionQuery
  );
};

export const calendar = (req: TransformedUserDataRequest, res: Response) => {
  controllers.fetchUserDetails(
    req.body,
    res,
    formatUtils.formatSubmissionCalendarData,
    gqlQueries.userProfileQuery
  );
};

//Problems Details
export const dailyProblem = (_req: Request, res: Response) => {
  controllers.fetchSingleProblem(
    res,
    formatUtils.formatDailyData,
    gqlQueries.dailyProblemQuery,
    null
  );
};

export const selectProblem = (req: Request, res: Response) => {
  const title = req.query.titleSlug as string;
  if (title !== undefined) {
    controllers.fetchSingleProblem(
      res,
      formatUtils.formatQuestionData,
      gqlQueries.selectProblemQuery,
      title
    );
  } else {
    res.status(400).json({
      error: 'Missing or invalid query parameter: titleSlug',
      solution: 'put query after select',
      example: 'localhost:3000/select?titleSlug=two-sum',
    });
  }
};

export const problems = (
  req: Request<{}, {}, {}, { limit: number; tags: string }>,
  res: Response
) => {
  const limit = req.query.limit;
  const tags = req.query.tags;

  controllers.fetchProblems(
    { limit, tags },
    res,
    formatUtils.formatProblemsData,
    gqlQueries.problemListQuery
  );
};


export const trendingCategoryTopics = (_req: Request, res: Response) => {
  const first = parseInt(_req.query.first as string);
  if (!isNaN(first)) {
    controllers.fetchTrendingTopics(
      { first },
      res,
      formatUtils.formatTrendingCategoryTopicData,
      gqlQueries.trendingDiscussQuery
    );
  }
  else {
    res.status(400).json({
      error: 'Missing or invalid query parameter: limit',
      solution: 'put query after discussion',
      example: 'localhost:3000/trendingDiscuss?first=20',
    });
  }
 
};

export const languageStats = (_req: Request, res: Response) => {
  const username = _req.query.username as string;
  if (username) {
    controllers.fetchDataRawFormat(
      { username },
      res,
      gqlQueries.languageStatsQuery
    );
  }
  else {
    res.status(400).json({
      error: 'Missing or invalid query parameter: username',
      solution: 'put query after discussion',
      example: 'localhost:3000/languageStats?username=uwi',
    });
  }
 
};

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\types.ts
import { Request } from 'express';
// User Data
interface UserDataProfile {
  aboutMe: string;
  company?: string;
  countryName?: string;
  realName: string;
  birthday?: string;
  userAvatar: string;
  ranking: number;
  reputation: number;
  school?: string;
  skillTags: string[];
  websites: string[];
}

interface MatchedUser {
  activeBadge: Badge;
  badges: Badge[];
  githubUrl: string;
  linkedinUrl?: string;
  profile: UserDataProfile;
  upcomingBadges: Badge[];
  username: string;
  twitterUrl?: string;
  submissionCalendar: string;
  submitStats: {
    totalSubmissionNum: {
      difficulty: Difficulty;
      count: number;
      submissions: number;
    }[];
    acSubmissionNum: {
      difficulty: Difficulty;
      count: number;
      submissions: number;
    }[];
    count: number;
  };
}

export interface UserData {
  userContestRanking: null | {
    attendedContestsCount: number;
    badge: Badge;
    globalRanking: number;
    rating: number;
    totalParticipants: number;
    topPercentage: number;
  };
  userContestRankingHistory: {
    attended: boolean;
    rating: number;
    ranking: number;
    trendDirection: string;
    problemsSolved: number;
    totalProblems: number;
    finishTimeInSeconds: number;
    contest: {
      title: string;
      startTime: string;
    };
  }[];
  matchedUser: MatchedUser;
  recentAcSubmissionList: {}[];
  recentSubmissionList: Submission[];
}

interface Badge {
  name: string;
  icon: string;
}

type Difficulty = 'All' | 'Easy' | 'Medium' | 'Hard';
//User Details
export type FetchUserDataRequest = Request<
  { username: string },
  {},
  { username: string; limit: number },
  { limit: number }
>;

export type TransformedUserDataRequest = Request<
  {},
  {},
  { username: string; limit: number }
>;

//  ProblemData
export interface ProblemSetQuestionListData {
  problemsetQuestionList: {
    total: number;
    questions: {}[];
  };
}

interface Submission {
  title: string;
  titleSlug: string;
  timestamp: string;
  statusDisplay: string;
  lang: string;
}

interface Question {
  content: string;
  companyTagStats: string[];
  difficulty: Difficulty;
  dislikes: number;
  exampleTestcases: {}[];
  hints: {}[];
  isPaidOnly: boolean;
  likes: number;
  questionId: number;
  questionFrontendId: number;
  solution: string;
  similarQuestions: {}[];
  title: string;
  titleSlug: string;
  topicTags: string[];
}

export interface DailyProblemData {
  activeDailyCodingChallengeQuestion: {
    date: string;
    link: string;
    question: Question;
  };
}
export interface SelectProblemData {
  question: Question;
}

export interface TrendingDiscussionObject {
  data: {
    cachedTrendingCategoryTopics: {
      id: number;
      title: string;
      post: {
        id: number;
        creationDate: number;
        contentPreview: string;
        author: {
          username: string;
          isActive: boolean;
          profile: {
            userAvatar: string;
          };
        };
      };
    }[];
  };
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\Controllers\fetchDataRawFormat.ts
import { Response } from 'express';

const fetchDataRawFormat = async (
    options: { username: string },
    res: Response,
    query: string
) => {
    try {

        const response = await fetch('https://leetcode.com/graphql', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                Referer: 'https://leetcode.com',
            },
            body: JSON.stringify({
                query: query,
                variables: {
                    username: options.username, 
                },
            }),
        });
        
        const result = await response.json();
        if (!response.ok) {
            console.error(`HTTP error! status: ${response.status}`);
        }
        if (result.errors) {
            return res.send(result);
        }

        return res.json(result.data);
    } catch (err) {
        console.error('Error: ', err);
        return res.send(err);
    }
};

export default fetchDataRawFormat;

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\Controllers\fetchDiscussion.ts
import { Response } from 'express';
import { TrendingDiscussionObject } from '../types';

const fetchDiscussion = async (
    options: { first: number },
    res: Response,
    formatData: (data: TrendingDiscussionObject) => {},
    query: string
) => {
    try {
        const response = await fetch('https://leetcode.com/graphql', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                Referer: 'https://leetcode.com',
            },
            body: JSON.stringify({
                query: query,
                variables: {
                    first: options.first || 20, //by default get 20 question
                },
            }),
        });
        
        const result = await response.json();

        if (result.errors) {
            return res.send(result);
        }

        return res.json(formatData(result.data));
    } catch (err) {
        console.error('Error: ', err);
        return res.send(err);
    }
};

export default fetchDiscussion;

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\Controllers\fetchProblems.ts
import { Response } from 'express';
import { ProblemSetQuestionListData } from '../types';

const fetchProblems = async (
  options: { limit: number; tags: string },
  res: Response,
  formatData: (data: ProblemSetQuestionListData) => {},
  query: string
) => {
  try {
    const response = await fetch('https://leetcode.com/graphql', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        Referer: 'https://leetcode.com',
      },
      body: JSON.stringify({
        query: query,
        variables: {
          categorySlug: '',
          skip: 0,
          limit: options.limit || 20, //by default get 20 question
          filters: { tags: options.tags ? options.tags.split(' ') : ' ' }, //filter by tags
        },
      }),
    });

    const result = await response.json();

    if (result.errors) {
      return res.send(result);
    }
    return res.json(formatData(result.data));
  } catch (err) {
    console.error('Error: ', err);
    return res.send(err);
  }
};

export default fetchProblems;

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\Controllers\fetchSingleProblem.ts
import { Response } from 'express';
import { DailyProblemData, SelectProblemData } from '../types';

const fetchSingleProblem = async (
  res: Response,
  formatData: (data: DailyProblemData & SelectProblemData) => void,
  query: string,
  titleSlug: string | null
) => {
  try {
    const response = await fetch('https://leetcode.com/graphql', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        Referer: 'https://leetcode.com',
      },
      body: JSON.stringify({
        query: query,
        variables: {
          titleSlug, //search question using titleSlug
        },
      }),
    });

    const result = await response.json();

    if (result.errors) {
      return res.send(result);
    }

    return res.json(formatData(result.data));
  } catch (err) {
    console.error('Error: ', err);
    return res.send(err);
  }
};

export default fetchSingleProblem;

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\Controllers\fetchUserDetails.ts
import { Response } from 'express';
import { UserData } from '../types';

const fetchUserDetails = async (
  options: { username: string; limit: number },
  res: Response,
  formatData: (data: UserData) => {},
  query: string
) => {
  try {
    const response = await fetch('https://leetcode.com/graphql', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        Referer: 'https://leetcode.com',
      },
      body: JSON.stringify({
        query: query,
        variables: {
          username: options.username, //username required
          limit: options.limit, //only for submission
        },
      }),
    });

    const result = await response.json();

    if (result.errors) {
      return res.send(result);
    }

    return res.json(formatData(result.data));
  } catch (err) {
    console.error('Error: ', err);
    return res.send(err);
  }
};

export default fetchUserDetails;

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\Controllers\index.ts
export { default as fetchSingleProblem } from './fetchSingleProblem';
export { default as fetchProblems } from './fetchProblems';
export { default as fetchUserDetails } from './fetchUserDetails';
export { default as fetchTrendingTopics } from './fetchDiscussion';
export { default as fetchDataRawFormat } from './fetchDataRawFormat';

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\FormatUtils\index.ts
export * from './userData';
export * from './problemData';
export * from './trendingTopicData';

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\FormatUtils\problemData.ts
import {
  DailyProblemData,
  ProblemSetQuestionListData,
  SelectProblemData,
} from '../types';

export const formatDailyData = (data: DailyProblemData) => ({
  questionLink:
    `https://leetcode.com` + data.activeDailyCodingChallengeQuestion.link,
  date: data.activeDailyCodingChallengeQuestion.date,
  questionId: data.activeDailyCodingChallengeQuestion.question.questionId,
  questionFrontendId:
    data.activeDailyCodingChallengeQuestion.question.questionFrontendId,
  questionTitle: data.activeDailyCodingChallengeQuestion.question.title,
  titleSlug: data.activeDailyCodingChallengeQuestion.question.titleSlug,
  difficulty: data.activeDailyCodingChallengeQuestion.question.difficulty,
  isPaidOnly: data.activeDailyCodingChallengeQuestion.question.isPaidOnly,
  question: data.activeDailyCodingChallengeQuestion.question.content,
  exampleTestcases:
    data.activeDailyCodingChallengeQuestion.question.exampleTestcases,
  topicTags: data.activeDailyCodingChallengeQuestion.question.topicTags,
  hints: data.activeDailyCodingChallengeQuestion.question.hints,
  solution: data.activeDailyCodingChallengeQuestion.question.solution,
  companyTagStats:
    data.activeDailyCodingChallengeQuestion.question.companyTagStats,
  likes: data.activeDailyCodingChallengeQuestion.question.likes,
  dislikes: data.activeDailyCodingChallengeQuestion.question.dislikes,
  similarQuestions:
    data.activeDailyCodingChallengeQuestion.question.similarQuestions,
});

export const formatQuestionData = (data: SelectProblemData) => ({
  link: `https://leetcode.com/problems/` + data.question.titleSlug,
  questionId: data.question.questionId,
  questionFrontendId: data.question.questionFrontendId,
  questionTitle: data.question.title,
  titleSlug: data.question.titleSlug,
  difficulty: data.question.difficulty,
  isPaidOnly: data.question.isPaidOnly,
  question: data.question.content,
  exampleTestcases: data.question.exampleTestcases,
  topicTags: data.question.topicTags,
  hints: data.question.hints,
  solution: data.question.solution,
  companyTagStats: data.question.companyTagStats,
  likes: data.question.likes,
  dislikes: data.question.dislikes,
  similarQuestions: data.question.similarQuestions,
});

export const formatProblemsData = (data: ProblemSetQuestionListData) => ({
  totalQuestions: data.problemsetQuestionList.total,
  count: data.problemsetQuestionList.questions.length,
  problemsetQuestionList: data.problemsetQuestionList.questions,
});


// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\FormatUtils\trendingTopicData.ts
import { TrendingDiscussionObject } from "../types";

export const formatTrendingCategoryTopicData = (data: TrendingDiscussionObject) => {
  // Not suggest reformat this data. as the orginial format are orginised in a way that is easy to understand
  return data
};

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\FormatUtils\userData.ts
import { UserData } from '../types';

export const formatUserData = (data: UserData) => ({
  username: data.matchedUser.username,
  name: data.matchedUser.profile.realName,
  birthday: data.matchedUser.profile.birthday,
  avatar: data.matchedUser.profile.userAvatar,
  ranking: data.matchedUser.profile.ranking,
  reputation: data.matchedUser.profile.reputation,
  gitHub: data.matchedUser.githubUrl,
  twitter: data.matchedUser.twitterUrl,
  linkedIN: data.matchedUser.linkedinUrl,
  website: data.matchedUser.profile.websites,
  country: data.matchedUser.profile.countryName,
  company: data.matchedUser.profile.company,
  school: data.matchedUser.profile.school,
  skillTags: data.matchedUser.profile.skillTags,
  about: data.matchedUser.profile.aboutMe,
});

export const formatBadgesData = (data: UserData) => ({
  badgesCount: data.matchedUser.badges.length,
  badges: data.matchedUser.badges,
  upcomingBadges: data.matchedUser.upcomingBadges,
  activeBadge: data.matchedUser.activeBadge,
});

export const formatContestData = (data: UserData) => ({
  contestAttend: data.userContestRanking?.attendedContestsCount,
  contestRating: data.userContestRanking?.rating,
  contestGlobalRanking: data.userContestRanking?.globalRanking,
  totalParticipants: data.userContestRanking?.totalParticipants,
  contestTopPercentage: data.userContestRanking?.topPercentage,
  contestBadges: data.userContestRanking?.badge,
  contestParticipation: data.userContestRankingHistory.filter(
    (obj) => obj.attended === true
  ),
});

export const formatContestHistoryData = (data: UserData) => ({
  count: data.userContestRankingHistory.length,
  contestHistory: data.userContestRankingHistory,
});

export const formatSolvedProblemsData = (data: UserData) => ({
  solvedProblem: data.matchedUser.submitStats.acSubmissionNum[0].count,
  easySolved: data.matchedUser.submitStats.acSubmissionNum[1].count,
  mediumSolved: data.matchedUser.submitStats.acSubmissionNum[2].count,
  hardSolved: data.matchedUser.submitStats.acSubmissionNum[3].count,
  totalSubmissionNum: data.matchedUser.submitStats.totalSubmissionNum,
  acSubmissionNum: data.matchedUser.submitStats.acSubmissionNum,
});

export const formatSubmissionData = (data: UserData) => ({
  count: data.recentSubmissionList.length,
  submission: data.recentSubmissionList,
});

export const formatAcSubmissionData = (data: UserData) => ({
  count: data.recentAcSubmissionList.length,
  submission: data.recentAcSubmissionList,
});

export const formatSubmissionCalendarData = (data: UserData) => ({
  submissionCalendar: data.matchedUser.submissionCalendar,
});

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\GQLQueries\contest.ts
const query = `#graphql
query getUserContestRanking ($username: String!) {
    userContestRanking(username: $username) {
        attendedContestsCount
        rating
        globalRanking
        totalParticipants
        topPercentage
        badge {
            name
        }
    }
    userContestRankingHistory(username: $username) {
        attended
        rating
        ranking
        trendDirection
        problemsSolved
        totalProblems
        finishTimeInSeconds
        contest {
            title
            startTime
        }
    }
}`;

export default query;

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\GQLQueries\dailyProblem.ts
const query = `#graphql
  query getDailyProblem {
    activeDailyCodingChallengeQuestion {
        date
        link
        question {
            questionId
            questionFrontendId
            boundTopicId
            title
            titleSlug
            content
            translatedTitle
            translatedContent
            isPaidOnly
            difficulty
            likes
            dislikes
            isLiked
            similarQuestions
            exampleTestcases
            contributors {
                username
                profileUrl
                avatarUrl
            }
            topicTags {
                name
                slug
                translatedName
            }
            companyTagStats
            codeSnippets {
                lang
                langSlug
                code
            }
            stats
            hints
            solution {
                id
                canSeeDetail
                paidOnly
                hasVideoSolution
                paidOnlyVideo
            }
            status
            sampleTestCase
            metaData
            judgerAvailable
            judgeType
            mysqlSchemas
            enableRunCode
            enableTestMode
            enableDebugger
            envInfo
            libraryUrl
            adminUrl
            challengeQuestion {
                id
                date
                incompleteChallengeCount
                streakCount
                type
            }
            note
        }
    }
}`;

export default query;

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\GQLQueries\index.ts
// import exp from 'constants';

export { default as AcSubmissionQuery } from './recentAcSubmit';
export { default as contestQuery } from './contest';
export { default as dailyProblemQuery } from './dailyProblem';
export { default as problemListQuery } from './problemList';
export { default as userProfileQuery } from './userProfile';
export { default as selectProblemQuery } from './selectProblem';
export { default as submissionQuery } from './recentSubmit';
export { default as trendingDiscussQuery } from './trendingDiscuss';
export { default as languageStatsQuery } from './languageStats';

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\GQLQueries\languageStats.ts
const query = `
    query languageStats($username: String!) {
        matchedUser(username: $username) {
            languageProblemCount {
                languageName
                problemsSolved
            }
        }
    }
`;


export default query;

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\GQLQueries\newQueries.ts

export const selectQuestion = `
query selectProblem($titleSlug: String!) {
    question(titleSlug: $titleSlug) {
        questionId
        questionFrontendId
        boundTopicId
        title
        titleSlug
        content
        translatedTitle
        translatedContent
        isPaidOnly
        difficulty
        likes
        dislikes
        isLiked
        similarQuestions
        exampleTestcases
        contributors {
            username
            profileUrl
            avatarUrl
        }
        topicTags {
            name
            slug
            translatedName
        }
        companyTagStats
        codeSnippets {
            lang
            langSlug
            code
        }
        stats
        hints
        solution {
            id
            canSeeDetail
            paidOnly
            hasVideoSolution
            paidOnlyVideo
        }
        status
        sampleTestCase
        metaData
        judgerAvailable
        judgeType
        mysqlSchemas
        enableRunCode
        enableTestMode
        enableDebugger
        envInfo
        libraryUrl
        adminUrl
        challengeQuestion {
            id
            date
            incompleteChallengeCount
            streakCount
            type
        }
        note
    }
}`

// queries.ts
export const dailyQeustion = `
query getDailyProblem {
  activeDailyCodingChallengeQuestion {
      date
      link
      question {
          questionId
          questionFrontendId
          boundTopicId
          title
          titleSlug
          content
          translatedTitle
          translatedContent
          isPaidOnly
          difficulty
          likes
          dislikes
          isLiked
          similarQuestions
          exampleTestcases
          contributors {
              username
              profileUrl
              avatarUrl
          }
          topicTags {
              name
              slug
              translatedName
          }
          companyTagStats
          codeSnippets {
              lang
              langSlug
              code
          }
          stats
          hints
          solution {
              id
              canSeeDetail
              paidOnly
              hasVideoSolution
              paidOnlyVideo
          }
          status
          sampleTestCase
          metaData
          judgerAvailable
          judgeType
          mysqlSchemas
          enableRunCode
          enableTestMode
          enableDebugger
          envInfo
          libraryUrl
          adminUrl
          challengeQuestion {
              id
              date
              incompleteChallengeCount
              streakCount
              type
          }
          note
      }
  }
}
`;

export const questionOfTodayQuery = `
  query questionOfToday {
    activeDailyCodingChallengeQuestion {
      date
      userStatus
      link
      question {
        acRate
        difficulty
        freqBar
        frontendQuestionId: questionFrontendId
        isFavor
        paidOnly: isPaidOnly
        status
        title
        titleSlug
        hasVideoSolution
        hasSolution
        topicTags {
          name
          id
          slug
        }
      }
    }
  }
`;


export const skillStatsQuery = `
    query skillStats($username: String!) {
      matchedUser(username: $username) {
        tagProblemCounts {
          advanced {
            tagName
            tagSlug
            problemsSolved
          }
          intermediate {
            tagName
            tagSlug
            problemsSolved
          }
          fundamental {
            tagName
            tagSlug
            problemsSolved
          }
        }
      }
    }
`;


// queries.ts
export const getUserProfileQuery = `
  query getUserProfile($username: String!) {
    allQuestionsCount {
      difficulty
      count
    }
    matchedUser(username: $username) {
      contributions {
        points
      }
      profile {
        reputation
        ranking
      }
      submissionCalendar
      submitStats {
        acSubmissionNum {
          difficulty
          count
          submissions
        }
        totalSubmissionNum {
          difficulty
          count
          submissions
        }
      }
    }
    recentSubmissionList(username: $username) {
      title
      titleSlug
      timestamp
      statusDisplay
      lang
      __typename
    }
    matchedUserStats: matchedUser(username: $username) {
      submitStats: submitStatsGlobal {
        acSubmissionNum {
          difficulty
          count
          submissions
          __typename
        }
        totalSubmissionNum {
          difficulty
          count
          submissions
          __typename
        }
        __typename
      }
    }
  }
`;

// queries.ts
export const officialSolutionQuery = `
    query OfficialSolution($titleSlug: String!) {
      question(titleSlug: $titleSlug) {
        solution {
          id
          title
          content
          contentTypeId
          paidOnly
          hasVideoSolution
          paidOnlyVideo
          canSeeDetail
          rating {
            count
            average
            userRating {
              score
            }
          }
          topic {
            id
            commentCount
            topLevelCommentCount
            viewCount
            subscribed
            solutionTags {
              name
              slug
            }
            post {
              id
              status
              creationDate
              author {
                username
                isActive
                profile {
                  userAvatar
                  reputation
                }
              }
            }
          }
        }
      }
    }
`;



// queries.ts
export const userProfileCalendarQuery = `
    query UserProfileCalendar($username: String!, $year: Int!) {
      matchedUser(username: $username) {
        userCalendar(year: $year) {
          activeYears
          streak
          totalActiveDays
          dccBadges {
            timestamp
            badge {
              name
              icon
            }
          }
          submissionCalendar
        }
      }
    }
`;

// queries.ts
export const userProfileUserQuestionProgressV2Query = `
    query userProfileUserQuestionProgressV2($userSlug: String!) {
        userProfileUserQuestionProgressV2(userSlug: $userSlug) {
            numAcceptedQuestions {
                count
                difficulty
            }
            numFailedQuestions {
                count
                difficulty
            }
            numUntouchedQuestions {
                count
                difficulty
            }
            userSessionBeatsPercentage {
                difficulty
                percentage
            }
        }
    }
`;


export const userContestRankingInfoQuery = `
    query userContestRankingInfo($username: String!) {
        userContestRanking(username: $username) {
            attendedContestsCount
            rating
            globalRanking
            totalParticipants
            topPercentage
            badge {
                name
            }
        }
        userContestRankingHistory(username: $username) {
            attended
            trendDirection
            problemsSolved
            totalProblems
            finishTimeInSeconds
            rating
            ranking
            contest {
                title
                startTime
            }
        }
    }
`;

export const discussCommentsQuery = `
    query discussComments($topicId: Int!, $orderBy: String = "newest_to_oldest", $pageNo: Int = 1, $numPerPage: Int = 10) {
        topicComments(topicId: $topicId, orderBy: $orderBy, pageNo: $pageNo, numPerPage: $numPerPage) {
            data {
                id
                pinned
                pinnedBy {
                    username
                }
                post {
                    ...DiscussPost
                }
                numChildren
            }
        }
    }

    fragment DiscussPost on PostNode {
        id
        voteCount
        voteStatus
        content
        updationDate
        creationDate
        status
        isHidden
        coinRewards {
            ...CoinReward
        }
        author {
            isDiscussAdmin
            isDiscussStaff
            username
            nameColor
            activeBadge {
                displayName
                icon
            }
            profile {
                userAvatar
                reputation
            }
            isActive
        }
        authorIsModerator
        isOwnPost
    }

    fragment CoinReward on ScoreNode {
        id
        score
        description
        date
    }
`;

export const discussTopicQuery = `
    query DiscussTopic($topicId: Int!) {
        topic(id: $topicId) {
            id
            viewCount
            topLevelCommentCount
            subscribed
            title
            pinned
            tags
            hideFromTrending
            post {
                ...DiscussPost
            }
        }
    }

    fragment DiscussPost on PostNode {
        id
        voteCount
        voteStatus
        content
        updationDate
        creationDate
        status
        isHidden
        coinRewards {
            ...CoinReward
        }
        author {
            isDiscussAdmin
            isDiscussStaff
            username
            nameColor
            activeBadge {
                displayName
                icon
            }
            profile {
                userAvatar
                reputation
            }
            isActive
        }
        authorIsModerator
        isOwnPost
    }

    fragment CoinReward on ScoreNode {
        id
        score
        description
        date
    }
`;

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\GQLQueries\problemList.ts
const query = `#graphql
    query getProblems($categorySlug: String, $limit: Int, $skip: Int, $filters: QuestionListFilterInput) {
        problemsetQuestionList: questionList(
            categorySlug: $categorySlug
            limit: $limit
            skip: $skip
            filters: $filters
        ) {
            total: totalNum
            questions: data {
                acRate
                difficulty
                freqBar
                questionFrontendId
                isFavor
                isPaidOnly
                status
                title
                titleSlug
                topicTags {
                    name
                    id
                    slug
                }
                hasSolution
                hasVideoSolution
            }
        }
}`;

export default query;

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\GQLQueries\recentAcSubmit.ts
const query = `#graphql
query getACSubmissions ($username: String!, $limit: Int) {
    recentAcSubmissionList(username: $username, limit: $limit) {
        title
        titleSlug
        timestamp
        statusDisplay
        lang
    }
}`;

export default query;

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\GQLQueries\recentSubmit.ts
const query = `#graphql
query getRecentSubmissions($username: String!, $limit: Int) {
    recentSubmissionList(username: $username, limit: $limit) {
        title
        titleSlug
        timestamp
        statusDisplay
        lang
    }
}`;

export default query;

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\GQLQueries\selectProblem.ts
const query = `#graphql
query selectProblem($titleSlug: String!) {
    question(titleSlug: $titleSlug) {
        questionId
        questionFrontendId
        boundTopicId
        title
        titleSlug
        content
        translatedTitle
        translatedContent
        isPaidOnly
        difficulty
        likes
        dislikes
        isLiked
        similarQuestions
        exampleTestcases
        contributors {
            username
            profileUrl
            avatarUrl
        }
        topicTags {
            name
            slug
            translatedName
        }
        companyTagStats
        codeSnippets {
            lang
            langSlug
            code
        }
        stats
        hints
        solution {
            id
            canSeeDetail
            paidOnly
            hasVideoSolution
            paidOnlyVideo
        }
        status
        sampleTestCase
        metaData
        judgerAvailable
        judgeType
        mysqlSchemas
        enableRunCode
        enableTestMode
        enableDebugger
        envInfo
        libraryUrl
        adminUrl
        challengeQuestion {
            id
            date
            incompleteChallengeCount
            streakCount
            type
        }
        note
    }
}`;

export default query;

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\GQLQueries\trendingDiscuss.ts
const query = `
    query trendingDiscuss($first: Int!) {
        cachedTrendingCategoryTopics(first: $first) {
            id
            title
            post {
                id
                creationDate
                contentPreview
                author {
                    username
                    isActive
                    profile {
                        userAvatar
                    }
                }
            }
        }
    }
`;

export default query;

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\GQLQueries\userProfile.ts
const query = `#graphql
query getUserProfile($username: String!) {
    allQuestionsCount {
        difficulty
        count
    }
    matchedUser(username: $username) {
        username
        githubUrl
        twitterUrl
        linkedinUrl
        contributions {
            points
            questionCount
            testcaseCount
        }
        profile {
            realName
            userAvatar
            birthday
            ranking
            reputation
            websites
            countryName
            company
            school
            skillTags
            aboutMe
            starRating
        }
        badges {
            id
            displayName
            icon
            creationDate
        }
        upcomingBadges {
            name
            icon
        }
        activeBadge {
            id
            displayName
            icon
            creationDate
        }
        submitStats {
            totalSubmissionNum {
                difficulty
                count
                submissions
            }
            acSubmissionNum {
                difficulty
                count
                submissions
            }
        }
        submissionCalendar
    }
    recentSubmissionList(username: $username, limit: 20) {
        title
        titleSlug
        timestamp
        statusDisplay
        lang
    }
}`;

export default query;

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\dailyProblem.json
{
  "data": {
    "activeDailyCodingChallengeQuestion": {
      "date": "2024-03-14",
      "link": "/problems/binary-subarrays-with-sum/",
      "question": {
        "questionId": "966",
        "questionFrontendId": "930",
        "boundTopicId": null,
        "title": "Binary Subarrays With Sum",
        "titleSlug": "binary-subarrays-with-sum",
        "content": "<p>Given a binary array <code>nums</code> and an integer <code>goal</code>, return <em>the number of non-empty <strong>subarrays</strong> with a sum</em> <code>goal</code>.</p>\r\n\r\n<p>A <strong>subarray</strong> is a contiguous part of the array.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong class=\"example\">Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> nums = [1,0,1,0,1], goal = 2\r\n<strong>Output:</strong> 4\r\n<strong>Explanation:</strong> The 4 subarrays are bolded and underlined below:\r\n[<u><strong>1,0,1</strong></u>,0,1]\r\n[<u><strong>1,0,1,0</strong></u>,1]\r\n[1,<u><strong>0,1,0,1</strong></u>]\r\n[1,0,<u><strong>1,0,1</strong></u>]\r\n</pre>\r\n\r\n<p><strong class=\"example\">Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> nums = [0,0,0,0,0], goal = 0\r\n<strong>Output:</strong> 15\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= nums.length &lt;= 3 * 10<sup>4</sup></code></li>\r\n\t<li><code>nums[i]</code> is either <code>0</code> or <code>1</code>.</li>\r\n\t<li><code>0 &lt;= goal &lt;= nums.length</code></li>\r\n</ul>",
        "translatedTitle": null,
        "translatedContent": null,
        "isPaidOnly": false,
        "difficulty": "Medium",
        "likes": 3592,
        "dislikes": 120,
        "isLiked": null,
        "similarQuestions": "[{\"title\": \"Count Subarrays With Score Less Than K\", \"titleSlug\": \"count-subarrays-with-score-less-than-k\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Ways to Split Array Into Good Subarrays\", \"titleSlug\": \"ways-to-split-array-into-good-subarrays\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "exampleTestcases": "[1,0,1,0,1]\n2\n[0,0,0,0,0]\n0",
        "contributors": [],
        "topicTags": [
          { "name": "Array", "slug": "array", "translatedName": null },
          {
            "name": "Hash Table",
            "slug": "hash-table",
            "translatedName": null
          },
          {
            "name": "Sliding Window",
            "slug": "sliding-window",
            "translatedName": null
          },
          { "name": "Prefix Sum", "slug": "prefix-sum", "translatedName": null }
        ],
        "companyTagStats": null,
        "codeSnippets": [
          {
            "lang": "C++",
            "langSlug": "cpp",
            "code": "class Solution {\r\npublic:\r\n    int numSubarraysWithSum(vector<int>& nums, int goal) {\r\n        \r\n    }\r\n};"
          },
          {
            "lang": "Java",
            "langSlug": "java",
            "code": "class Solution {\r\n    public int numSubarraysWithSum(int[] nums, int goal) {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Python",
            "langSlug": "python",
            "code": "class Solution(object):\r\n    def numSubarraysWithSum(self, nums, goal):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :type goal: int\r\n        :rtype: int\r\n        \"\"\""
          },
          {
            "lang": "Python3",
            "langSlug": "python3",
            "code": "class Solution:\r\n    def numSubarraysWithSum(self, nums: List[int], goal: int) -> int:"
          },
          {
            "lang": "C",
            "langSlug": "c",
            "code": "int numSubarraysWithSum(int* nums, int numsSize, int goal){\r\n\r\n}"
          },
          {
            "lang": "C#",
            "langSlug": "csharp",
            "code": "public class Solution {\r\n    public int NumSubarraysWithSum(int[] nums, int goal) {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "JavaScript",
            "langSlug": "javascript",
            "code": "/**\r\n * @param {number[]} nums\r\n * @param {number} goal\r\n * @return {number}\r\n */\r\nvar numSubarraysWithSum = function(nums, goal) {\r\n    \r\n};"
          },
          {
            "lang": "TypeScript",
            "langSlug": "typescript",
            "code": "function numSubarraysWithSum(nums: number[], goal: number): number {\r\n\r\n};"
          },
          {
            "lang": "PHP",
            "langSlug": "php",
            "code": "class Solution {\r\n\r\n    /**\r\n     * @param Integer[] $nums\r\n     * @param Integer $goal\r\n     * @return Integer\r\n     */\r\n    function numSubarraysWithSum($nums, $goal) {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Swift",
            "langSlug": "swift",
            "code": "class Solution {\r\n    func numSubarraysWithSum(_ nums: [Int], _ goal: Int) -> Int {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Kotlin",
            "langSlug": "kotlin",
            "code": "class Solution {\r\n    fun numSubarraysWithSum(nums: IntArray, goal: Int): Int {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Go",
            "langSlug": "golang",
            "code": "func numSubarraysWithSum(nums []int, goal int) int {\r\n    \r\n}"
          },
          {
            "lang": "Ruby",
            "langSlug": "ruby",
            "code": "# @param {Integer[]} nums\r\n# @param {Integer} goal\r\n# @return {Integer}\r\ndef num_subarrays_with_sum(nums, goal)\r\n    \r\nend"
          },
          {
            "lang": "Scala",
            "langSlug": "scala",
            "code": "object Solution {\r\n    def numSubarraysWithSum(nums: Array[Int], goal: Int): Int = {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Rust",
            "langSlug": "rust",
            "code": "impl Solution {\r\n    pub fn num_subarrays_with_sum(nums: Vec<i32>, goal: i32) -> i32 {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Racket",
            "langSlug": "racket",
            "code": "(define/contract (num-subarrays-with-sum nums goal)\r\n  (-> (listof exact-integer?) exact-integer? exact-integer?)\r\n\r\n  )"
          }
        ],
        "stats": "{\"totalAccepted\": \"203.9K\", \"totalSubmission\": \"330.4K\", \"totalAcceptedRaw\": 203936, \"totalSubmissionRaw\": 330374, \"acRate\": \"61.7%\"}",
        "hints": [],
        "solution": {
          "id": "2266",
          "canSeeDetail": true,
          "paidOnly": false,
          "hasVideoSolution": false,
          "paidOnlyVideo": true
        },
        "status": null,
        "sampleTestCase": "[1,0,1,0,1]\n2",
        "metaData": "{\n  \"name\": \"numSubarraysWithSum\",\n  \"params\": [\n    {\n      \"name\": \"nums\",\n      \"type\": \"integer[]\"\n    },\n    {\n      \"name\": \"goal\",\n      \"type\": \"integer\"\n    }\n  ],\n  \"return\": {\n    \"type\": \"integer\"\n  }\n}",
        "judgerAvailable": true,
        "judgeType": "large",
        "mysqlSchemas": [],
        "enableRunCode": true,
        "enableTestMode": false,
        "enableDebugger": true,
        "envInfo": "{\"cpp\": [\"C++\", \"<p>Compiled with <code> clang 17 </code> using the latest C++ 20 standard, and <code>libstdc++</code> provided by GCC 11.</p>\\r\\n\\r\\n<p>Your code is compiled with level two optimization (<code>-O2</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"java\": [\"Java\", \"<p><code>OpenJDK 21</code>. Using compile arguments: <code>--enable-preview --release 21</code></p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n<p>Includes <code>Pair</code> class from https://docs.oracle.com/javase/8/javafx/api/javafx/util/Pair.html.</p>\"], \"python\": [\"Python\", \"<p><code>Python 2.7.12</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\\r\\n\\r\\n<p>Note that Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">will not be maintained past 2020</a>. For the latest Python, please choose Python3 instead.</p>\"], \"c\": [\"C\", \"<p>Compiled with <code>gcc 11</code> using the gnu11 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O2</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n\\r\\n<p>For hash table operations, you may use <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>. \\\"uthash.h\\\" is included by default. Below are some examples:</p>\\r\\n\\r\\n<p><b>1. Adding an item to a hash.</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. Looking up an item in a hash:</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. Deleting an item in a hash:</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p><a href=\\\"https://learn.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-12\\\" target=\\\"_blank\\\">C# 12</a> with .NET 8 runtime</p>\"], \"javascript\": [\"JavaScript\", \"<p><code>Node.js 20.10.0</code>.</p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES6 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\\r\\n\\r\\n<p>For Priority Queue / Queue data structures, you may use 5.4.0 version of <a href=\\\"https://github.com/datastructures-js/priority-queue/blob/v5/README.md\\\" target=\\\"_blank\\\">datastructures-js/priority-queue</a> and 4.2.3 version of <a href=\\\"https://github.com/datastructures-js/queue/tree/v4.2.3\\\" target=\\\"_blank\\\">datastructures-js/queue</a>.</p>\"], \"ruby\": [\"Ruby\", \"<p><code>Ruby 3.2</code></p>\\r\\n\\r\\n<p>Some common data structure implementations are provided in the Algorithms module: https://www.rubydoc.info/github/kanwei/algorithms/Algorithms</p>\"], \"swift\": [\"Swift\", \"<p><code>Swift 5.9</code>.</p>\\r\\n\\r\\n<p>You may use <a href=\\\"https://github.com/apple/swift-algorithms/tree/1.2.0\\\" target=\\\"_blank\\\">swift-algorithms 1.2.0</a> and <a href=\\\"https://github.com/apple/swift-collections/tree/1.0.6\\\" target=\\\"_blank\\\">swift-collections 1.0.6</a>.</p>\"], \"golang\": [\"Go\", \"<p><code>Go 1.21</code></p>\\r\\n<p>Support <a href=\\\"https://github.com/emirpasic/gods/tree/v1.18.1\\\" target=\\\"_blank\\\">https://godoc.org/github.com/emirpasic/gods@v1.18.1</a> library.</p>\"], \"python3\": [\"Python3\", \"<p><code>Python 3.11</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\"], \"scala\": [\"Scala\", \"<p><code>Scala 3.3.1</code>.</p>\"], \"kotlin\": [\"Kotlin\", \"<p><code>Kotlin 1.9.0</code>.</p>\\r\\n\\r\\n<p>We are using an experimental compiler provided by JetBrains.</p>\"], \"rust\": [\"Rust\", \"<p><code>Rust 1.74.1</code></p>\\r\\n\\r\\n<p>Supports <a href=\\\"https://crates.io/crates/rand\\\" target=\\\"_blank\\\">rand </a> v0.6\\u00a0from crates.io</p>\"], \"php\": [\"PHP\", \"<p><code>PHP 8.2</code>.</p>\\r\\n<p>With bcmath module</p>\"], \"typescript\": [\"Typescript\", \"<p><code>TypeScript 5.1.6, Node.js 20.10.0</code>.</p>\\r\\n\\r\\n<p>Compile Options: <code>--alwaysStrict --strictBindCallApply --strictFunctionTypes --target ES2022</code></p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES2022 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\"], \"racket\": [\"Racket\", \"<p><a href=\\\"https://docs.racket-lang.org/guide/performance.html#%28tech._c%29\\\" target=\\\"_blank\\\">Racket CS</a> v8.11</p>\\r\\n\\r\\n<p>Using <code>#lang racket</code></p>\\r\\n\\r\\n<p>Required <code>data/gvector data/queue data/order data/heap</code> automatically for your convenience</p>\"]}",
        "libraryUrl": null,
        "adminUrl": null,
        "challengeQuestion": {
          "id": "1692",
          "date": "2024-03-14",
          "incompleteChallengeCount": 0,
          "streakCount": 0,
          "type": "DAILY"
        },
        "note": null
      }
    }
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\index.ts
export { default as singleUser } from './singleUser.json';
export { default as recentSubmissions } from './recentSubmissions.json';
export { default as recentACSubmissions } from './recentAcSubmissionList.json';
export { default as singleUserContests } from './singleUserContests.json';
export { default as dailyProblem } from './dailyProblem.json';
export { default as problems } from './problems.json';
export { default as selectProblem } from './selectProblem.json';

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\problems.json
{
  "data": {
    "problemsetQuestionList": {
      "total": 3078,
      "questions": [
        {
          "acRate": 52.09288098160903,
          "difficulty": "Easy",
          "freqBar": null,
          "questionFrontendId": "1",
          "isFavor": false,
          "isPaidOnly": false,
          "status": null,
          "title": "Two Sum",
          "titleSlug": "two-sum",
          "topicTags": [
            { "name": "Array", "id": "VG9waWNUYWdOb2RlOjU=", "slug": "array" },
            {
              "name": "Hash Table",
              "id": "VG9waWNUYWdOb2RlOjY=",
              "slug": "hash-table"
            }
          ],
          "hasSolution": true,
          "hasVideoSolution": true
        }
      ]
    }
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\recentAcSubmissionList.json
{
  "data": {
    "recentAcSubmissionList": [
      {
        "title": "Generate a String With Characters That Have Odd Counts",
        "titleSlug": "generate-a-string-with-characters-that-have-odd-counts",
        "timestamp": "1705161771",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Count Negative Numbers in a Sorted Matrix",
        "titleSlug": "count-negative-numbers-in-a-sorted-matrix",
        "timestamp": "1705161438",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Check If N and Its Double Exist",
        "titleSlug": "check-if-n-and-its-double-exist",
        "timestamp": "1705161205",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Determine if String Halves Are Alike",
        "titleSlug": "determine-if-string-halves-are-alike",
        "timestamp": "1705032551",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343666",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Sort Array By Parity",
        "titleSlug": "sort-array-by-parity",
        "timestamp": "1704316936",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Convert an Array Into a 2D Array With Conditions",
        "titleSlug": "convert-an-array-into-a-2d-array-with-conditions",
        "timestamp": "1704261617",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Average Value of Even Numbers That Are Divisible by Three",
        "titleSlug": "average-value-of-even-numbers-that-are-divisible-by-three",
        "timestamp": "1704259967",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Number of Laser Beams in a Bank",
        "titleSlug": "number-of-laser-beams-in-a-bank",
        "timestamp": "1704256409",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Take Gifts From the Richest Pile",
        "titleSlug": "take-gifts-from-the-richest-pile",
        "timestamp": "1704252901",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Decompress Run-Length Encoded List",
        "titleSlug": "decompress-run-length-encoded-list",
        "timestamp": "1704236706",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Make Array Zero by Subtracting Equal Amounts",
        "titleSlug": "make-array-zero-by-subtracting-equal-amounts",
        "timestamp": "1704234483",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Remove One Element to Make the Array Strictly Increasing",
        "titleSlug": "remove-one-element-to-make-the-array-strictly-increasing",
        "timestamp": "1704228445",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Check if All A's Appears Before All B's",
        "titleSlug": "check-if-all-as-appears-before-all-bs",
        "timestamp": "1704223378",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Contains Duplicate II",
        "titleSlug": "contains-duplicate-ii",
        "timestamp": "1704222499",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Pascal's Triangle",
        "titleSlug": "pascals-triangle",
        "timestamp": "1704219156",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Make Array Zero by Subtracting Equal Amounts",
        "titleSlug": "make-array-zero-by-subtracting-equal-amounts",
        "timestamp": "1704216984",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Apply Transform Over Each Element in Array",
        "titleSlug": "apply-transform-over-each-element-in-array",
        "timestamp": "1704215794",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Find the Difference",
        "titleSlug": "find-the-difference",
        "timestamp": "1702492842",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Monotonic Array",
        "titleSlug": "monotonic-array",
        "timestamp": "1702417451",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      }
    ]
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\recentSubmissions.json
{
  "data": {
    "recentSubmissionList": [
      {
        "title": "Generate a String With Characters That Have Odd Counts",
        "titleSlug": "generate-a-string-with-characters-that-have-odd-counts",
        "timestamp": "1705161771",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Count Negative Numbers in a Sorted Matrix",
        "titleSlug": "count-negative-numbers-in-a-sorted-matrix",
        "timestamp": "1705161438",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Count Negative Numbers in a Sorted Matrix",
        "titleSlug": "count-negative-numbers-in-a-sorted-matrix",
        "timestamp": "1705161424",
        "statusDisplay": "Runtime Error",
        "lang": "javascript"
      },
      {
        "title": "Check If N and Its Double Exist",
        "titleSlug": "check-if-n-and-its-double-exist",
        "timestamp": "1705161205",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Check If N and Its Double Exist",
        "titleSlug": "check-if-n-and-its-double-exist",
        "timestamp": "1705161123",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Steps to Make Two Strings Anagram",
        "titleSlug": "minimum-number-of-steps-to-make-two-strings-anagram",
        "timestamp": "1705160304",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Determine if String Halves Are Alike",
        "titleSlug": "determine-if-string-halves-are-alike",
        "timestamp": "1705032551",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Longest Increasing Subsequence",
        "titleSlug": "longest-increasing-subsequence",
        "timestamp": "1704442672",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Longest Increasing Subsequence",
        "titleSlug": "longest-increasing-subsequence",
        "timestamp": "1704440871",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Longest Increasing Subsequence",
        "titleSlug": "longest-increasing-subsequence",
        "timestamp": "1704439843",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343666",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343585",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343426",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343413",
        "statusDisplay": "Runtime Error",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343387",
        "statusDisplay": "Runtime Error",
        "lang": "javascript"
      },
      {
        "title": "Sort Array By Parity",
        "titleSlug": "sort-array-by-parity",
        "timestamp": "1704316936",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Convert an Array Into a 2D Array With Conditions",
        "titleSlug": "convert-an-array-into-a-2d-array-with-conditions",
        "timestamp": "1704261617",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Convert an Array Into a 2D Array With Conditions",
        "titleSlug": "convert-an-array-into-a-2d-array-with-conditions",
        "timestamp": "1704261566",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Convert an Array Into a 2D Array With Conditions",
        "titleSlug": "convert-an-array-into-a-2d-array-with-conditions",
        "timestamp": "1704261530",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Average Value of Even Numbers That Are Divisible by Three",
        "titleSlug": "average-value-of-even-numbers-that-are-divisible-by-three",
        "timestamp": "1704259967",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      }
    ]
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\selectProblem.json
{
  "data": {
    "question": {
      "questionId": "1",
      "questionFrontendId": "1",
      "boundTopicId": null,
      "title": "Two Sum",
      "titleSlug": "two-sum",
      "content": "<p>Given an array of integers <code>nums</code>&nbsp;and an integer <code>target</code>, return <em>indices of the two numbers such that they add up to <code>target</code></em>.</p>\n\n<p>You may assume that each input would have <strong><em>exactly</em> one solution</strong>, and you may not use the <em>same</em> element twice.</p>\n\n<p>You can return the answer in any order.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,7,11,15], target = 9\n<strong>Output:</strong> [0,1]\n<strong>Explanation:</strong> Because nums[0] + nums[1] == 9, we return [0, 1].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,2,4], target = 6\n<strong>Output:</strong> [1,2]\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,3], target = 6\n<strong>Output:</strong> [0,1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= target &lt;= 10<sup>9</sup></code></li>\n\t<li><strong>Only one valid answer exists.</strong></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow-up:&nbsp;</strong>Can you come up with an algorithm that is less than <code>O(n<sup>2</sup>)</code><font face=\"monospace\">&nbsp;</font>time complexity?",
      "translatedTitle": null,
      "translatedContent": null,
      "isPaidOnly": false,
      "difficulty": "Easy",
      "likes": 55371,
      "dislikes": 1901,
      "isLiked": null,
      "similarQuestions": "[{\"title\": \"3Sum\", \"titleSlug\": \"3sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"4Sum\", \"titleSlug\": \"4sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Two Sum II - Input Array Is Sorted\", \"titleSlug\": \"two-sum-ii-input-array-is-sorted\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Two Sum III - Data structure design\", \"titleSlug\": \"two-sum-iii-data-structure-design\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Subarray Sum Equals K\", \"titleSlug\": \"subarray-sum-equals-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Two Sum IV - Input is a BST\", \"titleSlug\": \"two-sum-iv-input-is-a-bst\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Two Sum Less Than K\", \"titleSlug\": \"two-sum-less-than-k\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Max Number of K-Sum Pairs\", \"titleSlug\": \"max-number-of-k-sum-pairs\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Good Meals\", \"titleSlug\": \"count-good-meals\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Number of Pairs With Absolute Difference K\", \"titleSlug\": \"count-number-of-pairs-with-absolute-difference-k\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Number of Pairs of Strings With Concatenation Equal to Target\", \"titleSlug\": \"number-of-pairs-of-strings-with-concatenation-equal-to-target\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find All K-Distant Indices in an Array\", \"titleSlug\": \"find-all-k-distant-indices-in-an-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"First Letter to Appear Twice\", \"titleSlug\": \"first-letter-to-appear-twice\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Number of Excellent Pairs\", \"titleSlug\": \"number-of-excellent-pairs\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Number of Arithmetic Triplets\", \"titleSlug\": \"number-of-arithmetic-triplets\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Node With Highest Edge Score\", \"titleSlug\": \"node-with-highest-edge-score\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Check Distances Between Same Letters\", \"titleSlug\": \"check-distances-between-same-letters\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find Subarrays With Equal Sum\", \"titleSlug\": \"find-subarrays-with-equal-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Largest Positive Integer That Exists With Its Negative\", \"titleSlug\": \"largest-positive-integer-that-exists-with-its-negative\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Number of Distinct Averages\", \"titleSlug\": \"number-of-distinct-averages\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Count Pairs Whose Sum is Less than Target\", \"titleSlug\": \"count-pairs-whose-sum-is-less-than-target\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
      "exampleTestcases": "[2,7,11,15]\n9\n[3,2,4]\n6\n[3,3]\n6",
      "contributors": [],
      "topicTags": [
        { "name": "Array", "slug": "array", "translatedName": null },
        { "name": "Hash Table", "slug": "hash-table", "translatedName": null }
      ],
      "companyTagStats": null,
      "codeSnippets": [
        {
          "lang": "C++",
          "langSlug": "cpp",
          "code": "class Solution {\npublic:\n    vector<int> twoSum(vector<int>& nums, int target) {\n        \n    }\n};"
        },
        {
          "lang": "Java",
          "langSlug": "java",
          "code": "class Solution {\n    public int[] twoSum(int[] nums, int target) {\n        \n    }\n}"
        },
        {
          "lang": "Python",
          "langSlug": "python",
          "code": "class Solution(object):\n    def twoSum(self, nums, target):\n        \"\"\"\n        :type nums: List[int]\n        :type target: int\n        :rtype: List[int]\n        \"\"\"\n        "
        },
        {
          "lang": "Python3",
          "langSlug": "python3",
          "code": "class Solution:\n    def twoSum(self, nums: List[int], target: int) -> List[int]:\n        "
        },
        {
          "lang": "C",
          "langSlug": "c",
          "code": "/**\n * Note: The returned array must be malloced, assume caller calls free().\n */\nint* twoSum(int* nums, int numsSize, int target, int* returnSize) {\n    \n}"
        },
        {
          "lang": "C#",
          "langSlug": "csharp",
          "code": "public class Solution {\n    public int[] TwoSum(int[] nums, int target) {\n        \n    }\n}"
        },
        {
          "lang": "JavaScript",
          "langSlug": "javascript",
          "code": "/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nvar twoSum = function(nums, target) {\n    \n};"
        },
        {
          "lang": "TypeScript",
          "langSlug": "typescript",
          "code": "function twoSum(nums: number[], target: number): number[] {\n    \n};"
        },
        {
          "lang": "PHP",
          "langSlug": "php",
          "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @param Integer $target\n     * @return Integer[]\n     */\n    function twoSum($nums, $target) {\n        \n    }\n}"
        },
        {
          "lang": "Swift",
          "langSlug": "swift",
          "code": "class Solution {\n    func twoSum(_ nums: [Int], _ target: Int) -> [Int] {\n        \n    }\n}"
        },
        {
          "lang": "Kotlin",
          "langSlug": "kotlin",
          "code": "class Solution {\n    fun twoSum(nums: IntArray, target: Int): IntArray {\n        \n    }\n}"
        },
        {
          "lang": "Dart",
          "langSlug": "dart",
          "code": "class Solution {\n  List<int> twoSum(List<int> nums, int target) {\n    \n  }\n}"
        },
        {
          "lang": "Go",
          "langSlug": "golang",
          "code": "func twoSum(nums []int, target int) []int {\n    \n}"
        },
        {
          "lang": "Ruby",
          "langSlug": "ruby",
          "code": "# @param {Integer[]} nums\n# @param {Integer} target\n# @return {Integer[]}\ndef two_sum(nums, target)\n    \nend"
        },
        {
          "lang": "Scala",
          "langSlug": "scala",
          "code": "object Solution {\n    def twoSum(nums: Array[Int], target: Int): Array[Int] = {\n        \n    }\n}"
        },
        {
          "lang": "Rust",
          "langSlug": "rust",
          "code": "impl Solution {\n    pub fn two_sum(nums: Vec<i32>, target: i32) -> Vec<i32> {\n        \n    }\n}"
        },
        {
          "lang": "Racket",
          "langSlug": "racket",
          "code": "(define/contract (two-sum nums target)\n  (-> (listof exact-integer?) exact-integer? (listof exact-integer?))\n  )"
        },
        {
          "lang": "Erlang",
          "langSlug": "erlang",
          "code": "-spec two_sum(Nums :: [integer()], Target :: integer()) -> [integer()].\ntwo_sum(Nums, Target) ->\n  ."
        },
        {
          "lang": "Elixir",
          "langSlug": "elixir",
          "code": "defmodule Solution do\n  @spec two_sum(nums :: [integer], target :: integer) :: [integer]\n  def two_sum(nums, target) do\n    \n  end\nend"
        }
      ],
      "stats": "{\"totalAccepted\": \"12.6M\", \"totalSubmission\": \"24.1M\", \"totalAcceptedRaw\": 12566379, \"totalSubmissionRaw\": 24123031, \"acRate\": \"52.1%\"}",
      "hints": [
        "A really brute force way would be to search for all possible pairs of numbers but that would be too slow. Again, it's best to try out brute force solutions for just for completeness. It is from these brute force solutions that you can come up with optimizations.",
        "So, if we fix one of the numbers, say <code>x</code>, we have to scan the entire array to find the next number <code>y</code> which is <code>value - x</code> where value is the input parameter. Can we change our array somehow so that this search becomes faster?",
        "The second train of thought is, without changing the array, can we use additional space somehow? Like maybe a hash map to speed up the search?"
      ],
      "solution": {
        "id": "7",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": true,
        "paidOnlyVideo": false
      },
      "status": null,
      "sampleTestCase": "[2,7,11,15]\n9",
      "metaData": "{\n  \"name\": \"twoSum\",\n  \"params\": [\n    {\n      \"name\": \"nums\",\n      \"type\": \"integer[]\"\n    },\n    {\n      \"name\": \"target\",\n      \"type\": \"integer\"\n    }\n  ],\n  \"return\": {\n    \"type\": \"integer[]\",\n    \"size\": 2\n  },\n  \"manual\": false\n}",
      "judgerAvailable": true,
      "judgeType": "small",
      "mysqlSchemas": [],
      "enableRunCode": true,
      "enableTestMode": false,
      "enableDebugger": true,
      "envInfo": "{\"cpp\": [\"C++\", \"<p>Compiled with <code> clang 17 </code> using the latest C++ 20 standard, and <code>libstdc++</code> provided by GCC 11.</p>\\r\\n\\r\\n<p>Your code is compiled with level two optimization (<code>-O2</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"java\": [\"Java\", \"<p><code>OpenJDK 21</code>. Using compile arguments: <code>--enable-preview --release 21</code></p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n<p>Includes <code>Pair</code> class from https://docs.oracle.com/javase/8/javafx/api/javafx/util/Pair.html.</p>\"], \"python\": [\"Python\", \"<p><code>Python 2.7.12</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\\r\\n\\r\\n<p>Note that Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">will not be maintained past 2020</a>. For the latest Python, please choose Python3 instead.</p>\"], \"c\": [\"C\", \"<p>Compiled with <code>gcc 11</code> using the gnu11 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O2</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n\\r\\n<p>For hash table operations, you may use <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>. \\\"uthash.h\\\" is included by default. Below are some examples:</p>\\r\\n\\r\\n<p><b>1. Adding an item to a hash.</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. Looking up an item in a hash:</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. Deleting an item in a hash:</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p><a href=\\\"https://learn.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-12\\\" target=\\\"_blank\\\">C# 12</a> with .NET 8 runtime</p>\"], \"javascript\": [\"JavaScript\", \"<p><code>Node.js 20.10.0</code>.</p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES6 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\\r\\n\\r\\n<p>For Priority Queue / Queue data structures, you may use 5.4.0 version of <a href=\\\"https://github.com/datastructures-js/priority-queue/blob/v5/README.md\\\" target=\\\"_blank\\\">datastructures-js/priority-queue</a> and 4.2.3 version of <a href=\\\"https://github.com/datastructures-js/queue/tree/v4.2.3\\\" target=\\\"_blank\\\">datastructures-js/queue</a>.</p>\"], \"ruby\": [\"Ruby\", \"<p><code>Ruby 3.2</code></p>\\r\\n\\r\\n<p>Some common data structure implementations are provided in the Algorithms module: https://www.rubydoc.info/github/kanwei/algorithms/Algorithms</p>\"], \"swift\": [\"Swift\", \"<p><code>Swift 5.9</code>.</p>\\r\\n\\r\\n<p>You may use <a href=\\\"https://github.com/apple/swift-algorithms/tree/1.2.0\\\" target=\\\"_blank\\\">swift-algorithms 1.2.0</a> and <a href=\\\"https://github.com/apple/swift-collections/tree/1.0.6\\\" target=\\\"_blank\\\">swift-collections 1.0.6</a>.</p>\"], \"golang\": [\"Go\", \"<p><code>Go 1.21</code></p>\\r\\n<p>Support <a href=\\\"https://github.com/emirpasic/gods/tree/v1.18.1\\\" target=\\\"_blank\\\">https://godoc.org/github.com/emirpasic/gods@v1.18.1</a> library.</p>\"], \"python3\": [\"Python3\", \"<p><code>Python 3.11</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\"], \"scala\": [\"Scala\", \"<p><code>Scala 3.3.1</code>.</p>\"], \"kotlin\": [\"Kotlin\", \"<p><code>Kotlin 1.9.0</code>.</p>\\r\\n\\r\\n<p>We are using an experimental compiler provided by JetBrains.</p>\"], \"rust\": [\"Rust\", \"<p><code>Rust 1.74.1</code></p>\\r\\n\\r\\n<p>Supports <a href=\\\"https://crates.io/crates/rand\\\" target=\\\"_blank\\\">rand </a> v0.6\\u00a0from crates.io</p>\"], \"php\": [\"PHP\", \"<p><code>PHP 8.2</code>.</p>\\r\\n<p>With bcmath module</p>\"], \"typescript\": [\"Typescript\", \"<p><code>TypeScript 5.1.6, Node.js 20.10.0</code>.</p>\\r\\n\\r\\n<p>Compile Options: <code>--alwaysStrict --strictBindCallApply --strictFunctionTypes --target ES2022</code></p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES2022 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\"], \"racket\": [\"Racket\", \"<p><a href=\\\"https://docs.racket-lang.org/guide/performance.html#%28tech._c%29\\\" target=\\\"_blank\\\">Racket CS</a> v8.11</p>\\r\\n\\r\\n<p>Using <code>#lang racket</code></p>\\r\\n\\r\\n<p>Required <code>data/gvector data/queue data/order data/heap</code> automatically for your convenience</p>\"], \"erlang\": [\"Erlang\", \"Erlang/OTP 26\"], \"elixir\": [\"Elixir\", \"Elixir 1.15 with Erlang/OTP 26\"], \"dart\": [\"Dart\", \"<p>Dart 3.2</p>\\r\\n\\r\\n<p>Your code will be run directly without compiling</p>\"]}",
      "libraryUrl": null,
      "adminUrl": null,
      "challengeQuestion": null,
      "note": null
    }
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\singleUser.json
{
  "data": {
    "matchedUser": {
      "submissionCalendar": "{\"1704153600\": 24, \"1704240000\": 9, \"1704326400\": 5, \"1704412800\": 3, \"1705017600\": 1, \"1705104000\": 6, \"1699315200\": 46, \"1701302400\": 6, \"1701648000\": 24, \"1701734400\": 11, \"1702339200\": 29, \"1702425600\": 7}",
      "submitStats": {
        "totalSubmissionNum": [
          { "difficulty": "All", "count": 158, "submissions": 463 },
          { "difficulty": "Easy", "count": 131, "submissions": 388 },
          { "difficulty": "Medium", "count": 27, "submissions": 75 },
          { "difficulty": "Hard", "count": 0, "submissions": 0 }
        ],
        "acSubmissionNum": [
          { "difficulty": "All", "count": 133, "submissions": 215 },
          { "difficulty": "Easy", "count": 122, "submissions": 202 },
          { "difficulty": "Medium", "count": 11, "submissions": 13 },
          { "difficulty": "Hard", "count": 0, "submissions": 0 }
        ]
      },
      "username": "jambobjones",
      "githubUrl": "https://github.com/jambobjones",
      "twitterUrl": null,
      "linkedinUrl": null,
      "contributions": {
        "points": 115,
        "questionCount": 0,
        "testcaseCount": 0
      },
      "profile": {
        "realName": "Jambob Jones",
        "userAvatar": "https://assets.leetcode.com/users/jambobjones/avatar_1617850141.png",
        "birthday": null,
        "ranking": 630800,
        "reputation": 0,
        "websites": [],
        "countryName": null,
        "company": null,
        "school": null,
        "skillTags": [],
        "aboutMe": "",
        "starRating": 2
      },
      "badges": [],
      "upcomingBadges": [
        {
          "name": "Mar LeetCoding Challenge",
          "icon": "/static/images/badges/dcc-2024-3.png"
        }
      ],
      "activeBadge": null
    }
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\singleUserContests.json
{
  "data": {
    "userContestRanking": null,
    "userContestRankingHistory": [
      {
        "attended": false,
        "rating": 1500,
        "ranking": 0,
        "trendDirection": "NONE",
        "problemsSolved": 0,
        "totalProblems": 3,
        "finishTimeInSeconds": 0
      }
    ]
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\handlers.ts
import * as msw from 'msw';
import {
  singleUser,
  singleUserContests,
  recentSubmissions,
  recentACSubmissions,
  dailyProblem,
  problems,
  selectProblem,
} from './mockData';

export const handlers = [
  msw.http.post('https://leetcode.com/graphql', async (ctx) => {
    const test = await ctx.request.json();
    const typed = test as { query: string };
    if (typed.query.indexOf('getUserProfile') !== -1) {
      return msw.HttpResponse.json(singleUser);
    }

    if (typed.query.indexOf('getUserContestRanking') !== -1) {
      return msw.HttpResponse.json(singleUserContests);
    }

    if (typed.query.indexOf('getRecentSubmissions') !== -1) {
      return msw.HttpResponse.json(recentSubmissions);
    }

    if (typed.query.indexOf('getACSubmissions') !== -1) {
      return msw.HttpResponse.json(recentACSubmissions);
    }

    if (typed.query.indexOf('getDailyProblem') !== -1) {
      return msw.HttpResponse.json(dailyProblem);
    }

    if (typed.query.indexOf('getProblems') !== -1) {
      return msw.HttpResponse.json(problems);
    }

    if (typed.query.indexOf('selectProblem') !== -1) {
      return msw.HttpResponse.json(selectProblem);
    }

    return msw.HttpResponse.json({});
  }),
];

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\index.ts
import { setupServer } from 'msw/node';
import { handlers } from './handlers';

export const server = setupServer(...handlers);

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\dailyProblem.json
{
  "data": {
    "activeDailyCodingChallengeQuestion": {
      "date": "2024-03-14",
      "link": "/problems/binary-subarrays-with-sum/",
      "question": {
        "questionId": "966",
        "questionFrontendId": "930",
        "boundTopicId": null,
        "title": "Binary Subarrays With Sum",
        "titleSlug": "binary-subarrays-with-sum",
        "content": "<p>Given a binary array <code>nums</code> and an integer <code>goal</code>, return <em>the number of non-empty <strong>subarrays</strong> with a sum</em> <code>goal</code>.</p>\r\n\r\n<p>A <strong>subarray</strong> is a contiguous part of the array.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong class=\"example\">Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> nums = [1,0,1,0,1], goal = 2\r\n<strong>Output:</strong> 4\r\n<strong>Explanation:</strong> The 4 subarrays are bolded and underlined below:\r\n[<u><strong>1,0,1</strong></u>,0,1]\r\n[<u><strong>1,0,1,0</strong></u>,1]\r\n[1,<u><strong>0,1,0,1</strong></u>]\r\n[1,0,<u><strong>1,0,1</strong></u>]\r\n</pre>\r\n\r\n<p><strong class=\"example\">Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> nums = [0,0,0,0,0], goal = 0\r\n<strong>Output:</strong> 15\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= nums.length &lt;= 3 * 10<sup>4</sup></code></li>\r\n\t<li><code>nums[i]</code> is either <code>0</code> or <code>1</code>.</li>\r\n\t<li><code>0 &lt;= goal &lt;= nums.length</code></li>\r\n</ul>",
        "translatedTitle": null,
        "translatedContent": null,
        "isPaidOnly": false,
        "difficulty": "Medium",
        "likes": 3592,
        "dislikes": 120,
        "isLiked": null,
        "similarQuestions": "[{\"title\": \"Count Subarrays With Score Less Than K\", \"titleSlug\": \"count-subarrays-with-score-less-than-k\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Ways to Split Array Into Good Subarrays\", \"titleSlug\": \"ways-to-split-array-into-good-subarrays\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "exampleTestcases": "[1,0,1,0,1]\n2\n[0,0,0,0,0]\n0",
        "contributors": [],
        "topicTags": [
          { "name": "Array", "slug": "array", "translatedName": null },
          {
            "name": "Hash Table",
            "slug": "hash-table",
            "translatedName": null
          },
          {
            "name": "Sliding Window",
            "slug": "sliding-window",
            "translatedName": null
          },
          { "name": "Prefix Sum", "slug": "prefix-sum", "translatedName": null }
        ],
        "companyTagStats": null,
        "codeSnippets": [
          {
            "lang": "C++",
            "langSlug": "cpp",
            "code": "class Solution {\r\npublic:\r\n    int numSubarraysWithSum(vector<int>& nums, int goal) {\r\n        \r\n    }\r\n};"
          },
          {
            "lang": "Java",
            "langSlug": "java",
            "code": "class Solution {\r\n    public int numSubarraysWithSum(int[] nums, int goal) {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Python",
            "langSlug": "python",
            "code": "class Solution(object):\r\n    def numSubarraysWithSum(self, nums, goal):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :type goal: int\r\n        :rtype: int\r\n        \"\"\""
          },
          {
            "lang": "Python3",
            "langSlug": "python3",
            "code": "class Solution:\r\n    def numSubarraysWithSum(self, nums: List[int], goal: int) -> int:"
          },
          {
            "lang": "C",
            "langSlug": "c",
            "code": "int numSubarraysWithSum(int* nums, int numsSize, int goal){\r\n\r\n}"
          },
          {
            "lang": "C#",
            "langSlug": "csharp",
            "code": "public class Solution {\r\n    public int NumSubarraysWithSum(int[] nums, int goal) {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "JavaScript",
            "langSlug": "javascript",
            "code": "/**\r\n * @param {number[]} nums\r\n * @param {number} goal\r\n * @return {number}\r\n */\r\nvar numSubarraysWithSum = function(nums, goal) {\r\n    \r\n};"
          },
          {
            "lang": "TypeScript",
            "langSlug": "typescript",
            "code": "function numSubarraysWithSum(nums: number[], goal: number): number {\r\n\r\n};"
          },
          {
            "lang": "PHP",
            "langSlug": "php",
            "code": "class Solution {\r\n\r\n    /**\r\n     * @param Integer[] $nums\r\n     * @param Integer $goal\r\n     * @return Integer\r\n     */\r\n    function numSubarraysWithSum($nums, $goal) {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Swift",
            "langSlug": "swift",
            "code": "class Solution {\r\n    func numSubarraysWithSum(_ nums: [Int], _ goal: Int) -> Int {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Kotlin",
            "langSlug": "kotlin",
            "code": "class Solution {\r\n    fun numSubarraysWithSum(nums: IntArray, goal: Int): Int {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Go",
            "langSlug": "golang",
            "code": "func numSubarraysWithSum(nums []int, goal int) int {\r\n    \r\n}"
          },
          {
            "lang": "Ruby",
            "langSlug": "ruby",
            "code": "# @param {Integer[]} nums\r\n# @param {Integer} goal\r\n# @return {Integer}\r\ndef num_subarrays_with_sum(nums, goal)\r\n    \r\nend"
          },
          {
            "lang": "Scala",
            "langSlug": "scala",
            "code": "object Solution {\r\n    def numSubarraysWithSum(nums: Array[Int], goal: Int): Int = {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Rust",
            "langSlug": "rust",
            "code": "impl Solution {\r\n    pub fn num_subarrays_with_sum(nums: Vec<i32>, goal: i32) -> i32 {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Racket",
            "langSlug": "racket",
            "code": "(define/contract (num-subarrays-with-sum nums goal)\r\n  (-> (listof exact-integer?) exact-integer? exact-integer?)\r\n\r\n  )"
          }
        ],
        "stats": "{\"totalAccepted\": \"203.9K\", \"totalSubmission\": \"330.4K\", \"totalAcceptedRaw\": 203936, \"totalSubmissionRaw\": 330374, \"acRate\": \"61.7%\"}",
        "hints": [],
        "solution": {
          "id": "2266",
          "canSeeDetail": true,
          "paidOnly": false,
          "hasVideoSolution": false,
          "paidOnlyVideo": true
        },
        "status": null,
        "sampleTestCase": "[1,0,1,0,1]\n2",
        "metaData": "{\n  \"name\": \"numSubarraysWithSum\",\n  \"params\": [\n    {\n      \"name\": \"nums\",\n      \"type\": \"integer[]\"\n    },\n    {\n      \"name\": \"goal\",\n      \"type\": \"integer\"\n    }\n  ],\n  \"return\": {\n    \"type\": \"integer\"\n  }\n}",
        "judgerAvailable": true,
        "judgeType": "large",
        "mysqlSchemas": [],
        "enableRunCode": true,
        "enableTestMode": false,
        "enableDebugger": true,
        "envInfo": "{\"cpp\": [\"C++\", \"<p>Compiled with <code> clang 17 </code> using the latest C++ 20 standard, and <code>libstdc++</code> provided by GCC 11.</p>\\r\\n\\r\\n<p>Your code is compiled with level two optimization (<code>-O2</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"java\": [\"Java\", \"<p><code>OpenJDK 21</code>. Using compile arguments: <code>--enable-preview --release 21</code></p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n<p>Includes <code>Pair</code> class from https://docs.oracle.com/javase/8/javafx/api/javafx/util/Pair.html.</p>\"], \"python\": [\"Python\", \"<p><code>Python 2.7.12</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\\r\\n\\r\\n<p>Note that Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">will not be maintained past 2020</a>. For the latest Python, please choose Python3 instead.</p>\"], \"c\": [\"C\", \"<p>Compiled with <code>gcc 11</code> using the gnu11 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O2</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n\\r\\n<p>For hash table operations, you may use <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>. \\\"uthash.h\\\" is included by default. Below are some examples:</p>\\r\\n\\r\\n<p><b>1. Adding an item to a hash.</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. Looking up an item in a hash:</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. Deleting an item in a hash:</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p><a href=\\\"https://learn.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-12\\\" target=\\\"_blank\\\">C# 12</a> with .NET 8 runtime</p>\"], \"javascript\": [\"JavaScript\", \"<p><code>Node.js 20.10.0</code>.</p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES6 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\\r\\n\\r\\n<p>For Priority Queue / Queue data structures, you may use 5.4.0 version of <a href=\\\"https://github.com/datastructures-js/priority-queue/blob/v5/README.md\\\" target=\\\"_blank\\\">datastructures-js/priority-queue</a> and 4.2.3 version of <a href=\\\"https://github.com/datastructures-js/queue/tree/v4.2.3\\\" target=\\\"_blank\\\">datastructures-js/queue</a>.</p>\"], \"ruby\": [\"Ruby\", \"<p><code>Ruby 3.2</code></p>\\r\\n\\r\\n<p>Some common data structure implementations are provided in the Algorithms module: https://www.rubydoc.info/github/kanwei/algorithms/Algorithms</p>\"], \"swift\": [\"Swift\", \"<p><code>Swift 5.9</code>.</p>\\r\\n\\r\\n<p>You may use <a href=\\\"https://github.com/apple/swift-algorithms/tree/1.2.0\\\" target=\\\"_blank\\\">swift-algorithms 1.2.0</a> and <a href=\\\"https://github.com/apple/swift-collections/tree/1.0.6\\\" target=\\\"_blank\\\">swift-collections 1.0.6</a>.</p>\"], \"golang\": [\"Go\", \"<p><code>Go 1.21</code></p>\\r\\n<p>Support <a href=\\\"https://github.com/emirpasic/gods/tree/v1.18.1\\\" target=\\\"_blank\\\">https://godoc.org/github.com/emirpasic/gods@v1.18.1</a> library.</p>\"], \"python3\": [\"Python3\", \"<p><code>Python 3.11</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\"], \"scala\": [\"Scala\", \"<p><code>Scala 3.3.1</code>.</p>\"], \"kotlin\": [\"Kotlin\", \"<p><code>Kotlin 1.9.0</code>.</p>\\r\\n\\r\\n<p>We are using an experimental compiler provided by JetBrains.</p>\"], \"rust\": [\"Rust\", \"<p><code>Rust 1.74.1</code></p>\\r\\n\\r\\n<p>Supports <a href=\\\"https://crates.io/crates/rand\\\" target=\\\"_blank\\\">rand </a> v0.6\\u00a0from crates.io</p>\"], \"php\": [\"PHP\", \"<p><code>PHP 8.2</code>.</p>\\r\\n<p>With bcmath module</p>\"], \"typescript\": [\"Typescript\", \"<p><code>TypeScript 5.1.6, Node.js 20.10.0</code>.</p>\\r\\n\\r\\n<p>Compile Options: <code>--alwaysStrict --strictBindCallApply --strictFunctionTypes --target ES2022</code></p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES2022 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\"], \"racket\": [\"Racket\", \"<p><a href=\\\"https://docs.racket-lang.org/guide/performance.html#%28tech._c%29\\\" target=\\\"_blank\\\">Racket CS</a> v8.11</p>\\r\\n\\r\\n<p>Using <code>#lang racket</code></p>\\r\\n\\r\\n<p>Required <code>data/gvector data/queue data/order data/heap</code> automatically for your convenience</p>\"]}",
        "libraryUrl": null,
        "adminUrl": null,
        "challengeQuestion": {
          "id": "1692",
          "date": "2024-03-14",
          "incompleteChallengeCount": 0,
          "streakCount": 0,
          "type": "DAILY"
        },
        "note": null
      }
    }
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\index.ts
export { default as singleUser } from './singleUser.json';
export { default as recentSubmissions } from './recentSubmissions.json';
export { default as recentACSubmissions } from './recentAcSubmissionList.json';
export { default as singleUserContests } from './singleUserContests.json';
export { default as dailyProblem } from './dailyProblem.json';
export { default as problems } from './problems.json';
export { default as selectProblem } from './selectProblem.json';

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\problems.json
{
  "data": {
    "problemsetQuestionList": {
      "total": 3078,
      "questions": [
        {
          "acRate": 52.09288098160903,
          "difficulty": "Easy",
          "freqBar": null,
          "questionFrontendId": "1",
          "isFavor": false,
          "isPaidOnly": false,
          "status": null,
          "title": "Two Sum",
          "titleSlug": "two-sum",
          "topicTags": [
            { "name": "Array", "id": "VG9waWNUYWdOb2RlOjU=", "slug": "array" },
            {
              "name": "Hash Table",
              "id": "VG9waWNUYWdOb2RlOjY=",
              "slug": "hash-table"
            }
          ],
          "hasSolution": true,
          "hasVideoSolution": true
        }
      ]
    }
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\recentAcSubmissionList.json
{
  "data": {
    "recentAcSubmissionList": [
      {
        "title": "Generate a String With Characters That Have Odd Counts",
        "titleSlug": "generate-a-string-with-characters-that-have-odd-counts",
        "timestamp": "1705161771",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Count Negative Numbers in a Sorted Matrix",
        "titleSlug": "count-negative-numbers-in-a-sorted-matrix",
        "timestamp": "1705161438",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Check If N and Its Double Exist",
        "titleSlug": "check-if-n-and-its-double-exist",
        "timestamp": "1705161205",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Determine if String Halves Are Alike",
        "titleSlug": "determine-if-string-halves-are-alike",
        "timestamp": "1705032551",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343666",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Sort Array By Parity",
        "titleSlug": "sort-array-by-parity",
        "timestamp": "1704316936",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Convert an Array Into a 2D Array With Conditions",
        "titleSlug": "convert-an-array-into-a-2d-array-with-conditions",
        "timestamp": "1704261617",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Average Value of Even Numbers That Are Divisible by Three",
        "titleSlug": "average-value-of-even-numbers-that-are-divisible-by-three",
        "timestamp": "1704259967",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Number of Laser Beams in a Bank",
        "titleSlug": "number-of-laser-beams-in-a-bank",
        "timestamp": "1704256409",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Take Gifts From the Richest Pile",
        "titleSlug": "take-gifts-from-the-richest-pile",
        "timestamp": "1704252901",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Decompress Run-Length Encoded List",
        "titleSlug": "decompress-run-length-encoded-list",
        "timestamp": "1704236706",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Make Array Zero by Subtracting Equal Amounts",
        "titleSlug": "make-array-zero-by-subtracting-equal-amounts",
        "timestamp": "1704234483",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Remove One Element to Make the Array Strictly Increasing",
        "titleSlug": "remove-one-element-to-make-the-array-strictly-increasing",
        "timestamp": "1704228445",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Check if All A's Appears Before All B's",
        "titleSlug": "check-if-all-as-appears-before-all-bs",
        "timestamp": "1704223378",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Contains Duplicate II",
        "titleSlug": "contains-duplicate-ii",
        "timestamp": "1704222499",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Pascal's Triangle",
        "titleSlug": "pascals-triangle",
        "timestamp": "1704219156",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Make Array Zero by Subtracting Equal Amounts",
        "titleSlug": "make-array-zero-by-subtracting-equal-amounts",
        "timestamp": "1704216984",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Apply Transform Over Each Element in Array",
        "titleSlug": "apply-transform-over-each-element-in-array",
        "timestamp": "1704215794",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Find the Difference",
        "titleSlug": "find-the-difference",
        "timestamp": "1702492842",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Monotonic Array",
        "titleSlug": "monotonic-array",
        "timestamp": "1702417451",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      }
    ]
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\recentSubmissions.json
{
  "data": {
    "recentSubmissionList": [
      {
        "title": "Generate a String With Characters That Have Odd Counts",
        "titleSlug": "generate-a-string-with-characters-that-have-odd-counts",
        "timestamp": "1705161771",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Count Negative Numbers in a Sorted Matrix",
        "titleSlug": "count-negative-numbers-in-a-sorted-matrix",
        "timestamp": "1705161438",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Count Negative Numbers in a Sorted Matrix",
        "titleSlug": "count-negative-numbers-in-a-sorted-matrix",
        "timestamp": "1705161424",
        "statusDisplay": "Runtime Error",
        "lang": "javascript"
      },
      {
        "title": "Check If N and Its Double Exist",
        "titleSlug": "check-if-n-and-its-double-exist",
        "timestamp": "1705161205",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Check If N and Its Double Exist",
        "titleSlug": "check-if-n-and-its-double-exist",
        "timestamp": "1705161123",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Steps to Make Two Strings Anagram",
        "titleSlug": "minimum-number-of-steps-to-make-two-strings-anagram",
        "timestamp": "1705160304",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Determine if String Halves Are Alike",
        "titleSlug": "determine-if-string-halves-are-alike",
        "timestamp": "1705032551",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Longest Increasing Subsequence",
        "titleSlug": "longest-increasing-subsequence",
        "timestamp": "1704442672",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Longest Increasing Subsequence",
        "titleSlug": "longest-increasing-subsequence",
        "timestamp": "1704440871",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Longest Increasing Subsequence",
        "titleSlug": "longest-increasing-subsequence",
        "timestamp": "1704439843",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343666",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343585",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343426",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343413",
        "statusDisplay": "Runtime Error",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343387",
        "statusDisplay": "Runtime Error",
        "lang": "javascript"
      },
      {
        "title": "Sort Array By Parity",
        "titleSlug": "sort-array-by-parity",
        "timestamp": "1704316936",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Convert an Array Into a 2D Array With Conditions",
        "titleSlug": "convert-an-array-into-a-2d-array-with-conditions",
        "timestamp": "1704261617",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Convert an Array Into a 2D Array With Conditions",
        "titleSlug": "convert-an-array-into-a-2d-array-with-conditions",
        "timestamp": "1704261566",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Convert an Array Into a 2D Array With Conditions",
        "titleSlug": "convert-an-array-into-a-2d-array-with-conditions",
        "timestamp": "1704261530",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Average Value of Even Numbers That Are Divisible by Three",
        "titleSlug": "average-value-of-even-numbers-that-are-divisible-by-three",
        "timestamp": "1704259967",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      }
    ]
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\selectProblem.json
{
  "data": {
    "question": {
      "questionId": "1",
      "questionFrontendId": "1",
      "boundTopicId": null,
      "title": "Two Sum",
      "titleSlug": "two-sum",
      "content": "<p>Given an array of integers <code>nums</code>&nbsp;and an integer <code>target</code>, return <em>indices of the two numbers such that they add up to <code>target</code></em>.</p>\n\n<p>You may assume that each input would have <strong><em>exactly</em> one solution</strong>, and you may not use the <em>same</em> element twice.</p>\n\n<p>You can return the answer in any order.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,7,11,15], target = 9\n<strong>Output:</strong> [0,1]\n<strong>Explanation:</strong> Because nums[0] + nums[1] == 9, we return [0, 1].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,2,4], target = 6\n<strong>Output:</strong> [1,2]\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,3], target = 6\n<strong>Output:</strong> [0,1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= target &lt;= 10<sup>9</sup></code></li>\n\t<li><strong>Only one valid answer exists.</strong></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow-up:&nbsp;</strong>Can you come up with an algorithm that is less than <code>O(n<sup>2</sup>)</code><font face=\"monospace\">&nbsp;</font>time complexity?",
      "translatedTitle": null,
      "translatedContent": null,
      "isPaidOnly": false,
      "difficulty": "Easy",
      "likes": 55371,
      "dislikes": 1901,
      "isLiked": null,
      "similarQuestions": "[{\"title\": \"3Sum\", \"titleSlug\": \"3sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"4Sum\", \"titleSlug\": \"4sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Two Sum II - Input Array Is Sorted\", \"titleSlug\": \"two-sum-ii-input-array-is-sorted\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Two Sum III - Data structure design\", \"titleSlug\": \"two-sum-iii-data-structure-design\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Subarray Sum Equals K\", \"titleSlug\": \"subarray-sum-equals-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Two Sum IV - Input is a BST\", \"titleSlug\": \"two-sum-iv-input-is-a-bst\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Two Sum Less Than K\", \"titleSlug\": \"two-sum-less-than-k\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Max Number of K-Sum Pairs\", \"titleSlug\": \"max-number-of-k-sum-pairs\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Good Meals\", \"titleSlug\": \"count-good-meals\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Number of Pairs With Absolute Difference K\", \"titleSlug\": \"count-number-of-pairs-with-absolute-difference-k\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Number of Pairs of Strings With Concatenation Equal to Target\", \"titleSlug\": \"number-of-pairs-of-strings-with-concatenation-equal-to-target\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find All K-Distant Indices in an Array\", \"titleSlug\": \"find-all-k-distant-indices-in-an-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"First Letter to Appear Twice\", \"titleSlug\": \"first-letter-to-appear-twice\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Number of Excellent Pairs\", \"titleSlug\": \"number-of-excellent-pairs\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Number of Arithmetic Triplets\", \"titleSlug\": \"number-of-arithmetic-triplets\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Node With Highest Edge Score\", \"titleSlug\": \"node-with-highest-edge-score\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Check Distances Between Same Letters\", \"titleSlug\": \"check-distances-between-same-letters\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find Subarrays With Equal Sum\", \"titleSlug\": \"find-subarrays-with-equal-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Largest Positive Integer That Exists With Its Negative\", \"titleSlug\": \"largest-positive-integer-that-exists-with-its-negative\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Number of Distinct Averages\", \"titleSlug\": \"number-of-distinct-averages\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Count Pairs Whose Sum is Less than Target\", \"titleSlug\": \"count-pairs-whose-sum-is-less-than-target\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
      "exampleTestcases": "[2,7,11,15]\n9\n[3,2,4]\n6\n[3,3]\n6",
      "contributors": [],
      "topicTags": [
        { "name": "Array", "slug": "array", "translatedName": null },
        { "name": "Hash Table", "slug": "hash-table", "translatedName": null }
      ],
      "companyTagStats": null,
      "codeSnippets": [
        {
          "lang": "C++",
          "langSlug": "cpp",
          "code": "class Solution {\npublic:\n    vector<int> twoSum(vector<int>& nums, int target) {\n        \n    }\n};"
        },
        {
          "lang": "Java",
          "langSlug": "java",
          "code": "class Solution {\n    public int[] twoSum(int[] nums, int target) {\n        \n    }\n}"
        },
        {
          "lang": "Python",
          "langSlug": "python",
          "code": "class Solution(object):\n    def twoSum(self, nums, target):\n        \"\"\"\n        :type nums: List[int]\n        :type target: int\n        :rtype: List[int]\n        \"\"\"\n        "
        },
        {
          "lang": "Python3",
          "langSlug": "python3",
          "code": "class Solution:\n    def twoSum(self, nums: List[int], target: int) -> List[int]:\n        "
        },
        {
          "lang": "C",
          "langSlug": "c",
          "code": "/**\n * Note: The returned array must be malloced, assume caller calls free().\n */\nint* twoSum(int* nums, int numsSize, int target, int* returnSize) {\n    \n}"
        },
        {
          "lang": "C#",
          "langSlug": "csharp",
          "code": "public class Solution {\n    public int[] TwoSum(int[] nums, int target) {\n        \n    }\n}"
        },
        {
          "lang": "JavaScript",
          "langSlug": "javascript",
          "code": "/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nvar twoSum = function(nums, target) {\n    \n};"
        },
        {
          "lang": "TypeScript",
          "langSlug": "typescript",
          "code": "function twoSum(nums: number[], target: number): number[] {\n    \n};"
        },
        {
          "lang": "PHP",
          "langSlug": "php",
          "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @param Integer $target\n     * @return Integer[]\n     */\n    function twoSum($nums, $target) {\n        \n    }\n}"
        },
        {
          "lang": "Swift",
          "langSlug": "swift",
          "code": "class Solution {\n    func twoSum(_ nums: [Int], _ target: Int) -> [Int] {\n        \n    }\n}"
        },
        {
          "lang": "Kotlin",
          "langSlug": "kotlin",
          "code": "class Solution {\n    fun twoSum(nums: IntArray, target: Int): IntArray {\n        \n    }\n}"
        },
        {
          "lang": "Dart",
          "langSlug": "dart",
          "code": "class Solution {\n  List<int> twoSum(List<int> nums, int target) {\n    \n  }\n}"
        },
        {
          "lang": "Go",
          "langSlug": "golang",
          "code": "func twoSum(nums []int, target int) []int {\n    \n}"
        },
        {
          "lang": "Ruby",
          "langSlug": "ruby",
          "code": "# @param {Integer[]} nums\n# @param {Integer} target\n# @return {Integer[]}\ndef two_sum(nums, target)\n    \nend"
        },
        {
          "lang": "Scala",
          "langSlug": "scala",
          "code": "object Solution {\n    def twoSum(nums: Array[Int], target: Int): Array[Int] = {\n        \n    }\n}"
        },
        {
          "lang": "Rust",
          "langSlug": "rust",
          "code": "impl Solution {\n    pub fn two_sum(nums: Vec<i32>, target: i32) -> Vec<i32> {\n        \n    }\n}"
        },
        {
          "lang": "Racket",
          "langSlug": "racket",
          "code": "(define/contract (two-sum nums target)\n  (-> (listof exact-integer?) exact-integer? (listof exact-integer?))\n  )"
        },
        {
          "lang": "Erlang",
          "langSlug": "erlang",
          "code": "-spec two_sum(Nums :: [integer()], Target :: integer()) -> [integer()].\ntwo_sum(Nums, Target) ->\n  ."
        },
        {
          "lang": "Elixir",
          "langSlug": "elixir",
          "code": "defmodule Solution do\n  @spec two_sum(nums :: [integer], target :: integer) :: [integer]\n  def two_sum(nums, target) do\n    \n  end\nend"
        }
      ],
      "stats": "{\"totalAccepted\": \"12.6M\", \"totalSubmission\": \"24.1M\", \"totalAcceptedRaw\": 12566379, \"totalSubmissionRaw\": 24123031, \"acRate\": \"52.1%\"}",
      "hints": [
        "A really brute force way would be to search for all possible pairs of numbers but that would be too slow. Again, it's best to try out brute force solutions for just for completeness. It is from these brute force solutions that you can come up with optimizations.",
        "So, if we fix one of the numbers, say <code>x</code>, we have to scan the entire array to find the next number <code>y</code> which is <code>value - x</code> where value is the input parameter. Can we change our array somehow so that this search becomes faster?",
        "The second train of thought is, without changing the array, can we use additional space somehow? Like maybe a hash map to speed up the search?"
      ],
      "solution": {
        "id": "7",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": true,
        "paidOnlyVideo": false
      },
      "status": null,
      "sampleTestCase": "[2,7,11,15]\n9",
      "metaData": "{\n  \"name\": \"twoSum\",\n  \"params\": [\n    {\n      \"name\": \"nums\",\n      \"type\": \"integer[]\"\n    },\n    {\n      \"name\": \"target\",\n      \"type\": \"integer\"\n    }\n  ],\n  \"return\": {\n    \"type\": \"integer[]\",\n    \"size\": 2\n  },\n  \"manual\": false\n}",
      "judgerAvailable": true,
      "judgeType": "small",
      "mysqlSchemas": [],
      "enableRunCode": true,
      "enableTestMode": false,
      "enableDebugger": true,
      "envInfo": "{\"cpp\": [\"C++\", \"<p>Compiled with <code> clang 17 </code> using the latest C++ 20 standard, and <code>libstdc++</code> provided by GCC 11.</p>\\r\\n\\r\\n<p>Your code is compiled with level two optimization (<code>-O2</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"java\": [\"Java\", \"<p><code>OpenJDK 21</code>. Using compile arguments: <code>--enable-preview --release 21</code></p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n<p>Includes <code>Pair</code> class from https://docs.oracle.com/javase/8/javafx/api/javafx/util/Pair.html.</p>\"], \"python\": [\"Python\", \"<p><code>Python 2.7.12</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\\r\\n\\r\\n<p>Note that Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">will not be maintained past 2020</a>. For the latest Python, please choose Python3 instead.</p>\"], \"c\": [\"C\", \"<p>Compiled with <code>gcc 11</code> using the gnu11 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O2</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n\\r\\n<p>For hash table operations, you may use <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>. \\\"uthash.h\\\" is included by default. Below are some examples:</p>\\r\\n\\r\\n<p><b>1. Adding an item to a hash.</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. Looking up an item in a hash:</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. Deleting an item in a hash:</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p><a href=\\\"https://learn.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-12\\\" target=\\\"_blank\\\">C# 12</a> with .NET 8 runtime</p>\"], \"javascript\": [\"JavaScript\", \"<p><code>Node.js 20.10.0</code>.</p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES6 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\\r\\n\\r\\n<p>For Priority Queue / Queue data structures, you may use 5.4.0 version of <a href=\\\"https://github.com/datastructures-js/priority-queue/blob/v5/README.md\\\" target=\\\"_blank\\\">datastructures-js/priority-queue</a> and 4.2.3 version of <a href=\\\"https://github.com/datastructures-js/queue/tree/v4.2.3\\\" target=\\\"_blank\\\">datastructures-js/queue</a>.</p>\"], \"ruby\": [\"Ruby\", \"<p><code>Ruby 3.2</code></p>\\r\\n\\r\\n<p>Some common data structure implementations are provided in the Algorithms module: https://www.rubydoc.info/github/kanwei/algorithms/Algorithms</p>\"], \"swift\": [\"Swift\", \"<p><code>Swift 5.9</code>.</p>\\r\\n\\r\\n<p>You may use <a href=\\\"https://github.com/apple/swift-algorithms/tree/1.2.0\\\" target=\\\"_blank\\\">swift-algorithms 1.2.0</a> and <a href=\\\"https://github.com/apple/swift-collections/tree/1.0.6\\\" target=\\\"_blank\\\">swift-collections 1.0.6</a>.</p>\"], \"golang\": [\"Go\", \"<p><code>Go 1.21</code></p>\\r\\n<p>Support <a href=\\\"https://github.com/emirpasic/gods/tree/v1.18.1\\\" target=\\\"_blank\\\">https://godoc.org/github.com/emirpasic/gods@v1.18.1</a> library.</p>\"], \"python3\": [\"Python3\", \"<p><code>Python 3.11</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\"], \"scala\": [\"Scala\", \"<p><code>Scala 3.3.1</code>.</p>\"], \"kotlin\": [\"Kotlin\", \"<p><code>Kotlin 1.9.0</code>.</p>\\r\\n\\r\\n<p>We are using an experimental compiler provided by JetBrains.</p>\"], \"rust\": [\"Rust\", \"<p><code>Rust 1.74.1</code></p>\\r\\n\\r\\n<p>Supports <a href=\\\"https://crates.io/crates/rand\\\" target=\\\"_blank\\\">rand </a> v0.6\\u00a0from crates.io</p>\"], \"php\": [\"PHP\", \"<p><code>PHP 8.2</code>.</p>\\r\\n<p>With bcmath module</p>\"], \"typescript\": [\"Typescript\", \"<p><code>TypeScript 5.1.6, Node.js 20.10.0</code>.</p>\\r\\n\\r\\n<p>Compile Options: <code>--alwaysStrict --strictBindCallApply --strictFunctionTypes --target ES2022</code></p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES2022 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\"], \"racket\": [\"Racket\", \"<p><a href=\\\"https://docs.racket-lang.org/guide/performance.html#%28tech._c%29\\\" target=\\\"_blank\\\">Racket CS</a> v8.11</p>\\r\\n\\r\\n<p>Using <code>#lang racket</code></p>\\r\\n\\r\\n<p>Required <code>data/gvector data/queue data/order data/heap</code> automatically for your convenience</p>\"], \"erlang\": [\"Erlang\", \"Erlang/OTP 26\"], \"elixir\": [\"Elixir\", \"Elixir 1.15 with Erlang/OTP 26\"], \"dart\": [\"Dart\", \"<p>Dart 3.2</p>\\r\\n\\r\\n<p>Your code will be run directly without compiling</p>\"]}",
      "libraryUrl": null,
      "adminUrl": null,
      "challengeQuestion": null,
      "note": null
    }
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\singleUser.json
{
  "data": {
    "matchedUser": {
      "submissionCalendar": "{\"1704153600\": 24, \"1704240000\": 9, \"1704326400\": 5, \"1704412800\": 3, \"1705017600\": 1, \"1705104000\": 6, \"1699315200\": 46, \"1701302400\": 6, \"1701648000\": 24, \"1701734400\": 11, \"1702339200\": 29, \"1702425600\": 7}",
      "submitStats": {
        "totalSubmissionNum": [
          { "difficulty": "All", "count": 158, "submissions": 463 },
          { "difficulty": "Easy", "count": 131, "submissions": 388 },
          { "difficulty": "Medium", "count": 27, "submissions": 75 },
          { "difficulty": "Hard", "count": 0, "submissions": 0 }
        ],
        "acSubmissionNum": [
          { "difficulty": "All", "count": 133, "submissions": 215 },
          { "difficulty": "Easy", "count": 122, "submissions": 202 },
          { "difficulty": "Medium", "count": 11, "submissions": 13 },
          { "difficulty": "Hard", "count": 0, "submissions": 0 }
        ]
      },
      "username": "jambobjones",
      "githubUrl": "https://github.com/jambobjones",
      "twitterUrl": null,
      "linkedinUrl": null,
      "contributions": {
        "points": 115,
        "questionCount": 0,
        "testcaseCount": 0
      },
      "profile": {
        "realName": "Jambob Jones",
        "userAvatar": "https://assets.leetcode.com/users/jambobjones/avatar_1617850141.png",
        "birthday": null,
        "ranking": 630800,
        "reputation": 0,
        "websites": [],
        "countryName": null,
        "company": null,
        "school": null,
        "skillTags": [],
        "aboutMe": "",
        "starRating": 2
      },
      "badges": [],
      "upcomingBadges": [
        {
          "name": "Mar LeetCoding Challenge",
          "icon": "/static/images/badges/dcc-2024-3.png"
        }
      ],
      "activeBadge": null
    }
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\singleUserContests.json
{
  "data": {
    "userContestRanking": null,
    "userContestRankingHistory": [
      {
        "attended": false,
        "rating": 1500,
        "ranking": 0,
        "trendDirection": "NONE",
        "problemsSolved": 0,
        "totalProblems": 3,
        "finishTimeInSeconds": 0
      }
    ]
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\problemData.spec.ts
import request from 'supertest';
import assert from 'assert';
import app from '../app';

describe('Problem Data Tests', () => {
  it('Should fetch the daily problem', async () => {
    const response = await request(app).get('/daily');
    [
      'questionLink',
      'date',
      'questionId',
      'questionFrontendId',
      'questionTitle',
      'titleSlug',
      'difficulty',
      'isPaidOnly',
      'question',
      'exampleTestcases',
      'topicTags',
      'hints',
      'solution',
      'companyTagStats',
      'likes',
      'dislikes',
      'similarQuestions',
    ].forEach((key) => {
      assert(key in response.body);
    });
  });

  it('Should fetch a list of problems', async () => {
    const response = await request(app).get('/problems');
    ['totalQuestions', 'count', 'problemsetQuestionList'].forEach((key) => {
      assert(key in response.body);
    });
  });

  it('Should Select a Problem', async () => {
    const response = await request(app).get('/select?titleSlug=two-sum');
    [
      'link',
      'questionId',
      'questionFrontendId',
      'questionTitle',
      'titleSlug',
      'difficulty',
      'isPaidOnly',
      'question',
      'exampleTestcases',
      'topicTags',
      'hints',
      'solution',
      'companyTagStats',
      'likes',
      'dislikes',
      'similarQuestions',
    ].forEach((key) => assert(key in response.body));
  });
});

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\userData.spec.ts
import request from 'supertest';
import app from '../app';
import assert from 'assert';

describe('User Data Tests', () => {
  it('should fetch a single user', async () => {
    const response = await request(app).get('/jambobjones');
    expect(response.body.username).toBe('jambobjones');
    [
      'username',
      'name',
      'birthday',
      'avatar',
      'ranking',
      'reputation',
      'gitHub',
      'twitter',
      'linkedIN',
      'website',
      'country',
      'company',
      'school',
      'skillTags',
      'about',
    ].forEach((key) => {
      assert(key in response.body);
    });
  });

  it('should fetch user badges', async () => {
    const response = await request(app).get('/jambobjones/badges');

    ['badgesCount', 'badges', 'upcomingBadges', 'activeBadge'].forEach(
      (key) => {
        assert(key in response.body);
      }
    );
  });

  it('Should fetch users solved problems', async () => {
    const response = await request(app).get('/jambobjones/solved');
    [
      'solvedProblem',
      'easySolved',
      'mediumSolved',
      'hardSolved',
      'totalSubmissionNum',
      'acSubmissionNum',
    ].forEach((key) => {
      assert(key in response.body);
    });
  });

  it('Should fetch users contests', async () => {
    const response = await request(app).get('/jambobjones/contest');
    ['contestParticipation'].forEach((key) => {
      assert(key in response.body);
    });
  });

  it('Should fetch user contest history', async () => {
    const response = await request(app).get('/jambobjones/contest/history');
    ['count', 'contestHistory'].forEach((key) => {
      assert(key in response.body);
    });
  });

  it('Should fetch users recent submissions returning 20 by default', async () => {
    const response = await request(app).get('/jambobjones/submission');
    ['count', 'submission'].forEach((key) => {
      assert(key in response.body);
    });

    expect(response.body.count).toBeLessThanOrEqual(20);
  });
  // Todo: Submission test with Limit Parameter

  it('Should fetch AC Submissions', async () => {
    const response = await request(app).get('/jambobjones/acSubmission');

    ['count', 'submission'].forEach((key) => {
      assert(key in response.body);
    });
    expect(response.body.count).toBeLessThanOrEqual(20);
  });

  it('Should fetch Users Submission Calendar', async () => {
    const response = await request(app).get('/jambobjones/calendar');
    assert('submissionCalendar' in response.body);
    expect(typeof response.body.submissionCalendar).toBe('string');
  });
});

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\dailyProblem.json
{
  "data": {
    "activeDailyCodingChallengeQuestion": {
      "date": "2024-03-14",
      "link": "/problems/binary-subarrays-with-sum/",
      "question": {
        "questionId": "966",
        "questionFrontendId": "930",
        "boundTopicId": null,
        "title": "Binary Subarrays With Sum",
        "titleSlug": "binary-subarrays-with-sum",
        "content": "<p>Given a binary array <code>nums</code> and an integer <code>goal</code>, return <em>the number of non-empty <strong>subarrays</strong> with a sum</em> <code>goal</code>.</p>\r\n\r\n<p>A <strong>subarray</strong> is a contiguous part of the array.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong class=\"example\">Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> nums = [1,0,1,0,1], goal = 2\r\n<strong>Output:</strong> 4\r\n<strong>Explanation:</strong> The 4 subarrays are bolded and underlined below:\r\n[<u><strong>1,0,1</strong></u>,0,1]\r\n[<u><strong>1,0,1,0</strong></u>,1]\r\n[1,<u><strong>0,1,0,1</strong></u>]\r\n[1,0,<u><strong>1,0,1</strong></u>]\r\n</pre>\r\n\r\n<p><strong class=\"example\">Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> nums = [0,0,0,0,0], goal = 0\r\n<strong>Output:</strong> 15\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= nums.length &lt;= 3 * 10<sup>4</sup></code></li>\r\n\t<li><code>nums[i]</code> is either <code>0</code> or <code>1</code>.</li>\r\n\t<li><code>0 &lt;= goal &lt;= nums.length</code></li>\r\n</ul>",
        "translatedTitle": null,
        "translatedContent": null,
        "isPaidOnly": false,
        "difficulty": "Medium",
        "likes": 3592,
        "dislikes": 120,
        "isLiked": null,
        "similarQuestions": "[{\"title\": \"Count Subarrays With Score Less Than K\", \"titleSlug\": \"count-subarrays-with-score-less-than-k\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Ways to Split Array Into Good Subarrays\", \"titleSlug\": \"ways-to-split-array-into-good-subarrays\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "exampleTestcases": "[1,0,1,0,1]\n2\n[0,0,0,0,0]\n0",
        "contributors": [],
        "topicTags": [
          { "name": "Array", "slug": "array", "translatedName": null },
          {
            "name": "Hash Table",
            "slug": "hash-table",
            "translatedName": null
          },
          {
            "name": "Sliding Window",
            "slug": "sliding-window",
            "translatedName": null
          },
          { "name": "Prefix Sum", "slug": "prefix-sum", "translatedName": null }
        ],
        "companyTagStats": null,
        "codeSnippets": [
          {
            "lang": "C++",
            "langSlug": "cpp",
            "code": "class Solution {\r\npublic:\r\n    int numSubarraysWithSum(vector<int>& nums, int goal) {\r\n        \r\n    }\r\n};"
          },
          {
            "lang": "Java",
            "langSlug": "java",
            "code": "class Solution {\r\n    public int numSubarraysWithSum(int[] nums, int goal) {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Python",
            "langSlug": "python",
            "code": "class Solution(object):\r\n    def numSubarraysWithSum(self, nums, goal):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :type goal: int\r\n        :rtype: int\r\n        \"\"\""
          },
          {
            "lang": "Python3",
            "langSlug": "python3",
            "code": "class Solution:\r\n    def numSubarraysWithSum(self, nums: List[int], goal: int) -> int:"
          },
          {
            "lang": "C",
            "langSlug": "c",
            "code": "int numSubarraysWithSum(int* nums, int numsSize, int goal){\r\n\r\n}"
          },
          {
            "lang": "C#",
            "langSlug": "csharp",
            "code": "public class Solution {\r\n    public int NumSubarraysWithSum(int[] nums, int goal) {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "JavaScript",
            "langSlug": "javascript",
            "code": "/**\r\n * @param {number[]} nums\r\n * @param {number} goal\r\n * @return {number}\r\n */\r\nvar numSubarraysWithSum = function(nums, goal) {\r\n    \r\n};"
          },
          {
            "lang": "TypeScript",
            "langSlug": "typescript",
            "code": "function numSubarraysWithSum(nums: number[], goal: number): number {\r\n\r\n};"
          },
          {
            "lang": "PHP",
            "langSlug": "php",
            "code": "class Solution {\r\n\r\n    /**\r\n     * @param Integer[] $nums\r\n     * @param Integer $goal\r\n     * @return Integer\r\n     */\r\n    function numSubarraysWithSum($nums, $goal) {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Swift",
            "langSlug": "swift",
            "code": "class Solution {\r\n    func numSubarraysWithSum(_ nums: [Int], _ goal: Int) -> Int {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Kotlin",
            "langSlug": "kotlin",
            "code": "class Solution {\r\n    fun numSubarraysWithSum(nums: IntArray, goal: Int): Int {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Go",
            "langSlug": "golang",
            "code": "func numSubarraysWithSum(nums []int, goal int) int {\r\n    \r\n}"
          },
          {
            "lang": "Ruby",
            "langSlug": "ruby",
            "code": "# @param {Integer[]} nums\r\n# @param {Integer} goal\r\n# @return {Integer}\r\ndef num_subarrays_with_sum(nums, goal)\r\n    \r\nend"
          },
          {
            "lang": "Scala",
            "langSlug": "scala",
            "code": "object Solution {\r\n    def numSubarraysWithSum(nums: Array[Int], goal: Int): Int = {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Rust",
            "langSlug": "rust",
            "code": "impl Solution {\r\n    pub fn num_subarrays_with_sum(nums: Vec<i32>, goal: i32) -> i32 {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Racket",
            "langSlug": "racket",
            "code": "(define/contract (num-subarrays-with-sum nums goal)\r\n  (-> (listof exact-integer?) exact-integer? exact-integer?)\r\n\r\n  )"
          }
        ],
        "stats": "{\"totalAccepted\": \"203.9K\", \"totalSubmission\": \"330.4K\", \"totalAcceptedRaw\": 203936, \"totalSubmissionRaw\": 330374, \"acRate\": \"61.7%\"}",
        "hints": [],
        "solution": {
          "id": "2266",
          "canSeeDetail": true,
          "paidOnly": false,
          "hasVideoSolution": false,
          "paidOnlyVideo": true
        },
        "status": null,
        "sampleTestCase": "[1,0,1,0,1]\n2",
        "metaData": "{\n  \"name\": \"numSubarraysWithSum\",\n  \"params\": [\n    {\n      \"name\": \"nums\",\n      \"type\": \"integer[]\"\n    },\n    {\n      \"name\": \"goal\",\n      \"type\": \"integer\"\n    }\n  ],\n  \"return\": {\n    \"type\": \"integer\"\n  }\n}",
        "judgerAvailable": true,
        "judgeType": "large",
        "mysqlSchemas": [],
        "enableRunCode": true,
        "enableTestMode": false,
        "enableDebugger": true,
        "envInfo": "{\"cpp\": [\"C++\", \"<p>Compiled with <code> clang 17 </code> using the latest C++ 20 standard, and <code>libstdc++</code> provided by GCC 11.</p>\\r\\n\\r\\n<p>Your code is compiled with level two optimization (<code>-O2</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"java\": [\"Java\", \"<p><code>OpenJDK 21</code>. Using compile arguments: <code>--enable-preview --release 21</code></p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n<p>Includes <code>Pair</code> class from https://docs.oracle.com/javase/8/javafx/api/javafx/util/Pair.html.</p>\"], \"python\": [\"Python\", \"<p><code>Python 2.7.12</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\\r\\n\\r\\n<p>Note that Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">will not be maintained past 2020</a>. For the latest Python, please choose Python3 instead.</p>\"], \"c\": [\"C\", \"<p>Compiled with <code>gcc 11</code> using the gnu11 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O2</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n\\r\\n<p>For hash table operations, you may use <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>. \\\"uthash.h\\\" is included by default. Below are some examples:</p>\\r\\n\\r\\n<p><b>1. Adding an item to a hash.</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. Looking up an item in a hash:</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. Deleting an item in a hash:</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p><a href=\\\"https://learn.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-12\\\" target=\\\"_blank\\\">C# 12</a> with .NET 8 runtime</p>\"], \"javascript\": [\"JavaScript\", \"<p><code>Node.js 20.10.0</code>.</p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES6 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\\r\\n\\r\\n<p>For Priority Queue / Queue data structures, you may use 5.4.0 version of <a href=\\\"https://github.com/datastructures-js/priority-queue/blob/v5/README.md\\\" target=\\\"_blank\\\">datastructures-js/priority-queue</a> and 4.2.3 version of <a href=\\\"https://github.com/datastructures-js/queue/tree/v4.2.3\\\" target=\\\"_blank\\\">datastructures-js/queue</a>.</p>\"], \"ruby\": [\"Ruby\", \"<p><code>Ruby 3.2</code></p>\\r\\n\\r\\n<p>Some common data structure implementations are provided in the Algorithms module: https://www.rubydoc.info/github/kanwei/algorithms/Algorithms</p>\"], \"swift\": [\"Swift\", \"<p><code>Swift 5.9</code>.</p>\\r\\n\\r\\n<p>You may use <a href=\\\"https://github.com/apple/swift-algorithms/tree/1.2.0\\\" target=\\\"_blank\\\">swift-algorithms 1.2.0</a> and <a href=\\\"https://github.com/apple/swift-collections/tree/1.0.6\\\" target=\\\"_blank\\\">swift-collections 1.0.6</a>.</p>\"], \"golang\": [\"Go\", \"<p><code>Go 1.21</code></p>\\r\\n<p>Support <a href=\\\"https://github.com/emirpasic/gods/tree/v1.18.1\\\" target=\\\"_blank\\\">https://godoc.org/github.com/emirpasic/gods@v1.18.1</a> library.</p>\"], \"python3\": [\"Python3\", \"<p><code>Python 3.11</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\"], \"scala\": [\"Scala\", \"<p><code>Scala 3.3.1</code>.</p>\"], \"kotlin\": [\"Kotlin\", \"<p><code>Kotlin 1.9.0</code>.</p>\\r\\n\\r\\n<p>We are using an experimental compiler provided by JetBrains.</p>\"], \"rust\": [\"Rust\", \"<p><code>Rust 1.74.1</code></p>\\r\\n\\r\\n<p>Supports <a href=\\\"https://crates.io/crates/rand\\\" target=\\\"_blank\\\">rand </a> v0.6\\u00a0from crates.io</p>\"], \"php\": [\"PHP\", \"<p><code>PHP 8.2</code>.</p>\\r\\n<p>With bcmath module</p>\"], \"typescript\": [\"Typescript\", \"<p><code>TypeScript 5.1.6, Node.js 20.10.0</code>.</p>\\r\\n\\r\\n<p>Compile Options: <code>--alwaysStrict --strictBindCallApply --strictFunctionTypes --target ES2022</code></p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES2022 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\"], \"racket\": [\"Racket\", \"<p><a href=\\\"https://docs.racket-lang.org/guide/performance.html#%28tech._c%29\\\" target=\\\"_blank\\\">Racket CS</a> v8.11</p>\\r\\n\\r\\n<p>Using <code>#lang racket</code></p>\\r\\n\\r\\n<p>Required <code>data/gvector data/queue data/order data/heap</code> automatically for your convenience</p>\"]}",
        "libraryUrl": null,
        "adminUrl": null,
        "challengeQuestion": {
          "id": "1692",
          "date": "2024-03-14",
          "incompleteChallengeCount": 0,
          "streakCount": 0,
          "type": "DAILY"
        },
        "note": null
      }
    }
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\index.ts
export { default as singleUser } from './singleUser.json';
export { default as recentSubmissions } from './recentSubmissions.json';
export { default as recentACSubmissions } from './recentAcSubmissionList.json';
export { default as singleUserContests } from './singleUserContests.json';
export { default as dailyProblem } from './dailyProblem.json';
export { default as problems } from './problems.json';
export { default as selectProblem } from './selectProblem.json';

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\problems.json
{
  "data": {
    "problemsetQuestionList": {
      "total": 3078,
      "questions": [
        {
          "acRate": 52.09288098160903,
          "difficulty": "Easy",
          "freqBar": null,
          "questionFrontendId": "1",
          "isFavor": false,
          "isPaidOnly": false,
          "status": null,
          "title": "Two Sum",
          "titleSlug": "two-sum",
          "topicTags": [
            { "name": "Array", "id": "VG9waWNUYWdOb2RlOjU=", "slug": "array" },
            {
              "name": "Hash Table",
              "id": "VG9waWNUYWdOb2RlOjY=",
              "slug": "hash-table"
            }
          ],
          "hasSolution": true,
          "hasVideoSolution": true
        }
      ]
    }
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\recentAcSubmissionList.json
{
  "data": {
    "recentAcSubmissionList": [
      {
        "title": "Generate a String With Characters That Have Odd Counts",
        "titleSlug": "generate-a-string-with-characters-that-have-odd-counts",
        "timestamp": "1705161771",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Count Negative Numbers in a Sorted Matrix",
        "titleSlug": "count-negative-numbers-in-a-sorted-matrix",
        "timestamp": "1705161438",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Check If N and Its Double Exist",
        "titleSlug": "check-if-n-and-its-double-exist",
        "timestamp": "1705161205",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Determine if String Halves Are Alike",
        "titleSlug": "determine-if-string-halves-are-alike",
        "timestamp": "1705032551",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343666",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Sort Array By Parity",
        "titleSlug": "sort-array-by-parity",
        "timestamp": "1704316936",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Convert an Array Into a 2D Array With Conditions",
        "titleSlug": "convert-an-array-into-a-2d-array-with-conditions",
        "timestamp": "1704261617",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Average Value of Even Numbers That Are Divisible by Three",
        "titleSlug": "average-value-of-even-numbers-that-are-divisible-by-three",
        "timestamp": "1704259967",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Number of Laser Beams in a Bank",
        "titleSlug": "number-of-laser-beams-in-a-bank",
        "timestamp": "1704256409",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Take Gifts From the Richest Pile",
        "titleSlug": "take-gifts-from-the-richest-pile",
        "timestamp": "1704252901",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Decompress Run-Length Encoded List",
        "titleSlug": "decompress-run-length-encoded-list",
        "timestamp": "1704236706",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Make Array Zero by Subtracting Equal Amounts",
        "titleSlug": "make-array-zero-by-subtracting-equal-amounts",
        "timestamp": "1704234483",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Remove One Element to Make the Array Strictly Increasing",
        "titleSlug": "remove-one-element-to-make-the-array-strictly-increasing",
        "timestamp": "1704228445",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Check if All A's Appears Before All B's",
        "titleSlug": "check-if-all-as-appears-before-all-bs",
        "timestamp": "1704223378",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Contains Duplicate II",
        "titleSlug": "contains-duplicate-ii",
        "timestamp": "1704222499",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Pascal's Triangle",
        "titleSlug": "pascals-triangle",
        "timestamp": "1704219156",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Make Array Zero by Subtracting Equal Amounts",
        "titleSlug": "make-array-zero-by-subtracting-equal-amounts",
        "timestamp": "1704216984",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Apply Transform Over Each Element in Array",
        "titleSlug": "apply-transform-over-each-element-in-array",
        "timestamp": "1704215794",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Find the Difference",
        "titleSlug": "find-the-difference",
        "timestamp": "1702492842",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Monotonic Array",
        "titleSlug": "monotonic-array",
        "timestamp": "1702417451",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      }
    ]
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\recentSubmissions.json
{
  "data": {
    "recentSubmissionList": [
      {
        "title": "Generate a String With Characters That Have Odd Counts",
        "titleSlug": "generate-a-string-with-characters-that-have-odd-counts",
        "timestamp": "1705161771",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Count Negative Numbers in a Sorted Matrix",
        "titleSlug": "count-negative-numbers-in-a-sorted-matrix",
        "timestamp": "1705161438",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Count Negative Numbers in a Sorted Matrix",
        "titleSlug": "count-negative-numbers-in-a-sorted-matrix",
        "timestamp": "1705161424",
        "statusDisplay": "Runtime Error",
        "lang": "javascript"
      },
      {
        "title": "Check If N and Its Double Exist",
        "titleSlug": "check-if-n-and-its-double-exist",
        "timestamp": "1705161205",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Check If N and Its Double Exist",
        "titleSlug": "check-if-n-and-its-double-exist",
        "timestamp": "1705161123",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Steps to Make Two Strings Anagram",
        "titleSlug": "minimum-number-of-steps-to-make-two-strings-anagram",
        "timestamp": "1705160304",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Determine if String Halves Are Alike",
        "titleSlug": "determine-if-string-halves-are-alike",
        "timestamp": "1705032551",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Longest Increasing Subsequence",
        "titleSlug": "longest-increasing-subsequence",
        "timestamp": "1704442672",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Longest Increasing Subsequence",
        "titleSlug": "longest-increasing-subsequence",
        "timestamp": "1704440871",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Longest Increasing Subsequence",
        "titleSlug": "longest-increasing-subsequence",
        "timestamp": "1704439843",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343666",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343585",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343426",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343413",
        "statusDisplay": "Runtime Error",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343387",
        "statusDisplay": "Runtime Error",
        "lang": "javascript"
      },
      {
        "title": "Sort Array By Parity",
        "titleSlug": "sort-array-by-parity",
        "timestamp": "1704316936",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Convert an Array Into a 2D Array With Conditions",
        "titleSlug": "convert-an-array-into-a-2d-array-with-conditions",
        "timestamp": "1704261617",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Convert an Array Into a 2D Array With Conditions",
        "titleSlug": "convert-an-array-into-a-2d-array-with-conditions",
        "timestamp": "1704261566",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Convert an Array Into a 2D Array With Conditions",
        "titleSlug": "convert-an-array-into-a-2d-array-with-conditions",
        "timestamp": "1704261530",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Average Value of Even Numbers That Are Divisible by Three",
        "titleSlug": "average-value-of-even-numbers-that-are-divisible-by-three",
        "timestamp": "1704259967",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      }
    ]
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\selectProblem.json
{
  "data": {
    "question": {
      "questionId": "1",
      "questionFrontendId": "1",
      "boundTopicId": null,
      "title": "Two Sum",
      "titleSlug": "two-sum",
      "content": "<p>Given an array of integers <code>nums</code>&nbsp;and an integer <code>target</code>, return <em>indices of the two numbers such that they add up to <code>target</code></em>.</p>\n\n<p>You may assume that each input would have <strong><em>exactly</em> one solution</strong>, and you may not use the <em>same</em> element twice.</p>\n\n<p>You can return the answer in any order.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,7,11,15], target = 9\n<strong>Output:</strong> [0,1]\n<strong>Explanation:</strong> Because nums[0] + nums[1] == 9, we return [0, 1].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,2,4], target = 6\n<strong>Output:</strong> [1,2]\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,3], target = 6\n<strong>Output:</strong> [0,1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= target &lt;= 10<sup>9</sup></code></li>\n\t<li><strong>Only one valid answer exists.</strong></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow-up:&nbsp;</strong>Can you come up with an algorithm that is less than <code>O(n<sup>2</sup>)</code><font face=\"monospace\">&nbsp;</font>time complexity?",
      "translatedTitle": null,
      "translatedContent": null,
      "isPaidOnly": false,
      "difficulty": "Easy",
      "likes": 55371,
      "dislikes": 1901,
      "isLiked": null,
      "similarQuestions": "[{\"title\": \"3Sum\", \"titleSlug\": \"3sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"4Sum\", \"titleSlug\": \"4sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Two Sum II - Input Array Is Sorted\", \"titleSlug\": \"two-sum-ii-input-array-is-sorted\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Two Sum III - Data structure design\", \"titleSlug\": \"two-sum-iii-data-structure-design\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Subarray Sum Equals K\", \"titleSlug\": \"subarray-sum-equals-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Two Sum IV - Input is a BST\", \"titleSlug\": \"two-sum-iv-input-is-a-bst\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Two Sum Less Than K\", \"titleSlug\": \"two-sum-less-than-k\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Max Number of K-Sum Pairs\", \"titleSlug\": \"max-number-of-k-sum-pairs\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Good Meals\", \"titleSlug\": \"count-good-meals\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Number of Pairs With Absolute Difference K\", \"titleSlug\": \"count-number-of-pairs-with-absolute-difference-k\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Number of Pairs of Strings With Concatenation Equal to Target\", \"titleSlug\": \"number-of-pairs-of-strings-with-concatenation-equal-to-target\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find All K-Distant Indices in an Array\", \"titleSlug\": \"find-all-k-distant-indices-in-an-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"First Letter to Appear Twice\", \"titleSlug\": \"first-letter-to-appear-twice\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Number of Excellent Pairs\", \"titleSlug\": \"number-of-excellent-pairs\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Number of Arithmetic Triplets\", \"titleSlug\": \"number-of-arithmetic-triplets\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Node With Highest Edge Score\", \"titleSlug\": \"node-with-highest-edge-score\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Check Distances Between Same Letters\", \"titleSlug\": \"check-distances-between-same-letters\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find Subarrays With Equal Sum\", \"titleSlug\": \"find-subarrays-with-equal-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Largest Positive Integer That Exists With Its Negative\", \"titleSlug\": \"largest-positive-integer-that-exists-with-its-negative\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Number of Distinct Averages\", \"titleSlug\": \"number-of-distinct-averages\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Count Pairs Whose Sum is Less than Target\", \"titleSlug\": \"count-pairs-whose-sum-is-less-than-target\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
      "exampleTestcases": "[2,7,11,15]\n9\n[3,2,4]\n6\n[3,3]\n6",
      "contributors": [],
      "topicTags": [
        { "name": "Array", "slug": "array", "translatedName": null },
        { "name": "Hash Table", "slug": "hash-table", "translatedName": null }
      ],
      "companyTagStats": null,
      "codeSnippets": [
        {
          "lang": "C++",
          "langSlug": "cpp",
          "code": "class Solution {\npublic:\n    vector<int> twoSum(vector<int>& nums, int target) {\n        \n    }\n};"
        },
        {
          "lang": "Java",
          "langSlug": "java",
          "code": "class Solution {\n    public int[] twoSum(int[] nums, int target) {\n        \n    }\n}"
        },
        {
          "lang": "Python",
          "langSlug": "python",
          "code": "class Solution(object):\n    def twoSum(self, nums, target):\n        \"\"\"\n        :type nums: List[int]\n        :type target: int\n        :rtype: List[int]\n        \"\"\"\n        "
        },
        {
          "lang": "Python3",
          "langSlug": "python3",
          "code": "class Solution:\n    def twoSum(self, nums: List[int], target: int) -> List[int]:\n        "
        },
        {
          "lang": "C",
          "langSlug": "c",
          "code": "/**\n * Note: The returned array must be malloced, assume caller calls free().\n */\nint* twoSum(int* nums, int numsSize, int target, int* returnSize) {\n    \n}"
        },
        {
          "lang": "C#",
          "langSlug": "csharp",
          "code": "public class Solution {\n    public int[] TwoSum(int[] nums, int target) {\n        \n    }\n}"
        },
        {
          "lang": "JavaScript",
          "langSlug": "javascript",
          "code": "/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nvar twoSum = function(nums, target) {\n    \n};"
        },
        {
          "lang": "TypeScript",
          "langSlug": "typescript",
          "code": "function twoSum(nums: number[], target: number): number[] {\n    \n};"
        },
        {
          "lang": "PHP",
          "langSlug": "php",
          "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @param Integer $target\n     * @return Integer[]\n     */\n    function twoSum($nums, $target) {\n        \n    }\n}"
        },
        {
          "lang": "Swift",
          "langSlug": "swift",
          "code": "class Solution {\n    func twoSum(_ nums: [Int], _ target: Int) -> [Int] {\n        \n    }\n}"
        },
        {
          "lang": "Kotlin",
          "langSlug": "kotlin",
          "code": "class Solution {\n    fun twoSum(nums: IntArray, target: Int): IntArray {\n        \n    }\n}"
        },
        {
          "lang": "Dart",
          "langSlug": "dart",
          "code": "class Solution {\n  List<int> twoSum(List<int> nums, int target) {\n    \n  }\n}"
        },
        {
          "lang": "Go",
          "langSlug": "golang",
          "code": "func twoSum(nums []int, target int) []int {\n    \n}"
        },
        {
          "lang": "Ruby",
          "langSlug": "ruby",
          "code": "# @param {Integer[]} nums\n# @param {Integer} target\n# @return {Integer[]}\ndef two_sum(nums, target)\n    \nend"
        },
        {
          "lang": "Scala",
          "langSlug": "scala",
          "code": "object Solution {\n    def twoSum(nums: Array[Int], target: Int): Array[Int] = {\n        \n    }\n}"
        },
        {
          "lang": "Rust",
          "langSlug": "rust",
          "code": "impl Solution {\n    pub fn two_sum(nums: Vec<i32>, target: i32) -> Vec<i32> {\n        \n    }\n}"
        },
        {
          "lang": "Racket",
          "langSlug": "racket",
          "code": "(define/contract (two-sum nums target)\n  (-> (listof exact-integer?) exact-integer? (listof exact-integer?))\n  )"
        },
        {
          "lang": "Erlang",
          "langSlug": "erlang",
          "code": "-spec two_sum(Nums :: [integer()], Target :: integer()) -> [integer()].\ntwo_sum(Nums, Target) ->\n  ."
        },
        {
          "lang": "Elixir",
          "langSlug": "elixir",
          "code": "defmodule Solution do\n  @spec two_sum(nums :: [integer], target :: integer) :: [integer]\n  def two_sum(nums, target) do\n    \n  end\nend"
        }
      ],
      "stats": "{\"totalAccepted\": \"12.6M\", \"totalSubmission\": \"24.1M\", \"totalAcceptedRaw\": 12566379, \"totalSubmissionRaw\": 24123031, \"acRate\": \"52.1%\"}",
      "hints": [
        "A really brute force way would be to search for all possible pairs of numbers but that would be too slow. Again, it's best to try out brute force solutions for just for completeness. It is from these brute force solutions that you can come up with optimizations.",
        "So, if we fix one of the numbers, say <code>x</code>, we have to scan the entire array to find the next number <code>y</code> which is <code>value - x</code> where value is the input parameter. Can we change our array somehow so that this search becomes faster?",
        "The second train of thought is, without changing the array, can we use additional space somehow? Like maybe a hash map to speed up the search?"
      ],
      "solution": {
        "id": "7",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": true,
        "paidOnlyVideo": false
      },
      "status": null,
      "sampleTestCase": "[2,7,11,15]\n9",
      "metaData": "{\n  \"name\": \"twoSum\",\n  \"params\": [\n    {\n      \"name\": \"nums\",\n      \"type\": \"integer[]\"\n    },\n    {\n      \"name\": \"target\",\n      \"type\": \"integer\"\n    }\n  ],\n  \"return\": {\n    \"type\": \"integer[]\",\n    \"size\": 2\n  },\n  \"manual\": false\n}",
      "judgerAvailable": true,
      "judgeType": "small",
      "mysqlSchemas": [],
      "enableRunCode": true,
      "enableTestMode": false,
      "enableDebugger": true,
      "envInfo": "{\"cpp\": [\"C++\", \"<p>Compiled with <code> clang 17 </code> using the latest C++ 20 standard, and <code>libstdc++</code> provided by GCC 11.</p>\\r\\n\\r\\n<p>Your code is compiled with level two optimization (<code>-O2</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"java\": [\"Java\", \"<p><code>OpenJDK 21</code>. Using compile arguments: <code>--enable-preview --release 21</code></p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n<p>Includes <code>Pair</code> class from https://docs.oracle.com/javase/8/javafx/api/javafx/util/Pair.html.</p>\"], \"python\": [\"Python\", \"<p><code>Python 2.7.12</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\\r\\n\\r\\n<p>Note that Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">will not be maintained past 2020</a>. For the latest Python, please choose Python3 instead.</p>\"], \"c\": [\"C\", \"<p>Compiled with <code>gcc 11</code> using the gnu11 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O2</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n\\r\\n<p>For hash table operations, you may use <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>. \\\"uthash.h\\\" is included by default. Below are some examples:</p>\\r\\n\\r\\n<p><b>1. Adding an item to a hash.</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. Looking up an item in a hash:</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. Deleting an item in a hash:</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p><a href=\\\"https://learn.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-12\\\" target=\\\"_blank\\\">C# 12</a> with .NET 8 runtime</p>\"], \"javascript\": [\"JavaScript\", \"<p><code>Node.js 20.10.0</code>.</p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES6 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\\r\\n\\r\\n<p>For Priority Queue / Queue data structures, you may use 5.4.0 version of <a href=\\\"https://github.com/datastructures-js/priority-queue/blob/v5/README.md\\\" target=\\\"_blank\\\">datastructures-js/priority-queue</a> and 4.2.3 version of <a href=\\\"https://github.com/datastructures-js/queue/tree/v4.2.3\\\" target=\\\"_blank\\\">datastructures-js/queue</a>.</p>\"], \"ruby\": [\"Ruby\", \"<p><code>Ruby 3.2</code></p>\\r\\n\\r\\n<p>Some common data structure implementations are provided in the Algorithms module: https://www.rubydoc.info/github/kanwei/algorithms/Algorithms</p>\"], \"swift\": [\"Swift\", \"<p><code>Swift 5.9</code>.</p>\\r\\n\\r\\n<p>You may use <a href=\\\"https://github.com/apple/swift-algorithms/tree/1.2.0\\\" target=\\\"_blank\\\">swift-algorithms 1.2.0</a> and <a href=\\\"https://github.com/apple/swift-collections/tree/1.0.6\\\" target=\\\"_blank\\\">swift-collections 1.0.6</a>.</p>\"], \"golang\": [\"Go\", \"<p><code>Go 1.21</code></p>\\r\\n<p>Support <a href=\\\"https://github.com/emirpasic/gods/tree/v1.18.1\\\" target=\\\"_blank\\\">https://godoc.org/github.com/emirpasic/gods@v1.18.1</a> library.</p>\"], \"python3\": [\"Python3\", \"<p><code>Python 3.11</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\"], \"scala\": [\"Scala\", \"<p><code>Scala 3.3.1</code>.</p>\"], \"kotlin\": [\"Kotlin\", \"<p><code>Kotlin 1.9.0</code>.</p>\\r\\n\\r\\n<p>We are using an experimental compiler provided by JetBrains.</p>\"], \"rust\": [\"Rust\", \"<p><code>Rust 1.74.1</code></p>\\r\\n\\r\\n<p>Supports <a href=\\\"https://crates.io/crates/rand\\\" target=\\\"_blank\\\">rand </a> v0.6\\u00a0from crates.io</p>\"], \"php\": [\"PHP\", \"<p><code>PHP 8.2</code>.</p>\\r\\n<p>With bcmath module</p>\"], \"typescript\": [\"Typescript\", \"<p><code>TypeScript 5.1.6, Node.js 20.10.0</code>.</p>\\r\\n\\r\\n<p>Compile Options: <code>--alwaysStrict --strictBindCallApply --strictFunctionTypes --target ES2022</code></p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES2022 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\"], \"racket\": [\"Racket\", \"<p><a href=\\\"https://docs.racket-lang.org/guide/performance.html#%28tech._c%29\\\" target=\\\"_blank\\\">Racket CS</a> v8.11</p>\\r\\n\\r\\n<p>Using <code>#lang racket</code></p>\\r\\n\\r\\n<p>Required <code>data/gvector data/queue data/order data/heap</code> automatically for your convenience</p>\"], \"erlang\": [\"Erlang\", \"Erlang/OTP 26\"], \"elixir\": [\"Elixir\", \"Elixir 1.15 with Erlang/OTP 26\"], \"dart\": [\"Dart\", \"<p>Dart 3.2</p>\\r\\n\\r\\n<p>Your code will be run directly without compiling</p>\"]}",
      "libraryUrl": null,
      "adminUrl": null,
      "challengeQuestion": null,
      "note": null
    }
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\singleUser.json
{
  "data": {
    "matchedUser": {
      "submissionCalendar": "{\"1704153600\": 24, \"1704240000\": 9, \"1704326400\": 5, \"1704412800\": 3, \"1705017600\": 1, \"1705104000\": 6, \"1699315200\": 46, \"1701302400\": 6, \"1701648000\": 24, \"1701734400\": 11, \"1702339200\": 29, \"1702425600\": 7}",
      "submitStats": {
        "totalSubmissionNum": [
          { "difficulty": "All", "count": 158, "submissions": 463 },
          { "difficulty": "Easy", "count": 131, "submissions": 388 },
          { "difficulty": "Medium", "count": 27, "submissions": 75 },
          { "difficulty": "Hard", "count": 0, "submissions": 0 }
        ],
        "acSubmissionNum": [
          { "difficulty": "All", "count": 133, "submissions": 215 },
          { "difficulty": "Easy", "count": 122, "submissions": 202 },
          { "difficulty": "Medium", "count": 11, "submissions": 13 },
          { "difficulty": "Hard", "count": 0, "submissions": 0 }
        ]
      },
      "username": "jambobjones",
      "githubUrl": "https://github.com/jambobjones",
      "twitterUrl": null,
      "linkedinUrl": null,
      "contributions": {
        "points": 115,
        "questionCount": 0,
        "testcaseCount": 0
      },
      "profile": {
        "realName": "Jambob Jones",
        "userAvatar": "https://assets.leetcode.com/users/jambobjones/avatar_1617850141.png",
        "birthday": null,
        "ranking": 630800,
        "reputation": 0,
        "websites": [],
        "countryName": null,
        "company": null,
        "school": null,
        "skillTags": [],
        "aboutMe": "",
        "starRating": 2
      },
      "badges": [],
      "upcomingBadges": [
        {
          "name": "Mar LeetCoding Challenge",
          "icon": "/static/images/badges/dcc-2024-3.png"
        }
      ],
      "activeBadge": null
    }
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\singleUserContests.json
{
  "data": {
    "userContestRanking": null,
    "userContestRankingHistory": [
      {
        "attended": false,
        "rating": 1500,
        "ranking": 0,
        "trendDirection": "NONE",
        "problemsSolved": 0,
        "totalProblems": 3,
        "finishTimeInSeconds": 0
      }
    ]
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\handlers.ts
import * as msw from 'msw';
import {
  singleUser,
  singleUserContests,
  recentSubmissions,
  recentACSubmissions,
  dailyProblem,
  problems,
  selectProblem,
} from './mockData';

export const handlers = [
  msw.http.post('https://leetcode.com/graphql', async (ctx) => {
    const test = await ctx.request.json();
    const typed = test as { query: string };
    if (typed.query.indexOf('getUserProfile') !== -1) {
      return msw.HttpResponse.json(singleUser);
    }

    if (typed.query.indexOf('getUserContestRanking') !== -1) {
      return msw.HttpResponse.json(singleUserContests);
    }

    if (typed.query.indexOf('getRecentSubmissions') !== -1) {
      return msw.HttpResponse.json(recentSubmissions);
    }

    if (typed.query.indexOf('getACSubmissions') !== -1) {
      return msw.HttpResponse.json(recentACSubmissions);
    }

    if (typed.query.indexOf('getDailyProblem') !== -1) {
      return msw.HttpResponse.json(dailyProblem);
    }

    if (typed.query.indexOf('getProblems') !== -1) {
      return msw.HttpResponse.json(problems);
    }

    if (typed.query.indexOf('selectProblem') !== -1) {
      return msw.HttpResponse.json(selectProblem);
    }

    return msw.HttpResponse.json({});
  }),
];

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\index.ts
import { setupServer } from 'msw/node';
import { handlers } from './handlers';

export const server = setupServer(...handlers);

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\dailyProblem.json
{
  "data": {
    "activeDailyCodingChallengeQuestion": {
      "date": "2024-03-14",
      "link": "/problems/binary-subarrays-with-sum/",
      "question": {
        "questionId": "966",
        "questionFrontendId": "930",
        "boundTopicId": null,
        "title": "Binary Subarrays With Sum",
        "titleSlug": "binary-subarrays-with-sum",
        "content": "<p>Given a binary array <code>nums</code> and an integer <code>goal</code>, return <em>the number of non-empty <strong>subarrays</strong> with a sum</em> <code>goal</code>.</p>\r\n\r\n<p>A <strong>subarray</strong> is a contiguous part of the array.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong class=\"example\">Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> nums = [1,0,1,0,1], goal = 2\r\n<strong>Output:</strong> 4\r\n<strong>Explanation:</strong> The 4 subarrays are bolded and underlined below:\r\n[<u><strong>1,0,1</strong></u>,0,1]\r\n[<u><strong>1,0,1,0</strong></u>,1]\r\n[1,<u><strong>0,1,0,1</strong></u>]\r\n[1,0,<u><strong>1,0,1</strong></u>]\r\n</pre>\r\n\r\n<p><strong class=\"example\">Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> nums = [0,0,0,0,0], goal = 0\r\n<strong>Output:</strong> 15\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= nums.length &lt;= 3 * 10<sup>4</sup></code></li>\r\n\t<li><code>nums[i]</code> is either <code>0</code> or <code>1</code>.</li>\r\n\t<li><code>0 &lt;= goal &lt;= nums.length</code></li>\r\n</ul>",
        "translatedTitle": null,
        "translatedContent": null,
        "isPaidOnly": false,
        "difficulty": "Medium",
        "likes": 3592,
        "dislikes": 120,
        "isLiked": null,
        "similarQuestions": "[{\"title\": \"Count Subarrays With Score Less Than K\", \"titleSlug\": \"count-subarrays-with-score-less-than-k\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Ways to Split Array Into Good Subarrays\", \"titleSlug\": \"ways-to-split-array-into-good-subarrays\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "exampleTestcases": "[1,0,1,0,1]\n2\n[0,0,0,0,0]\n0",
        "contributors": [],
        "topicTags": [
          { "name": "Array", "slug": "array", "translatedName": null },
          {
            "name": "Hash Table",
            "slug": "hash-table",
            "translatedName": null
          },
          {
            "name": "Sliding Window",
            "slug": "sliding-window",
            "translatedName": null
          },
          { "name": "Prefix Sum", "slug": "prefix-sum", "translatedName": null }
        ],
        "companyTagStats": null,
        "codeSnippets": [
          {
            "lang": "C++",
            "langSlug": "cpp",
            "code": "class Solution {\r\npublic:\r\n    int numSubarraysWithSum(vector<int>& nums, int goal) {\r\n        \r\n    }\r\n};"
          },
          {
            "lang": "Java",
            "langSlug": "java",
            "code": "class Solution {\r\n    public int numSubarraysWithSum(int[] nums, int goal) {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Python",
            "langSlug": "python",
            "code": "class Solution(object):\r\n    def numSubarraysWithSum(self, nums, goal):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :type goal: int\r\n        :rtype: int\r\n        \"\"\""
          },
          {
            "lang": "Python3",
            "langSlug": "python3",
            "code": "class Solution:\r\n    def numSubarraysWithSum(self, nums: List[int], goal: int) -> int:"
          },
          {
            "lang": "C",
            "langSlug": "c",
            "code": "int numSubarraysWithSum(int* nums, int numsSize, int goal){\r\n\r\n}"
          },
          {
            "lang": "C#",
            "langSlug": "csharp",
            "code": "public class Solution {\r\n    public int NumSubarraysWithSum(int[] nums, int goal) {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "JavaScript",
            "langSlug": "javascript",
            "code": "/**\r\n * @param {number[]} nums\r\n * @param {number} goal\r\n * @return {number}\r\n */\r\nvar numSubarraysWithSum = function(nums, goal) {\r\n    \r\n};"
          },
          {
            "lang": "TypeScript",
            "langSlug": "typescript",
            "code": "function numSubarraysWithSum(nums: number[], goal: number): number {\r\n\r\n};"
          },
          {
            "lang": "PHP",
            "langSlug": "php",
            "code": "class Solution {\r\n\r\n    /**\r\n     * @param Integer[] $nums\r\n     * @param Integer $goal\r\n     * @return Integer\r\n     */\r\n    function numSubarraysWithSum($nums, $goal) {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Swift",
            "langSlug": "swift",
            "code": "class Solution {\r\n    func numSubarraysWithSum(_ nums: [Int], _ goal: Int) -> Int {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Kotlin",
            "langSlug": "kotlin",
            "code": "class Solution {\r\n    fun numSubarraysWithSum(nums: IntArray, goal: Int): Int {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Go",
            "langSlug": "golang",
            "code": "func numSubarraysWithSum(nums []int, goal int) int {\r\n    \r\n}"
          },
          {
            "lang": "Ruby",
            "langSlug": "ruby",
            "code": "# @param {Integer[]} nums\r\n# @param {Integer} goal\r\n# @return {Integer}\r\ndef num_subarrays_with_sum(nums, goal)\r\n    \r\nend"
          },
          {
            "lang": "Scala",
            "langSlug": "scala",
            "code": "object Solution {\r\n    def numSubarraysWithSum(nums: Array[Int], goal: Int): Int = {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Rust",
            "langSlug": "rust",
            "code": "impl Solution {\r\n    pub fn num_subarrays_with_sum(nums: Vec<i32>, goal: i32) -> i32 {\r\n        \r\n    }\r\n}"
          },
          {
            "lang": "Racket",
            "langSlug": "racket",
            "code": "(define/contract (num-subarrays-with-sum nums goal)\r\n  (-> (listof exact-integer?) exact-integer? exact-integer?)\r\n\r\n  )"
          }
        ],
        "stats": "{\"totalAccepted\": \"203.9K\", \"totalSubmission\": \"330.4K\", \"totalAcceptedRaw\": 203936, \"totalSubmissionRaw\": 330374, \"acRate\": \"61.7%\"}",
        "hints": [],
        "solution": {
          "id": "2266",
          "canSeeDetail": true,
          "paidOnly": false,
          "hasVideoSolution": false,
          "paidOnlyVideo": true
        },
        "status": null,
        "sampleTestCase": "[1,0,1,0,1]\n2",
        "metaData": "{\n  \"name\": \"numSubarraysWithSum\",\n  \"params\": [\n    {\n      \"name\": \"nums\",\n      \"type\": \"integer[]\"\n    },\n    {\n      \"name\": \"goal\",\n      \"type\": \"integer\"\n    }\n  ],\n  \"return\": {\n    \"type\": \"integer\"\n  }\n}",
        "judgerAvailable": true,
        "judgeType": "large",
        "mysqlSchemas": [],
        "enableRunCode": true,
        "enableTestMode": false,
        "enableDebugger": true,
        "envInfo": "{\"cpp\": [\"C++\", \"<p>Compiled with <code> clang 17 </code> using the latest C++ 20 standard, and <code>libstdc++</code> provided by GCC 11.</p>\\r\\n\\r\\n<p>Your code is compiled with level two optimization (<code>-O2</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"java\": [\"Java\", \"<p><code>OpenJDK 21</code>. Using compile arguments: <code>--enable-preview --release 21</code></p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n<p>Includes <code>Pair</code> class from https://docs.oracle.com/javase/8/javafx/api/javafx/util/Pair.html.</p>\"], \"python\": [\"Python\", \"<p><code>Python 2.7.12</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\\r\\n\\r\\n<p>Note that Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">will not be maintained past 2020</a>. For the latest Python, please choose Python3 instead.</p>\"], \"c\": [\"C\", \"<p>Compiled with <code>gcc 11</code> using the gnu11 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O2</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n\\r\\n<p>For hash table operations, you may use <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>. \\\"uthash.h\\\" is included by default. Below are some examples:</p>\\r\\n\\r\\n<p><b>1. Adding an item to a hash.</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. Looking up an item in a hash:</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. Deleting an item in a hash:</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p><a href=\\\"https://learn.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-12\\\" target=\\\"_blank\\\">C# 12</a> with .NET 8 runtime</p>\"], \"javascript\": [\"JavaScript\", \"<p><code>Node.js 20.10.0</code>.</p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES6 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\\r\\n\\r\\n<p>For Priority Queue / Queue data structures, you may use 5.4.0 version of <a href=\\\"https://github.com/datastructures-js/priority-queue/blob/v5/README.md\\\" target=\\\"_blank\\\">datastructures-js/priority-queue</a> and 4.2.3 version of <a href=\\\"https://github.com/datastructures-js/queue/tree/v4.2.3\\\" target=\\\"_blank\\\">datastructures-js/queue</a>.</p>\"], \"ruby\": [\"Ruby\", \"<p><code>Ruby 3.2</code></p>\\r\\n\\r\\n<p>Some common data structure implementations are provided in the Algorithms module: https://www.rubydoc.info/github/kanwei/algorithms/Algorithms</p>\"], \"swift\": [\"Swift\", \"<p><code>Swift 5.9</code>.</p>\\r\\n\\r\\n<p>You may use <a href=\\\"https://github.com/apple/swift-algorithms/tree/1.2.0\\\" target=\\\"_blank\\\">swift-algorithms 1.2.0</a> and <a href=\\\"https://github.com/apple/swift-collections/tree/1.0.6\\\" target=\\\"_blank\\\">swift-collections 1.0.6</a>.</p>\"], \"golang\": [\"Go\", \"<p><code>Go 1.21</code></p>\\r\\n<p>Support <a href=\\\"https://github.com/emirpasic/gods/tree/v1.18.1\\\" target=\\\"_blank\\\">https://godoc.org/github.com/emirpasic/gods@v1.18.1</a> library.</p>\"], \"python3\": [\"Python3\", \"<p><code>Python 3.11</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\"], \"scala\": [\"Scala\", \"<p><code>Scala 3.3.1</code>.</p>\"], \"kotlin\": [\"Kotlin\", \"<p><code>Kotlin 1.9.0</code>.</p>\\r\\n\\r\\n<p>We are using an experimental compiler provided by JetBrains.</p>\"], \"rust\": [\"Rust\", \"<p><code>Rust 1.74.1</code></p>\\r\\n\\r\\n<p>Supports <a href=\\\"https://crates.io/crates/rand\\\" target=\\\"_blank\\\">rand </a> v0.6\\u00a0from crates.io</p>\"], \"php\": [\"PHP\", \"<p><code>PHP 8.2</code>.</p>\\r\\n<p>With bcmath module</p>\"], \"typescript\": [\"Typescript\", \"<p><code>TypeScript 5.1.6, Node.js 20.10.0</code>.</p>\\r\\n\\r\\n<p>Compile Options: <code>--alwaysStrict --strictBindCallApply --strictFunctionTypes --target ES2022</code></p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES2022 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\"], \"racket\": [\"Racket\", \"<p><a href=\\\"https://docs.racket-lang.org/guide/performance.html#%28tech._c%29\\\" target=\\\"_blank\\\">Racket CS</a> v8.11</p>\\r\\n\\r\\n<p>Using <code>#lang racket</code></p>\\r\\n\\r\\n<p>Required <code>data/gvector data/queue data/order data/heap</code> automatically for your convenience</p>\"]}",
        "libraryUrl": null,
        "adminUrl": null,
        "challengeQuestion": {
          "id": "1692",
          "date": "2024-03-14",
          "incompleteChallengeCount": 0,
          "streakCount": 0,
          "type": "DAILY"
        },
        "note": null
      }
    }
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\index.ts
export { default as singleUser } from './singleUser.json';
export { default as recentSubmissions } from './recentSubmissions.json';
export { default as recentACSubmissions } from './recentAcSubmissionList.json';
export { default as singleUserContests } from './singleUserContests.json';
export { default as dailyProblem } from './dailyProblem.json';
export { default as problems } from './problems.json';
export { default as selectProblem } from './selectProblem.json';

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\problems.json
{
  "data": {
    "problemsetQuestionList": {
      "total": 3078,
      "questions": [
        {
          "acRate": 52.09288098160903,
          "difficulty": "Easy",
          "freqBar": null,
          "questionFrontendId": "1",
          "isFavor": false,
          "isPaidOnly": false,
          "status": null,
          "title": "Two Sum",
          "titleSlug": "two-sum",
          "topicTags": [
            { "name": "Array", "id": "VG9waWNUYWdOb2RlOjU=", "slug": "array" },
            {
              "name": "Hash Table",
              "id": "VG9waWNUYWdOb2RlOjY=",
              "slug": "hash-table"
            }
          ],
          "hasSolution": true,
          "hasVideoSolution": true
        }
      ]
    }
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\recentAcSubmissionList.json
{
  "data": {
    "recentAcSubmissionList": [
      {
        "title": "Generate a String With Characters That Have Odd Counts",
        "titleSlug": "generate-a-string-with-characters-that-have-odd-counts",
        "timestamp": "1705161771",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Count Negative Numbers in a Sorted Matrix",
        "titleSlug": "count-negative-numbers-in-a-sorted-matrix",
        "timestamp": "1705161438",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Check If N and Its Double Exist",
        "titleSlug": "check-if-n-and-its-double-exist",
        "timestamp": "1705161205",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Determine if String Halves Are Alike",
        "titleSlug": "determine-if-string-halves-are-alike",
        "timestamp": "1705032551",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343666",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Sort Array By Parity",
        "titleSlug": "sort-array-by-parity",
        "timestamp": "1704316936",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Convert an Array Into a 2D Array With Conditions",
        "titleSlug": "convert-an-array-into-a-2d-array-with-conditions",
        "timestamp": "1704261617",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Average Value of Even Numbers That Are Divisible by Three",
        "titleSlug": "average-value-of-even-numbers-that-are-divisible-by-three",
        "timestamp": "1704259967",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Number of Laser Beams in a Bank",
        "titleSlug": "number-of-laser-beams-in-a-bank",
        "timestamp": "1704256409",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Take Gifts From the Richest Pile",
        "titleSlug": "take-gifts-from-the-richest-pile",
        "timestamp": "1704252901",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Decompress Run-Length Encoded List",
        "titleSlug": "decompress-run-length-encoded-list",
        "timestamp": "1704236706",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Make Array Zero by Subtracting Equal Amounts",
        "titleSlug": "make-array-zero-by-subtracting-equal-amounts",
        "timestamp": "1704234483",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Remove One Element to Make the Array Strictly Increasing",
        "titleSlug": "remove-one-element-to-make-the-array-strictly-increasing",
        "timestamp": "1704228445",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Check if All A's Appears Before All B's",
        "titleSlug": "check-if-all-as-appears-before-all-bs",
        "timestamp": "1704223378",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Contains Duplicate II",
        "titleSlug": "contains-duplicate-ii",
        "timestamp": "1704222499",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Pascal's Triangle",
        "titleSlug": "pascals-triangle",
        "timestamp": "1704219156",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Make Array Zero by Subtracting Equal Amounts",
        "titleSlug": "make-array-zero-by-subtracting-equal-amounts",
        "timestamp": "1704216984",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Apply Transform Over Each Element in Array",
        "titleSlug": "apply-transform-over-each-element-in-array",
        "timestamp": "1704215794",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Find the Difference",
        "titleSlug": "find-the-difference",
        "timestamp": "1702492842",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Monotonic Array",
        "titleSlug": "monotonic-array",
        "timestamp": "1702417451",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      }
    ]
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\recentSubmissions.json
{
  "data": {
    "recentSubmissionList": [
      {
        "title": "Generate a String With Characters That Have Odd Counts",
        "titleSlug": "generate-a-string-with-characters-that-have-odd-counts",
        "timestamp": "1705161771",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Count Negative Numbers in a Sorted Matrix",
        "titleSlug": "count-negative-numbers-in-a-sorted-matrix",
        "timestamp": "1705161438",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Count Negative Numbers in a Sorted Matrix",
        "titleSlug": "count-negative-numbers-in-a-sorted-matrix",
        "timestamp": "1705161424",
        "statusDisplay": "Runtime Error",
        "lang": "javascript"
      },
      {
        "title": "Check If N and Its Double Exist",
        "titleSlug": "check-if-n-and-its-double-exist",
        "timestamp": "1705161205",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Check If N and Its Double Exist",
        "titleSlug": "check-if-n-and-its-double-exist",
        "timestamp": "1705161123",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Steps to Make Two Strings Anagram",
        "titleSlug": "minimum-number-of-steps-to-make-two-strings-anagram",
        "timestamp": "1705160304",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Determine if String Halves Are Alike",
        "titleSlug": "determine-if-string-halves-are-alike",
        "timestamp": "1705032551",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Longest Increasing Subsequence",
        "titleSlug": "longest-increasing-subsequence",
        "timestamp": "1704442672",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Longest Increasing Subsequence",
        "titleSlug": "longest-increasing-subsequence",
        "timestamp": "1704440871",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Longest Increasing Subsequence",
        "titleSlug": "longest-increasing-subsequence",
        "timestamp": "1704439843",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343666",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343585",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343426",
        "statusDisplay": "Wrong Answer",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343413",
        "statusDisplay": "Runtime Error",
        "lang": "javascript"
      },
      {
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "timestamp": "1704343387",
        "statusDisplay": "Runtime Error",
        "lang": "javascript"
      },
      {
        "title": "Sort Array By Parity",
        "titleSlug": "sort-array-by-parity",
        "timestamp": "1704316936",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Convert an Array Into a 2D Array With Conditions",
        "titleSlug": "convert-an-array-into-a-2d-array-with-conditions",
        "timestamp": "1704261617",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Convert an Array Into a 2D Array With Conditions",
        "titleSlug": "convert-an-array-into-a-2d-array-with-conditions",
        "timestamp": "1704261566",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Convert an Array Into a 2D Array With Conditions",
        "titleSlug": "convert-an-array-into-a-2d-array-with-conditions",
        "timestamp": "1704261530",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      },
      {
        "title": "Average Value of Even Numbers That Are Divisible by Three",
        "titleSlug": "average-value-of-even-numbers-that-are-divisible-by-three",
        "timestamp": "1704259967",
        "statusDisplay": "Accepted",
        "lang": "javascript"
      }
    ]
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\selectProblem.json
{
  "data": {
    "question": {
      "questionId": "1",
      "questionFrontendId": "1",
      "boundTopicId": null,
      "title": "Two Sum",
      "titleSlug": "two-sum",
      "content": "<p>Given an array of integers <code>nums</code>&nbsp;and an integer <code>target</code>, return <em>indices of the two numbers such that they add up to <code>target</code></em>.</p>\n\n<p>You may assume that each input would have <strong><em>exactly</em> one solution</strong>, and you may not use the <em>same</em> element twice.</p>\n\n<p>You can return the answer in any order.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,7,11,15], target = 9\n<strong>Output:</strong> [0,1]\n<strong>Explanation:</strong> Because nums[0] + nums[1] == 9, we return [0, 1].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,2,4], target = 6\n<strong>Output:</strong> [1,2]\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,3], target = 6\n<strong>Output:</strong> [0,1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= target &lt;= 10<sup>9</sup></code></li>\n\t<li><strong>Only one valid answer exists.</strong></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow-up:&nbsp;</strong>Can you come up with an algorithm that is less than <code>O(n<sup>2</sup>)</code><font face=\"monospace\">&nbsp;</font>time complexity?",
      "translatedTitle": null,
      "translatedContent": null,
      "isPaidOnly": false,
      "difficulty": "Easy",
      "likes": 55371,
      "dislikes": 1901,
      "isLiked": null,
      "similarQuestions": "[{\"title\": \"3Sum\", \"titleSlug\": \"3sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"4Sum\", \"titleSlug\": \"4sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Two Sum II - Input Array Is Sorted\", \"titleSlug\": \"two-sum-ii-input-array-is-sorted\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Two Sum III - Data structure design\", \"titleSlug\": \"two-sum-iii-data-structure-design\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Subarray Sum Equals K\", \"titleSlug\": \"subarray-sum-equals-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Two Sum IV - Input is a BST\", \"titleSlug\": \"two-sum-iv-input-is-a-bst\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Two Sum Less Than K\", \"titleSlug\": \"two-sum-less-than-k\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Max Number of K-Sum Pairs\", \"titleSlug\": \"max-number-of-k-sum-pairs\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Good Meals\", \"titleSlug\": \"count-good-meals\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Number of Pairs With Absolute Difference K\", \"titleSlug\": \"count-number-of-pairs-with-absolute-difference-k\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Number of Pairs of Strings With Concatenation Equal to Target\", \"titleSlug\": \"number-of-pairs-of-strings-with-concatenation-equal-to-target\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find All K-Distant Indices in an Array\", \"titleSlug\": \"find-all-k-distant-indices-in-an-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"First Letter to Appear Twice\", \"titleSlug\": \"first-letter-to-appear-twice\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Number of Excellent Pairs\", \"titleSlug\": \"number-of-excellent-pairs\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Number of Arithmetic Triplets\", \"titleSlug\": \"number-of-arithmetic-triplets\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Node With Highest Edge Score\", \"titleSlug\": \"node-with-highest-edge-score\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Check Distances Between Same Letters\", \"titleSlug\": \"check-distances-between-same-letters\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find Subarrays With Equal Sum\", \"titleSlug\": \"find-subarrays-with-equal-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Largest Positive Integer That Exists With Its Negative\", \"titleSlug\": \"largest-positive-integer-that-exists-with-its-negative\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Number of Distinct Averages\", \"titleSlug\": \"number-of-distinct-averages\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Count Pairs Whose Sum is Less than Target\", \"titleSlug\": \"count-pairs-whose-sum-is-less-than-target\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
      "exampleTestcases": "[2,7,11,15]\n9\n[3,2,4]\n6\n[3,3]\n6",
      "contributors": [],
      "topicTags": [
        { "name": "Array", "slug": "array", "translatedName": null },
        { "name": "Hash Table", "slug": "hash-table", "translatedName": null }
      ],
      "companyTagStats": null,
      "codeSnippets": [
        {
          "lang": "C++",
          "langSlug": "cpp",
          "code": "class Solution {\npublic:\n    vector<int> twoSum(vector<int>& nums, int target) {\n        \n    }\n};"
        },
        {
          "lang": "Java",
          "langSlug": "java",
          "code": "class Solution {\n    public int[] twoSum(int[] nums, int target) {\n        \n    }\n}"
        },
        {
          "lang": "Python",
          "langSlug": "python",
          "code": "class Solution(object):\n    def twoSum(self, nums, target):\n        \"\"\"\n        :type nums: List[int]\n        :type target: int\n        :rtype: List[int]\n        \"\"\"\n        "
        },
        {
          "lang": "Python3",
          "langSlug": "python3",
          "code": "class Solution:\n    def twoSum(self, nums: List[int], target: int) -> List[int]:\n        "
        },
        {
          "lang": "C",
          "langSlug": "c",
          "code": "/**\n * Note: The returned array must be malloced, assume caller calls free().\n */\nint* twoSum(int* nums, int numsSize, int target, int* returnSize) {\n    \n}"
        },
        {
          "lang": "C#",
          "langSlug": "csharp",
          "code": "public class Solution {\n    public int[] TwoSum(int[] nums, int target) {\n        \n    }\n}"
        },
        {
          "lang": "JavaScript",
          "langSlug": "javascript",
          "code": "/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nvar twoSum = function(nums, target) {\n    \n};"
        },
        {
          "lang": "TypeScript",
          "langSlug": "typescript",
          "code": "function twoSum(nums: number[], target: number): number[] {\n    \n};"
        },
        {
          "lang": "PHP",
          "langSlug": "php",
          "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @param Integer $target\n     * @return Integer[]\n     */\n    function twoSum($nums, $target) {\n        \n    }\n}"
        },
        {
          "lang": "Swift",
          "langSlug": "swift",
          "code": "class Solution {\n    func twoSum(_ nums: [Int], _ target: Int) -> [Int] {\n        \n    }\n}"
        },
        {
          "lang": "Kotlin",
          "langSlug": "kotlin",
          "code": "class Solution {\n    fun twoSum(nums: IntArray, target: Int): IntArray {\n        \n    }\n}"
        },
        {
          "lang": "Dart",
          "langSlug": "dart",
          "code": "class Solution {\n  List<int> twoSum(List<int> nums, int target) {\n    \n  }\n}"
        },
        {
          "lang": "Go",
          "langSlug": "golang",
          "code": "func twoSum(nums []int, target int) []int {\n    \n}"
        },
        {
          "lang": "Ruby",
          "langSlug": "ruby",
          "code": "# @param {Integer[]} nums\n# @param {Integer} target\n# @return {Integer[]}\ndef two_sum(nums, target)\n    \nend"
        },
        {
          "lang": "Scala",
          "langSlug": "scala",
          "code": "object Solution {\n    def twoSum(nums: Array[Int], target: Int): Array[Int] = {\n        \n    }\n}"
        },
        {
          "lang": "Rust",
          "langSlug": "rust",
          "code": "impl Solution {\n    pub fn two_sum(nums: Vec<i32>, target: i32) -> Vec<i32> {\n        \n    }\n}"
        },
        {
          "lang": "Racket",
          "langSlug": "racket",
          "code": "(define/contract (two-sum nums target)\n  (-> (listof exact-integer?) exact-integer? (listof exact-integer?))\n  )"
        },
        {
          "lang": "Erlang",
          "langSlug": "erlang",
          "code": "-spec two_sum(Nums :: [integer()], Target :: integer()) -> [integer()].\ntwo_sum(Nums, Target) ->\n  ."
        },
        {
          "lang": "Elixir",
          "langSlug": "elixir",
          "code": "defmodule Solution do\n  @spec two_sum(nums :: [integer], target :: integer) :: [integer]\n  def two_sum(nums, target) do\n    \n  end\nend"
        }
      ],
      "stats": "{\"totalAccepted\": \"12.6M\", \"totalSubmission\": \"24.1M\", \"totalAcceptedRaw\": 12566379, \"totalSubmissionRaw\": 24123031, \"acRate\": \"52.1%\"}",
      "hints": [
        "A really brute force way would be to search for all possible pairs of numbers but that would be too slow. Again, it's best to try out brute force solutions for just for completeness. It is from these brute force solutions that you can come up with optimizations.",
        "So, if we fix one of the numbers, say <code>x</code>, we have to scan the entire array to find the next number <code>y</code> which is <code>value - x</code> where value is the input parameter. Can we change our array somehow so that this search becomes faster?",
        "The second train of thought is, without changing the array, can we use additional space somehow? Like maybe a hash map to speed up the search?"
      ],
      "solution": {
        "id": "7",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": true,
        "paidOnlyVideo": false
      },
      "status": null,
      "sampleTestCase": "[2,7,11,15]\n9",
      "metaData": "{\n  \"name\": \"twoSum\",\n  \"params\": [\n    {\n      \"name\": \"nums\",\n      \"type\": \"integer[]\"\n    },\n    {\n      \"name\": \"target\",\n      \"type\": \"integer\"\n    }\n  ],\n  \"return\": {\n    \"type\": \"integer[]\",\n    \"size\": 2\n  },\n  \"manual\": false\n}",
      "judgerAvailable": true,
      "judgeType": "small",
      "mysqlSchemas": [],
      "enableRunCode": true,
      "enableTestMode": false,
      "enableDebugger": true,
      "envInfo": "{\"cpp\": [\"C++\", \"<p>Compiled with <code> clang 17 </code> using the latest C++ 20 standard, and <code>libstdc++</code> provided by GCC 11.</p>\\r\\n\\r\\n<p>Your code is compiled with level two optimization (<code>-O2</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"java\": [\"Java\", \"<p><code>OpenJDK 21</code>. Using compile arguments: <code>--enable-preview --release 21</code></p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n<p>Includes <code>Pair</code> class from https://docs.oracle.com/javase/8/javafx/api/javafx/util/Pair.html.</p>\"], \"python\": [\"Python\", \"<p><code>Python 2.7.12</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\\r\\n\\r\\n<p>Note that Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">will not be maintained past 2020</a>. For the latest Python, please choose Python3 instead.</p>\"], \"c\": [\"C\", \"<p>Compiled with <code>gcc 11</code> using the gnu11 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O2</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n\\r\\n<p>For hash table operations, you may use <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>. \\\"uthash.h\\\" is included by default. Below are some examples:</p>\\r\\n\\r\\n<p><b>1. Adding an item to a hash.</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. Looking up an item in a hash:</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. Deleting an item in a hash:</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p><a href=\\\"https://learn.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-12\\\" target=\\\"_blank\\\">C# 12</a> with .NET 8 runtime</p>\"], \"javascript\": [\"JavaScript\", \"<p><code>Node.js 20.10.0</code>.</p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES6 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\\r\\n\\r\\n<p>For Priority Queue / Queue data structures, you may use 5.4.0 version of <a href=\\\"https://github.com/datastructures-js/priority-queue/blob/v5/README.md\\\" target=\\\"_blank\\\">datastructures-js/priority-queue</a> and 4.2.3 version of <a href=\\\"https://github.com/datastructures-js/queue/tree/v4.2.3\\\" target=\\\"_blank\\\">datastructures-js/queue</a>.</p>\"], \"ruby\": [\"Ruby\", \"<p><code>Ruby 3.2</code></p>\\r\\n\\r\\n<p>Some common data structure implementations are provided in the Algorithms module: https://www.rubydoc.info/github/kanwei/algorithms/Algorithms</p>\"], \"swift\": [\"Swift\", \"<p><code>Swift 5.9</code>.</p>\\r\\n\\r\\n<p>You may use <a href=\\\"https://github.com/apple/swift-algorithms/tree/1.2.0\\\" target=\\\"_blank\\\">swift-algorithms 1.2.0</a> and <a href=\\\"https://github.com/apple/swift-collections/tree/1.0.6\\\" target=\\\"_blank\\\">swift-collections 1.0.6</a>.</p>\"], \"golang\": [\"Go\", \"<p><code>Go 1.21</code></p>\\r\\n<p>Support <a href=\\\"https://github.com/emirpasic/gods/tree/v1.18.1\\\" target=\\\"_blank\\\">https://godoc.org/github.com/emirpasic/gods@v1.18.1</a> library.</p>\"], \"python3\": [\"Python3\", \"<p><code>Python 3.11</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\"], \"scala\": [\"Scala\", \"<p><code>Scala 3.3.1</code>.</p>\"], \"kotlin\": [\"Kotlin\", \"<p><code>Kotlin 1.9.0</code>.</p>\\r\\n\\r\\n<p>We are using an experimental compiler provided by JetBrains.</p>\"], \"rust\": [\"Rust\", \"<p><code>Rust 1.74.1</code></p>\\r\\n\\r\\n<p>Supports <a href=\\\"https://crates.io/crates/rand\\\" target=\\\"_blank\\\">rand </a> v0.6\\u00a0from crates.io</p>\"], \"php\": [\"PHP\", \"<p><code>PHP 8.2</code>.</p>\\r\\n<p>With bcmath module</p>\"], \"typescript\": [\"Typescript\", \"<p><code>TypeScript 5.1.6, Node.js 20.10.0</code>.</p>\\r\\n\\r\\n<p>Compile Options: <code>--alwaysStrict --strictBindCallApply --strictFunctionTypes --target ES2022</code></p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES2022 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\"], \"racket\": [\"Racket\", \"<p><a href=\\\"https://docs.racket-lang.org/guide/performance.html#%28tech._c%29\\\" target=\\\"_blank\\\">Racket CS</a> v8.11</p>\\r\\n\\r\\n<p>Using <code>#lang racket</code></p>\\r\\n\\r\\n<p>Required <code>data/gvector data/queue data/order data/heap</code> automatically for your convenience</p>\"], \"erlang\": [\"Erlang\", \"Erlang/OTP 26\"], \"elixir\": [\"Elixir\", \"Elixir 1.15 with Erlang/OTP 26\"], \"dart\": [\"Dart\", \"<p>Dart 3.2</p>\\r\\n\\r\\n<p>Your code will be run directly without compiling</p>\"]}",
      "libraryUrl": null,
      "adminUrl": null,
      "challengeQuestion": null,
      "note": null
    }
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\singleUser.json
{
  "data": {
    "matchedUser": {
      "submissionCalendar": "{\"1704153600\": 24, \"1704240000\": 9, \"1704326400\": 5, \"1704412800\": 3, \"1705017600\": 1, \"1705104000\": 6, \"1699315200\": 46, \"1701302400\": 6, \"1701648000\": 24, \"1701734400\": 11, \"1702339200\": 29, \"1702425600\": 7}",
      "submitStats": {
        "totalSubmissionNum": [
          { "difficulty": "All", "count": 158, "submissions": 463 },
          { "difficulty": "Easy", "count": 131, "submissions": 388 },
          { "difficulty": "Medium", "count": 27, "submissions": 75 },
          { "difficulty": "Hard", "count": 0, "submissions": 0 }
        ],
        "acSubmissionNum": [
          { "difficulty": "All", "count": 133, "submissions": 215 },
          { "difficulty": "Easy", "count": 122, "submissions": 202 },
          { "difficulty": "Medium", "count": 11, "submissions": 13 },
          { "difficulty": "Hard", "count": 0, "submissions": 0 }
        ]
      },
      "username": "jambobjones",
      "githubUrl": "https://github.com/jambobjones",
      "twitterUrl": null,
      "linkedinUrl": null,
      "contributions": {
        "points": 115,
        "questionCount": 0,
        "testcaseCount": 0
      },
      "profile": {
        "realName": "Jambob Jones",
        "userAvatar": "https://assets.leetcode.com/users/jambobjones/avatar_1617850141.png",
        "birthday": null,
        "ranking": 630800,
        "reputation": 0,
        "websites": [],
        "countryName": null,
        "company": null,
        "school": null,
        "skillTags": [],
        "aboutMe": "",
        "starRating": 2
      },
      "badges": [],
      "upcomingBadges": [
        {
          "name": "Mar LeetCoding Challenge",
          "icon": "/static/images/badges/dcc-2024-3.png"
        }
      ],
      "activeBadge": null
    }
  }
}

// File: \Users\pavan\Documents\GitHub\LeetCodeAPI\src\__tests__\msw\mockData\singleUserContests.json
{
  "data": {
    "userContestRanking": null,
    "userContestRankingHistory": [
      {
        "attended": false,
        "rating": 1500,
        "ranking": 0,
        "trendDirection": "NONE",
        "problemsSolved": 0,
        "totalProblems": 3,
        "finishTimeInSeconds": 0
      }
    ]
  }
}

